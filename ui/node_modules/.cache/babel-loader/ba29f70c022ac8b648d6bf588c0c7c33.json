{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js!/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js!/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/Switch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/Switch.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Transfer from '@/components/Transfer';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated';\nam4core.useTheme(am4themesAnimated);\nexport default {\n  components: {\n    Transfer: Transfer\n  },\n  props: ['fieldId', 'uiInfo', 'obs', 'device', 'item', 'path', 'type'],\n  data: function data() {\n    return {\n      chart: Function,\n      showDialog: false,\n      showChart: false\n    };\n  },\n  watch: {\n    uiInfo: function () {\n      var _uiInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(newValue, oldValue) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.makeChart();\n\n              case 2:\n                _context.next = 4;\n                return this.makeData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function uiInfo(_x, _x2) {\n        return _uiInfo.apply(this, arguments);\n      }\n\n      return uiInfo;\n    }(),\n    obs: {\n      deep: true,\n      handler: function handler() {\n        this.makeData();\n      }\n    },\n    device: {\n      deep: true,\n      handler: function handler() {\n        this.makeData();\n      }\n    }\n    /* obs (newValue, oldValue) {\r\n      this.makeData()\r\n    },\r\n    device (newValue, oldValue) {\r\n      this.makeData()\r\n    } */\n\n  },\n  methods: {\n    makeChart: function () {\n      var _makeChart = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var tempData, categoryAxis, valueAxis, series, valueLabel, categoryLabel;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                tempData = null;\n\n                if (this.type) {\n                  tempData = this.uiInfo[this.type];\n                } else {\n                  tempData = this.uiInfo;\n                }\n                /* if (Object.values(tempData).length === 0) {\r\n                  this.showChart = false\r\n                  return\r\n                } else {\r\n                  this.showChart = true\r\n                } */\n\n\n                _context2.next = 4;\n                return this.$nextTick();\n\n              case 4:\n                this.chart = am4core.create(this.$refs.chartdiv, am4charts.XYChart3D); // Create axes\n\n                categoryAxis = this.chart.yAxes.push(new am4charts.CategoryAxis());\n                categoryAxis.dataFields.category = 'category';\n                categoryAxis.numberFormatter.numberFormat = '#';\n                categoryAxis.renderer.inversed = true;\n                valueAxis = this.chart.xAxes.push(new am4charts.ValueAxis());\n                valueAxis.min = 0;\n                this.chart.xAxes.push(valueAxis); // Create series\n\n                series = this.chart.series.push(new am4charts.ColumnSeries3D());\n                series.dataFields.valueX = 'end';\n                series.dataFields.categoryY = 'category';\n                series.name = '';\n                series.columns.template.propertyFields.fill = 'color';\n                series.columns.template.tooltipText = '{category} {name}: [bold]{valueX}[/]';\n                series.columns.template.column3D.stroke = am4core.color('#fff');\n                series.columns.template.column3D.strokeOpacity = 0.2;\n                valueLabel = series.bullets.push(new am4charts.LabelBullet());\n                valueLabel.label.text = '{name}';\n                valueLabel.label.horizontalCenter = 'left';\n                valueLabel.label.dx = 0;\n                valueLabel.label.fill = am4core.color('#fff');\n                valueLabel.label.hideOversized = false;\n                valueLabel.label.truncate = false;\n                categoryLabel = series.bullets.push(new am4charts.LabelBullet());\n                categoryLabel.label.text = '{end}';\n                categoryLabel.label.horizontalCenter = 'right';\n                categoryLabel.label.dx = -10;\n                categoryLabel.label.hideOversized = false;\n                categoryLabel.label.fill = am4core.color('#fff');\n                categoryLabel.label.truncate = false;\n\n              case 34:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function makeChart() {\n        return _makeChart.apply(this, arguments);\n      }\n\n      return makeChart;\n    }(),\n    makeData: function makeData() {\n      var tempData = null;\n\n      if (this.type) {\n        tempData = this.uiInfo[this.type];\n      } else {\n        tempData = this.uiInfo;\n      }\n\n      var data = [];\n\n      for (var key in tempData.device) {\n        var name = '';\n\n        var _iterator = _createForOfIteratorHelper(this.device),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var device = _step.value;\n\n            // eslint-disable-next-line eqeqeq\n            if (device.id == key) {\n              name = device.name;\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        data.push({\n          category: name,\n          value: this.obs[tempData.device[key][0]].nvalue,\n          full: 100\n        });\n        data.push({\n          category: name,\n          end: this.obs[tempData.device[key][0]].nvalue,\n          color: this.chart.colors.next(),\n          color2: this.chart.colors.next()\n        });\n        this.showChart = true;\n      }\n\n      this.chart.data = data;\n    }\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.makeChart();\n\n            case 2:\n              _context3.next = 4;\n              return this.makeData();\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  beforeDestroy: function beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n};",{"version":3,"sources":["Switch.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div style=\"height:100%\">\r\n    <div style=\"display: flex;\">\r\n      <div>{{path === 'retractable' ? '개폐기 상태' : '스위치 상태' }}</div>\r\n      <div class=\"ml-auto el-icon-setting\" style=\"z-index: 1;\" @click=\"showDialog = true\"></div>\r\n    </div>\r\n    <div v-if=\"showChart\" ref=\"chartdiv\" style=\"height:90%\"></div>\r\n    <div v-else  style=\"height:100%;text-align: center;\">\r\n      <div style=\"margin: 0;top:50%;left:50%;position: absolute;-ms-transform: translateX(-50%) translateY(-50%);transform: translateX(-50%) translateY(-50%);\">\r\n        <img src=\"@/assets/img/nodata.png\" style=\"height:40px\"/>\r\n        <br><br>\r\n      <div>선택된 {{path === 'retractable' ? '개폐기' : '스위치'}} 데이터가 없습니다.</div>\r\n    </div>\r\n    </div>\r\n    <Transfer\r\n      :fieldId=\"fieldId\"\r\n      :path=\"['dashboard',path]\"\r\n      :uiInfo=\"uiInfo\"\r\n      :devices=\"item\"\r\n      :showDialog=\"showDialog\"\r\n      :closeDialog=\"()=>showDialog = false\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Transfer from '@/components/Transfer'\r\nimport * as am4core from '@amcharts/amcharts4/core'\r\nimport * as am4charts from '@amcharts/amcharts4/charts'\r\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated'\r\n\r\nam4core.useTheme(am4themesAnimated)\r\n\r\nexport default {\r\n  components: {\r\n    Transfer\r\n  },\r\n  props: ['fieldId', 'uiInfo', 'obs', 'device', 'item', 'path', 'type'],\r\n  data () {\r\n    return {\r\n      chart: Function,\r\n      showDialog: false,\r\n      showChart: false\r\n    }\r\n  },\r\n  watch: {\r\n    async uiInfo (newValue, oldValue) {\r\n      await this.makeChart()\r\n      await this.makeData()\r\n    },\r\n    obs: {\r\n      deep: true,\r\n      handler () {\r\n        this.makeData()\r\n      }\r\n    },\r\n    device: {\r\n      deep: true,\r\n      handler () {\r\n        this.makeData()\r\n      }\r\n    }\r\n\r\n    /* obs (newValue, oldValue) {\r\n      this.makeData()\r\n    },\r\n    device (newValue, oldValue) {\r\n      this.makeData()\r\n    } */\r\n  },\r\n  methods: {\r\n    async makeChart () {\r\n      let tempData = null\r\n      if (this.type) {\r\n        tempData = this.uiInfo[this.type]\r\n      } else {\r\n        tempData = this.uiInfo\r\n      }\r\n\r\n      /* if (Object.values(tempData).length === 0) {\r\n        this.showChart = false\r\n        return\r\n      } else {\r\n        this.showChart = true\r\n      } */\r\n\r\n      await this.$nextTick()\r\n      this.chart = am4core.create(this.$refs.chartdiv, am4charts.XYChart3D)\r\n\r\n      // Create axes\r\n      let categoryAxis = this.chart.yAxes.push(new am4charts.CategoryAxis())\r\n      categoryAxis.dataFields.category = 'category'\r\n      categoryAxis.numberFormatter.numberFormat = '#'\r\n      categoryAxis.renderer.inversed = true\r\n\r\n      let valueAxis = this.chart.xAxes.push(new am4charts.ValueAxis())\r\n      valueAxis.min = 0\r\n      this.chart.xAxes.push(valueAxis)\r\n\r\n      // Create series\r\n      let series = this.chart.series.push(new am4charts.ColumnSeries3D())\r\n      series.dataFields.valueX = 'end'\r\n      series.dataFields.categoryY = 'category'\r\n      series.name = ''\r\n      series.columns.template.propertyFields.fill = 'color'\r\n      series.columns.template.tooltipText =\r\n        '{category} {name}: [bold]{valueX}[/]'\r\n      series.columns.template.column3D.stroke = am4core.color('#fff')\r\n      series.columns.template.column3D.strokeOpacity = 0.2\r\n\r\n      let valueLabel = series.bullets.push(new am4charts.LabelBullet())\r\n      valueLabel.label.text = '{name}'\r\n      valueLabel.label.horizontalCenter = 'left'\r\n      valueLabel.label.dx = 0\r\n      valueLabel.label.fill = am4core.color('#fff')\r\n      valueLabel.label.hideOversized = false\r\n      valueLabel.label.truncate = false\r\n\r\n      let categoryLabel = series.bullets.push(new am4charts.LabelBullet())\r\n      categoryLabel.label.text = '{end}'\r\n      categoryLabel.label.horizontalCenter = 'right'\r\n      categoryLabel.label.dx = -10\r\n      categoryLabel.label.hideOversized = false\r\n      categoryLabel.label.fill = am4core.color('#fff')\r\n      categoryLabel.label.truncate = false\r\n    },\r\n    makeData () {\r\n      let tempData = null\r\n      if (this.type) {\r\n        tempData = this.uiInfo[this.type]\r\n      } else {\r\n        tempData = this.uiInfo\r\n      }\r\n\r\n      let data = []\r\n      for (const key in tempData.device) {\r\n        let name = ''\r\n        for (const device of this.device) {\r\n          // eslint-disable-next-line eqeqeq\r\n          if (device.id == key) {\r\n            name = device.name\r\n            break\r\n          }\r\n        }\r\n\r\n        data.push({\r\n          category: name,\r\n          value: this.obs[tempData.device[key][0]].nvalue,\r\n          full: 100\r\n        })\r\n        data.push({\r\n          category: name,\r\n          end: this.obs[tempData.device[key][0]].nvalue,\r\n          color: this.chart.colors.next(),\r\n          color2: this.chart.colors.next()\r\n        })\r\n        this.showChart = true\r\n      }\r\n      this.chart.data = data\r\n    }\r\n  },\r\n  async mounted () {\r\n    await this.makeChart()\r\n    await this.makeData()\r\n  },\r\n  beforeDestroy () {\r\n    if (this.chart) {\r\n      this.chart.dispose()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>\r\n"],"sourceRoot":"src/components"}]}