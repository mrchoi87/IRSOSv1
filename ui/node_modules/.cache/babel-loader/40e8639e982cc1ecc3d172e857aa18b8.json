{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js!/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js!/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/Gauge.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/Gauge.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated';\nam4core.useTheme(am4themesAnimated);\nexport default {\n  props: ['value'],\n  data: function data() {\n    return {\n      hand: Function\n    };\n  },\n  watch: {\n    value: function value(newValue, oldValue) {\n      this.hand.showValue(this.value, 1000, am4core.ease.cubicOut);\n    }\n  },\n  mounted: function mounted() {\n    var chart = am4core.create(this.$refs.chartdiv, am4charts.GaugeChart);\n    chart.innerRadius = am4core.percent(90);\n    chart.hiddenState.properties.opacity = 0;\n    var axis = chart.xAxes.push(new am4charts.ValueAxis());\n    axis.min = 0;\n    axis.max = 100;\n    axis.strictMinMax = true;\n    axis.renderer.inside = false;\n    axis.renderer.radius = am4core.percent(97);\n    axis.renderer.line.strokeOpacity = 1;\n    axis.renderer.line.strokeWidth = 1;\n    axis.renderer.line.stroke = chart.colors.getIndex(0);\n    axis.renderer.ticks.template.disabled = false;\n    axis.renderer.ticks.template.stroke = chart.colors.getIndex(0);\n    axis.renderer.ticks.template.strokeOpacity = 1;\n    axis.renderer.grid.template.disabled = true;\n    axis.renderer.ticks.template.length = 10;\n    axis.hiddenState.properties.opacity = 1;\n    axis.hiddenState.properties.visible = true;\n    axis.setStateOnChildren = true;\n    axis.renderer.hiddenState.properties.endAngle = 180;\n    /**\r\n     * Axis for ranges\r\n     */\n\n    var colorSet = new am4core.ColorSet();\n    var axis2 = chart.xAxes.push(new am4charts.ValueAxis());\n    axis2.min = 0;\n    axis2.max = 100;\n    axis2.renderer.innerRadius = 10;\n    axis2.strictMinMax = true;\n    axis2.renderer.labels.template.disabled = true;\n    axis2.renderer.ticks.template.disabled = true;\n    axis2.renderer.grid.template.disabled = true;\n    var range0 = axis2.axisRanges.create();\n    range0.value = 0;\n    range0.endValue = 50;\n    range0.axisFill.fillOpacity = 1;\n    range0.axisFill.fill = colorSet.getIndex(0);\n    var range1 = axis2.axisRanges.create();\n    range1.value = 50;\n    range1.endValue = 100;\n    range1.axisFill.fillOpacity = 1;\n    range1.axisFill.fill = colorSet.getIndex(8);\n    /**\r\n     * Label\r\n     */\n\n    var label = chart.radarContainer.createChild(am4core.Label);\n    label.fontSize = 20;\n    label.horizontalCenter = 'middle';\n    label.verticalCenter = 'bottom';\n    label.padding(10, 10, 30, 10);\n    label.text = '%';\n    /**\r\n     * Hand\r\n     */\n\n    this.hand = chart.hands.push(new am4charts.ClockHand());\n    this.hand.fill = axis.renderer.line.stroke;\n    this.hand.stroke = axis.renderer.line.stroke;\n    this.hand.axis = axis2;\n    this.hand.pin.radius = 5;\n    this.hand.startWidth = 5;\n    this.hand.events.on('propertychanged', function (ev) {\n      range0.endValue = ev.target.value;\n      range1.value = ev.target.value;\n      label.text = Math.floor(ev.target.value) + ' %';\n      axis2.invalidate();\n    });\n    this.hand.showValue(this.value, 1000, am4core.ease.cubicOut);\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n};",{"version":3,"sources":["Gauge.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div ref=\"chartdiv\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as am4core from '@amcharts/amcharts4/core'\r\nimport * as am4charts from '@amcharts/amcharts4/charts'\r\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated'\r\n\r\nam4core.useTheme(am4themesAnimated)\r\n\r\nexport default {\r\n  props: ['value'],\r\n  data () {\r\n    return {\r\n      hand: Function\r\n    }\r\n  },\r\n  watch: {\r\n    value (newValue, oldValue) {\r\n      this.hand.showValue(this.value, 1000, am4core.ease.cubicOut)\r\n    }\r\n  },\r\n  mounted () {\r\n    let chart = am4core.create(this.$refs.chartdiv, am4charts.GaugeChart)\r\n    chart.innerRadius = am4core.percent(90)\r\n\r\n    chart.hiddenState.properties.opacity = 0\r\n\r\n    let axis = chart.xAxes.push(new am4charts.ValueAxis())\r\n    axis.min = 0\r\n    axis.max = 100\r\n    axis.strictMinMax = true\r\n    axis.renderer.inside = false\r\n    axis.renderer.radius = am4core.percent(97)\r\n    axis.renderer.line.strokeOpacity = 1\r\n    axis.renderer.line.strokeWidth = 1\r\n    axis.renderer.line.stroke = chart.colors.getIndex(0)\r\n    axis.renderer.ticks.template.disabled = false\r\n    axis.renderer.ticks.template.stroke = chart.colors.getIndex(0)\r\n    axis.renderer.ticks.template.strokeOpacity = 1\r\n    axis.renderer.grid.template.disabled = true\r\n    axis.renderer.ticks.template.length = 10\r\n    axis.hiddenState.properties.opacity = 1\r\n    axis.hiddenState.properties.visible = true\r\n    axis.setStateOnChildren = true\r\n    axis.renderer.hiddenState.properties.endAngle = 180\r\n\r\n    /**\r\n     * Axis for ranges\r\n     */\r\n\r\n    let colorSet = new am4core.ColorSet()\r\n\r\n    let axis2 = chart.xAxes.push(new am4charts.ValueAxis())\r\n    axis2.min = 0\r\n    axis2.max = 100\r\n    axis2.renderer.innerRadius = 10\r\n    axis2.strictMinMax = true\r\n    axis2.renderer.labels.template.disabled = true\r\n    axis2.renderer.ticks.template.disabled = true\r\n    axis2.renderer.grid.template.disabled = true\r\n\r\n    let range0 = axis2.axisRanges.create()\r\n    range0.value = 0\r\n    range0.endValue = 50\r\n    range0.axisFill.fillOpacity = 1\r\n    range0.axisFill.fill = colorSet.getIndex(0)\r\n\r\n    let range1 = axis2.axisRanges.create()\r\n    range1.value = 50\r\n    range1.endValue = 100\r\n    range1.axisFill.fillOpacity = 1\r\n    range1.axisFill.fill = colorSet.getIndex(8)\r\n\r\n    /**\r\n     * Label\r\n     */\r\n\r\n    var label = chart.radarContainer.createChild(am4core.Label)\r\n    label.fontSize = 20\r\n    label.horizontalCenter = 'middle'\r\n    label.verticalCenter = 'bottom'\r\n    label.padding(10, 10, 30, 10)\r\n    label.text = '%'\r\n\r\n    /**\r\n     * Hand\r\n     */\r\n    this.hand = chart.hands.push(new am4charts.ClockHand())\r\n    this.hand.fill = axis.renderer.line.stroke\r\n    this.hand.stroke = axis.renderer.line.stroke\r\n    this.hand.axis = axis2\r\n    this.hand.pin.radius = 5\r\n    this.hand.startWidth = 5\r\n\r\n    this.hand.events.on('propertychanged', function (ev) {\r\n      range0.endValue = ev.target.value\r\n      range1.value = ev.target.value\r\n      label.text = Math.floor(ev.target.value) + ' %'\r\n      axis2.invalidate()\r\n    })\r\n\r\n    this.hand.showValue(this.value, 1000, am4core.ease.cubicOut)\r\n  },\r\n\r\n  beforeDestroy () {\r\n    if (this.chart) {\r\n      this.chart.dispose()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"sourceRoot":"src/components"}]}