{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js!/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js!/home/mrchoi87/farmosV2/ui/node_modules/eslint-loader/index.js??ref--13-0!/home/mrchoi87/farmosV2/ui/src/store/modules/farm.js","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/store/modules/farm.js","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Vue from 'vue';\nvar state = {\n  items: {}\n};\nvar getters = {\n  getFarm: function getFarm(state) {\n    return state.items;\n  }\n};\nvar actions = {\n  fetchDataFarm: function () {\n    var _fetchDataFarm = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {\n      var commit, _yield$Vue$axios$get, data;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.prev = 1;\n              _context.next = 4;\n              return Vue.axios.get('farm');\n\n            case 4:\n              _yield$Vue$axios$get = _context.sent;\n              data = _yield$Vue$axios$get.data;\n              commit('setFarm', data);\n              _context.next = 11;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    function fetchDataFarm(_x) {\n      return _fetchDataFarm.apply(this, arguments);\n    }\n\n    return fetchDataFarm;\n  }()\n};\nvar mutations = {\n  setFarm: function setFarm(state, items) {\n    state.items = items;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/home/mrchoi87/farmosV2/ui/src/store/modules/farm.js"],"names":["Vue","state","items","getters","getFarm","actions","fetchDataFarm","commit","axios","get","data","mutations","setFarm","namespaced"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AADK,CAAd;AAKA,IAAMC,OAAO,GAAG;AACdC,EAAAA,OADc,mBACLH,KADK,EACE;AACd,WAAOA,KAAK,CAACC,KAAb;AACD;AAHa,CAAhB;AAMA,IAAMG,OAAO,GAAG;AACdC,EAAAA,aAAa;AAAA,iFAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,cAAAA,MAAT,QAASA,MAAT;AAAA;AAAA;AAAA,qBAEYP,GAAG,CAACQ,KAAJ,CAAUC,GAAV,CAAc,MAAd,CAFZ;;AAAA;AAAA;AAEHC,cAAAA,IAFG,wBAEHA,IAFG;AAGXH,cAAAA,MAAM,CAAC,SAAD,EAAYG,IAAZ,CAAN;AAHW;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADC,CAAhB;AASA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,OADgB,mBACPX,KADO,EACAC,KADA,EACO;AACrBD,IAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACD;AAHe,CAAlB;AAMA,eAAe;AACbW,EAAAA,UAAU,EAAE,IADC;AAEbZ,EAAAA,KAAK,EAALA,KAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbQ,EAAAA,SAAS,EAATA,SAJa;AAKbN,EAAAA,OAAO,EAAPA;AALa,CAAf","sourcesContent":["import Vue from 'vue'\r\n\r\nconst state = {\r\n  items: {}\r\n\r\n}\r\n\r\nconst getters = {\r\n  getFarm (state) {\r\n    return state.items\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  fetchDataFarm: async ({ commit }) => {\r\n    try {\r\n      const { data } = await Vue.axios.get('farm')\r\n      commit('setFarm', data)\r\n    } catch (error) { }\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  setFarm (state, items) {\r\n    state.items = items\r\n  }\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n}\r\n"]}]}