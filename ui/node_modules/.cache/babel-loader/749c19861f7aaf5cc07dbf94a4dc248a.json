{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js!/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js!/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/Transfer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/Transfer.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport _defineProperty from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nexport default {\n  props: ['fieldId', 'path', 'uiInfo', 'devices', 'dataIndexs', 'showDialog', 'closeDialog', 'refresh'],\n  data: function data() {\n    return {\n      showDialogCopy: false\n    };\n  },\n  watch: {\n    showDialog: function showDialog(newValue, oldValue) {\n      this.showDialogCopy = this.showDialog;\n    }\n  },\n  computed: {\n    isMax: function isMax() {\n      if (isNaN(this.uiInfo.max)) {\n        return false;\n      } else {\n        var deviceCount = Object.keys(this.uiInfo.device).length;\n        var dataCount = this.uiInfo.data.length;\n\n        if (deviceCount + dataCount >= this.uiInfo.max) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    fetchSetUiDevice: 'field/fetchSetUiDevice'\n  })), {}, {\n    checkIdfmt: function checkIdfmt(idfmt, item) {\n      var re = new RegExp(idfmt);\n      return re.test(item.id);\n    },\n    typeSelect: function () {\n      var _typeSelect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(type) {\n        var tempPath;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                tempPath = this.path;\n                tempPath.push('type');\n                _context.next = 4;\n                return this.fetchSetUiDevice([this.fieldId, tempPath, null, null, this.uiInfo.type.select]);\n\n              case 4:\n                try {\n                  this.refresh();\n                } catch (error) {}\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function typeSelect(_x) {\n        return _typeSelect.apply(this, arguments);\n      }\n\n      return typeSelect;\n    }(),\n    dataSelect: function () {\n      var _dataSelect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(dataId) {\n        var tempData, tempPath;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                tempData = null;\n                tempPath = this.path;\n\n                if (this.uiInfo.type) {\n                  tempData = this.uiInfo[this.uiInfo.type.select];\n                  tempPath.push(this.uiInfo.type.select);\n                } else {\n                  tempData = this.uiInfo;\n                }\n\n                if (tempData.data.includes(Number(dataId))) {\n                  tempData.data.splice(tempData.data.indexOf(Number(dataId)), 1);\n                } else {\n                  tempData.data.push(Number(dataId));\n                }\n\n                tempData.isFull = false;\n                _context2.next = 7;\n                return this.fetchSetUiDevice([this.fieldId, tempPath, null, tempData.data]);\n\n              case 7:\n                try {\n                  this.refresh();\n                } catch (error) {}\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function dataSelect(_x2) {\n        return _dataSelect.apply(this, arguments);\n      }\n\n      return dataSelect;\n    }(),\n    deviceSelect: function () {\n      var _deviceSelect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(deviceId, dataId) {\n        var tempData, tempPath;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                tempData = null;\n                tempPath = this.path;\n\n                if (this.uiInfo.type) {\n                  tempData = this.uiInfo[this.uiInfo.type.select];\n                  tempPath.push(this.uiInfo.type.select);\n                } else {\n                  tempData = this.uiInfo;\n                }\n\n                if (!tempData.device[deviceId]) {\n                  tempData.device[deviceId] = [];\n                }\n\n                if (tempData.device[deviceId].includes(Number(dataId))) {\n                  tempData.device[deviceId].splice(tempData.device[deviceId].indexOf(Number(dataId)), 1);\n                } else {\n                  tempData.device[deviceId].push(Number(dataId));\n                }\n\n                if (tempData.device[deviceId].length === 0) {\n                  delete tempData.device[deviceId];\n                }\n\n                tempData.isFull = false;\n                _context3.next = 9;\n                return this.fetchSetUiDevice([this.fieldId, tempPath, tempData.device, null]);\n\n              case 9:\n                try {\n                  this.refresh();\n                } catch (error) {}\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function deviceSelect(_x3, _x4) {\n        return _deviceSelect.apply(this, arguments);\n      }\n\n      return deviceSelect;\n    }()\n  })\n};",{"version":3,"sources":["Transfer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-dialog\n    :modal-append-to-body=\"false\"\n    :show-close=\"false\"\n    :visible.sync=\"showDialogCopy\"\n    @closed=\"()=>closeDialog()\"\n    center\n  >\n    <div slot=\"title\">\n      <h6>UI 표시 데이터</h6>\n    </div>\n\n    <div v-if=\"uiInfo\">\n      <div v-if=\"uiInfo.type\" class=\"mB-20\">\n        <h3>타입</h3>\n        <el-select v-model=\"uiInfo.type.select\" placeholder=\"타입을 선택 하세요\" class=\"mb w-100\" @change=\"typeSelect\">\n          <el-option v-for=\"item in uiInfo.type.list\" :key=\"item\" :label=\"item\" :value=\"item\"></el-option>\n        </el-select>\n      </div>\n      <div v-if=\"!uiInfo.type || uiInfo.type.select !== null\">\n        <h3>장비</h3>\n        <b-row>\n          <b-col lg=\"6\" v-for=\"device in devices\" :key=\"device.id\">\n            <h5 style=\"font-weight: 600\">{{device.name ? device.name : device.spec.Name}}</h5>\n            <template v-for=\"data in device.datas\">\n\n              <template v-if=\"!uiInfo.type\">\n                <el-checkbox\n                  v-if=\"checkIdfmt(uiInfo.idfmt.device ,data)\"\n                  :key=\"data.id\"\n                  :checked=\"uiInfo.device[device.id] && uiInfo.device[device.id].includes(Number(data.id))\"\n                  :label=\"data.name\"\n                  :disabled=\"isMax && !(uiInfo.device[device.id] && uiInfo.device[device.id].includes(Number(data.id)))\"\n                  @change=\"deviceSelect(device.id,data.id)\"\n                ></el-checkbox>\n              </template>\n              <template v-else>\n                <el-checkbox\n                  v-if=\"checkIdfmt(uiInfo[uiInfo.type.select].idfmt.device,data)\"\n                  :key=\"data.id\"\n                  :checked=\"uiInfo[uiInfo.type.select].device[device.id] && uiInfo[uiInfo.type.select].device[device.id].includes(Number(data.id))\"\n                  :label=\"data.name\"\n                  :disabled=\"isMax && !(uiInfo[uiInfo.type.select].device[device.id] && uiInfo[uiInfo.type.select].device[device.id].includes(Number(data.id)))\"\n                  @change=\"deviceSelect(device.id,data.id)\"\n                ></el-checkbox>\n              </template>\n            </template>\n            <el-divider />\n          </b-col>\n        </b-row>\n\n        <br />\n        <h3>데이터</h3>\n        <b-row>\n          <b-col lg=\"6\" v-for=\"dataIndex in dataIndexs\" :key=\"dataIndex.id\">\n            <el-checkbox\n              v-if=\"uiInfo.idfmt && checkIdfmt(uiInfo.idfmt.data,dataIndex)\"\n              :key=\"dataIndex.id\"\n              :checked=\"uiInfo.data.includes(Number(dataIndex.id))\"\n              :label=\"dataIndex.name\"\n              :disabled=\"isMax && !uiInfo.data.includes(Number(dataIndex.id))\"\n              @change=\"dataSelect(dataIndex.id)\"\n            ></el-checkbox>\n          </b-col>\n        </b-row>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nexport default {\n  props: [\n    'fieldId',\n    'path',\n    'uiInfo',\n    'devices',\n    'dataIndexs',\n    'showDialog',\n    'closeDialog',\n    'refresh'\n  ],\n  data () {\n    return {\n      showDialogCopy: false\n    }\n  },\n  watch: {\n    showDialog (newValue, oldValue) {\n      this.showDialogCopy = this.showDialog\n    }\n  },\n  computed: {\n    isMax () {\n      if (isNaN(this.uiInfo.max)) {\n        return false\n      } else {\n        let deviceCount = Object.keys(this.uiInfo.device).length\n        let dataCount = this.uiInfo.data.length\n        if (deviceCount + dataCount >= this.uiInfo.max) {\n          return true\n        } else {\n          return false\n        }\n      }\n    }\n  },\n  methods: {\n    ...mapActions({ fetchSetUiDevice: 'field/fetchSetUiDevice' }),\n    checkIdfmt (idfmt, item) {\n      var re = new RegExp(idfmt)\n      return re.test(item.id)\n    },\n    async typeSelect (type) {\n      let tempPath = this.path\n      tempPath.push('type')\n\n      await this.fetchSetUiDevice([\n        this.fieldId,\n        tempPath,\n        null,\n        null,\n        this.uiInfo.type.select\n      ])\n\n      try {\n        this.refresh()\n      } catch (error) {}\n    },\n    async dataSelect (dataId) {\n      let tempData = null\n      let tempPath = this.path\n\n      if (this.uiInfo.type) {\n        tempData = this.uiInfo[this.uiInfo.type.select]\n        tempPath.push(this.uiInfo.type.select)\n      } else {\n        tempData = this.uiInfo\n      }\n      if (tempData.data.includes(Number(dataId))) {\n        tempData.data.splice(tempData.data.indexOf(Number(dataId)), 1)\n      } else {\n        tempData.data.push(Number(dataId))\n      }\n\n      tempData.isFull = false\n\n      await this.fetchSetUiDevice([\n        this.fieldId,\n        tempPath,\n        null,\n        tempData.data\n      ])\n\n      try {\n        this.refresh()\n      } catch (error) {}\n    },\n    async deviceSelect (deviceId, dataId) {\n      let tempData = null\n      let tempPath = this.path\n\n      if (this.uiInfo.type) {\n        tempData = this.uiInfo[this.uiInfo.type.select]\n        tempPath.push(this.uiInfo.type.select)\n      } else {\n        tempData = this.uiInfo\n      }\n\n      if (!tempData.device[deviceId]) {\n        tempData.device[deviceId] = []\n      }\n\n      if (tempData.device[deviceId].includes(Number(dataId))) {\n        tempData.device[deviceId].splice(\n          tempData.device[deviceId].indexOf(Number(dataId)),\n          1\n        )\n      } else {\n        tempData.device[deviceId].push(Number(dataId))\n      }\n\n      if (tempData.device[deviceId].length === 0) {\n        delete tempData.device[deviceId]\n      }\n\n      tempData.isFull = false\n\n      await this.fetchSetUiDevice([\n        this.fieldId,\n        tempPath,\n        tempData.device,\n        null\n      ])\n      try {\n        this.refresh()\n      } catch (error) {}\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/components"}]}