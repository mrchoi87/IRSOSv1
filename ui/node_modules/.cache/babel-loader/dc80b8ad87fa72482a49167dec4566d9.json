{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js!/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js!/home/mrchoi87/farmosV2/ui/node_modules/eslint-loader/index.js??ref--13-0!/home/mrchoi87/farmosV2/ui/src/store/modules/field.js","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/store/modules/field.js","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _slicedToArray from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Vue from 'vue';\n/* let uiData = {\r\n      'index': {\r\n          'local': {\r\n            'userSet': false,\r\n            'device': []\r\n          },\r\n          'greenhouse': {\r\n            'userSet': false,\r\n            'device': []\r\n          },\r\n          'actuator': {\r\n            'userSet': false,\r\n            'device': []\r\n          }\r\n        }\r\n    } */\n\nvar state = {\n  items: []\n};\nvar getters = {\n  getFields: function getFields(state) {\n    return state.items;\n  },\n  getField: function getField(state) {\n    return function (id) {\n      // eslint-disable-next-line eqeqeq\n      return state.items.filter(function (item) {\n        return item.id == id;\n      })[0];\n    };\n  }\n};\nvar actions = {\n  fetchDataField: function () {\n    var _fetchDataField = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {\n      var commit, _yield$Vue$axios$get, data;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.prev = 1;\n              _context.next = 4;\n              return Vue.axios.get('field');\n\n            case 4:\n              _yield$Vue$axios$get = _context.sent;\n              data = _yield$Vue$axios$get.data;\n              commit('setFields', data);\n              _context.next = 11;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    function fetchDataField(_x) {\n      return _fetchDataField.apply(this, arguments);\n    }\n\n    return fetchDataField;\n  }(),\n  fetchSetUiDevice: function () {\n    var _fetchSetUiDevice = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2, _ref3) {\n      var commit, _ref4, fieldId, path, devices, datas, typeSelect, setData, _yield$Vue$axios$put, data;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _ref4 = _slicedToArray(_ref3, 5), fieldId = _ref4[0], path = _ref4[1], devices = _ref4[2], datas = _ref4[3], typeSelect = _ref4[4];\n              _context2.prev = 2;\n              setData = {\n                path: path\n              };\n\n              if (devices !== null) {\n                setData.devices = devices;\n              }\n\n              if (datas !== null) {\n                setData.datas = datas;\n              }\n\n              if (typeSelect !== null) {\n                setData.typeSelect = typeSelect;\n              }\n\n              _context2.next = 9;\n              return Vue.axios.put(\"field/\".concat(fieldId, \"/uiDevice\"), setData);\n\n            case 9:\n              _yield$Vue$axios$put = _context2.sent;\n              data = _yield$Vue$axios$put.data;\n              commit('setUiDevice', [fieldId, data]);\n              _context2.next = 16;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](2);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 14]]);\n    }));\n\n    function fetchSetUiDevice(_x2, _x3) {\n      return _fetchSetUiDevice.apply(this, arguments);\n    }\n\n    return fetchSetUiDevice;\n  }()\n};\nvar mutations = {\n  setFields: function setFields(state, items) {\n    state.items = items;\n  },\n  setUiDevice: function setUiDevice(state, _ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        fieldId = _ref6[0],\n        data = _ref6[1];\n\n    state.items.forEach(function (element) {\n      if (element.id === fieldId) {\n        Vue.set(element, 'uiinfo', data); // element.ui_device = data\n      }\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/home/mrchoi87/farmosV2/ui/src/store/modules/field.js"],"names":["Vue","state","items","getters","getFields","getField","id","filter","item","actions","fetchDataField","commit","axios","get","data","fetchSetUiDevice","fieldId","path","devices","datas","typeSelect","setData","put","mutations","setFields","setUiDevice","forEach","element","set","namespaced"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\n\r\n/* let uiData = {\r\n      'index': {\r\n          'local': {\r\n            'userSet': false,\r\n            'device': []\r\n          },\r\n          'greenhouse': {\r\n            'userSet': false,\r\n            'device': []\r\n          },\r\n          'actuator': {\r\n            'userSet': false,\r\n            'device': []\r\n          }\r\n        }\r\n    } */\r\n\r\nconst state = {\r\n  items: []\r\n\r\n}\r\n\r\nconst getters = {\r\n  getFields (state) {\r\n    return state.items\r\n  },\r\n  getField: (state) => (id) => {\r\n    // eslint-disable-next-line eqeqeq\r\n    return state.items.filter(item => item.id == id)[0]\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  fetchDataField: async ({ commit }) => {\r\n    try {\r\n      const { data } = await Vue.axios.get('field')\r\n      commit('setFields', data)\r\n    } catch (error) { }\r\n  },\r\n  fetchSetUiDevice: async ({ commit }, [fieldId, path, devices, datas, typeSelect]) => {\r\n    try {\r\n      let setData = {\r\n        path\r\n      }\r\n      if (devices !== null) {\r\n        setData.devices = devices\r\n      }\r\n      if (datas !== null) {\r\n        setData.datas = datas\r\n      }\r\n      if (typeSelect !== null) {\r\n        setData.typeSelect = typeSelect\r\n      }\r\n\r\n      const { data } = await Vue.axios.put(`field/${fieldId}/uiDevice`, setData)\r\n      commit('setUiDevice', [fieldId, data])\r\n    } catch (error) {\r\n    }\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  setFields (state, items) {\r\n    state.items = items\r\n  },\r\n  setUiDevice (state, [fieldId, data]) {\r\n    state.items.forEach(element => {\r\n      if (element.id === fieldId) {\r\n        Vue.set(element, 'uiinfo', data)\r\n        // element.ui_device = data\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n}\r\n"]}]}