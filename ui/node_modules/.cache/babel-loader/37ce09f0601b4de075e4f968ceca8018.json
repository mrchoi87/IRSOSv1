{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js!/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js!/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/HouseTempChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/HouseTempChart.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { addDays } from 'date-fns';\nimport LineChart from '@/components/LineChart';\nimport Transfer from '@/components/Transfer';\nexport default {\n  props: ['field', 'uiInfo', 'uiType', 'sensor', 'name', 'obs'],\n  components: {\n    Transfer: Transfer,\n    LineChart: LineChart\n  },\n  data: function data() {\n    return {\n      showDialog: false,\n      timeSpan: {},\n      chartData: [],\n      today: new Date()\n    };\n  },\n  computed: {\n    getChartData: function getChartData() {\n      var chartData = {\n        thresholds: [],\n        sections: [],\n        useds: [],\n        graphData: [],\n        xAxisData: {\n          min: this.$date().format(this.today, 'YYYY-MM-DD'),\n          max: this.$date().format(addDays(this.today, 1), 'YYYY-MM-DD')\n        }\n      };\n\n      if (this.timeSpan.timespan) {\n        chartData.sections = this.timeSpan.timespan.parts;\n        chartData.thresholds = this.timeSpan.timespan.threshold;\n        this.timeSpan.timespan.parts.forEach(function (element) {\n          chartData.useds.push(true);\n        });\n      }\n\n      return chartData;\n    }\n  },\n  mounted: function mounted() {\n    this.getTimeSpan();\n    this.getGraphDat();\n  },\n  methods: {\n    getTimeSpan: function () {\n      var _getTimeSpan = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$this$axios$get, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.axios.get(\"/rule/timespan/1/field/\".concat(this.field.id));\n\n              case 3:\n                _yield$this$axios$get = _context.sent;\n                data = _yield$this$axios$get.data;\n                this.$set(this, 'timeSpan', data);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      function getTimeSpan() {\n        return _getTimeSpan.apply(this, arguments);\n      }\n\n      return getTimeSpan;\n    }(),\n    getGraphDat: function getGraphDat() {\n      var ids = [];\n\n      for (var key in this.uiInfo[this.uiType].device) {\n        var _iterator = _createForOfIteratorHelper(this.uiInfo[this.uiType].device[key]),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var id = _step.value;\n            ids.push(id);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      this.getGraph([this.today, addDays(this.today, 1)], ids);\n    },\n    getGraph: function () {\n      var _getGraph = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(date, searchItems) {\n        var _yield$this$axios$put, data, _iterator2, _step2, element, _iterator3, _step3, device, _iterator4, _step4, _data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.axios.put('farm/graph', {\n                  device_id: searchItems.map(Number),\n                  startdate: this.$date().format(date[0], 'YYYY-MM-DD'),\n                  enddate: this.$date().format(date[1], 'YYYY-MM-DD')\n                });\n\n              case 2:\n                _yield$this$axios$put = _context2.sent;\n                data = _yield$this$axios$put.data;\n                _iterator2 = _createForOfIteratorHelper(data.data);\n                _context2.prev = 5;\n\n                _iterator2.s();\n\n              case 7:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context2.next = 46;\n                  break;\n                }\n\n                element = _step2.value;\n\n                if (!element.id.toString().startsWith('1')) {\n                  _context2.next = 43;\n                  break;\n                }\n\n                _iterator3 = _createForOfIteratorHelper(this.sensor);\n                _context2.prev = 11;\n\n                _iterator3.s();\n\n              case 13:\n                if ((_step3 = _iterator3.n()).done) {\n                  _context2.next = 35;\n                  break;\n                }\n\n                device = _step3.value;\n                _iterator4 = _createForOfIteratorHelper(device.datas);\n                _context2.prev = 16;\n\n                _iterator4.s();\n\n              case 18:\n                if ((_step4 = _iterator4.n()).done) {\n                  _context2.next = 25;\n                  break;\n                }\n\n                _data = _step4.value;\n\n                if (!(_data.id === element.id)) {\n                  _context2.next = 23;\n                  break;\n                }\n\n                element.name = device.name + ' ' + element.name;\n                return _context2.abrupt(\"break\", 25);\n\n              case 23:\n                _context2.next = 18;\n                break;\n\n              case 25:\n                _context2.next = 30;\n                break;\n\n              case 27:\n                _context2.prev = 27;\n                _context2.t0 = _context2[\"catch\"](16);\n\n                _iterator4.e(_context2.t0);\n\n              case 30:\n                _context2.prev = 30;\n\n                _iterator4.f();\n\n                return _context2.finish(30);\n\n              case 33:\n                _context2.next = 13;\n                break;\n\n              case 35:\n                _context2.next = 40;\n                break;\n\n              case 37:\n                _context2.prev = 37;\n                _context2.t1 = _context2[\"catch\"](11);\n\n                _iterator3.e(_context2.t1);\n\n              case 40:\n                _context2.prev = 40;\n\n                _iterator3.f();\n\n                return _context2.finish(40);\n\n              case 43:\n                element.sigdigit = this.obs[element.id].sigdigit;\n\n              case 44:\n                _context2.next = 7;\n                break;\n\n              case 46:\n                _context2.next = 51;\n                break;\n\n              case 48:\n                _context2.prev = 48;\n                _context2.t2 = _context2[\"catch\"](5);\n\n                _iterator2.e(_context2.t2);\n\n              case 51:\n                _context2.prev = 51;\n\n                _iterator2.f();\n\n                return _context2.finish(51);\n\n              case 54:\n                this.$set(this, 'chartData', data.data);\n\n              case 55:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 48, 51, 54], [11, 37, 40, 43], [16, 27, 30, 33]]);\n      }));\n\n      function getGraph(_x, _x2) {\n        return _getGraph.apply(this, arguments);\n      }\n\n      return getGraph;\n    }()\n  }\n};",{"version":3,"sources":["HouseTempChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAAA,OAAA,QAAA,UAAA;AACA,OAAA,SAAA,MAAA,wBAAA;AACA,OAAA,QAAA,MAAA,uBAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,KAAA,CADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA,QADA;AAEA,IAAA,SAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,IAAA,IAAA;AAJA,KAAA;AAMA,GAbA;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,UAAA,SAAA,GAAA;AACA,QAAA,UAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,SAAA,EAAA,EAJA;AAKA,QAAA,SAAA,EAAA;AACA,UAAA,GAAA,EAAA,KAAA,KAAA,GAAA,MAAA,CAAA,KAAA,KAAA,EAAA,YAAA,CADA;AAEA,UAAA,GAAA,EAAA,KAAA,KAAA,GAAA,MAAA,CAAA,OAAA,CAAA,KAAA,KAAA,EAAA,CAAA,CAAA,EAAA,YAAA;AAFA;AALA,OAAA;;AAWA,UAAA,KAAA,QAAA,CAAA,QAAA,EAAA;AACA,QAAA,SAAA,CAAA,QAAA,GAAA,KAAA,QAAA,CAAA,QAAA,CAAA,KAAA;AACA,QAAA,SAAA,CAAA,UAAA,GAAA,KAAA,QAAA,CAAA,QAAA,CAAA,SAAA;AACA,aAAA,QAAA,CAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,UAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AACA,SAFA;AAGA;;AACA,aAAA,SAAA;AACA;AArBA,GAdA;AAqCA,EAAA,OArCA,qBAqCA;AACA,SAAA,WAAA;AACA,SAAA,WAAA;AACA,GAxCA;AAyCA,EAAA,OAAA,EAAA;AACA,IAAA,WADA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGA,KAAA,KAAA,CAAA,GAAA,kCACA,KAAA,KAAA,CAAA,EADA,EAHA;;AAAA;AAAA;AAGA,gBAAA,IAHA,yBAGA,IAHA;AAMA,qBAAA,IAAA,CAAA,IAAA,EAAA,UAAA,EAAA,IAAA;AANA;AAAA;;AAAA;AAAA;AAAA;AAQA,gBAAA,OAAA,CAAA,GAAA;;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWA,IAAA,WAXA,yBAWA;AACA,UAAA,GAAA,GAAA,EAAA;;AACA,WAAA,IAAA,GAAA,IAAA,KAAA,MAAA,CAAA,KAAA,MAAA,EAAA,MAAA,EAAA;AAAA,mDACA,KAAA,MAAA,CAAA,KAAA,MAAA,EAAA,MAAA,CAAA,GAAA,CADA;AAAA;;AAAA;AACA,8DAAA;AAAA,gBAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,CAAA,EAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAIA;;AACA,WAAA,QAAA,CACA,CAAA,KAAA,KAAA,EAAA,OAAA,CAAA,KAAA,KAAA,EAAA,CAAA,CAAA,CADA,EAEA,GAFA;AAIA,KAtBA;AAuBA,IAAA,QAvBA;AAAA,gGAuBA,IAvBA,EAuBA,WAvBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAwBA,KAAA,KAAA,CAAA,GAAA,CAAA,YAAA,EAAA;AACA,kBAAA,SAAA,EAAA,WAAA,CAAA,GAAA,CAAA,MAAA,CADA;AAEA,kBAAA,SAAA,EAAA,KAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,YAAA,CAFA;AAGA,kBAAA,OAAA,EAAA,KAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,YAAA;AAHA,iBAAA,CAxBA;;AAAA;AAAA;AAwBA,gBAAA,IAxBA,yBAwBA,IAxBA;AAAA,wDA8BA,IAAA,CAAA,IA9BA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA8BA,gBAAA,OA9BA;;AAAA,qBA+BA,OAAA,CAAA,EAAA,CAAA,QAAA,GAAA,UAAA,CAAA,GAAA,CA/BA;AAAA;AAAA;AAAA;;AAAA,wDAgCA,KAAA,MAhCA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgCA,gBAAA,MAhCA;AAAA,wDAiCA,MAAA,CAAA,KAjCA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiCA,gBAAA,KAjCA;;AAAA,sBAkCA,KAAA,CAAA,EAAA,KAAA,OAAA,CAAA,EAlCA;AAAA;AAAA;AAAA;;AAmCA,gBAAA,OAAA,CAAA,IAAA,GAAA,MAAA,CAAA,IAAA,GAAA,GAAA,GAAA,OAAA,CAAA,IAAA;AAnCA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAyCA,gBAAA,OAAA,CAAA,QAAA,GAAA,KAAA,GAAA,CAAA,OAAA,CAAA,EAAA,EAAA,QAAA;;AAzCA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AA2CA,qBAAA,IAAA,CAAA,IAAA,EAAA,WAAA,EAAA,IAAA,CAAA,IAAA;;AA3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAzCA,CAAA","sourcesContent":["<template>\n  <div>\n    <div style=\"display: flex;\">\n      <div>{{name}}</div>\n      <div class=\"ml-auto el-icon-setting\" style=\"z-index: 1;\" @click=\"showDialog = true\"></div>\n    </div>\n    <lineChart\n      :id=\"'line'\"\n      :defineHeight=\"100\"\n      :latlng=\"{lat: field.data.lat.value,lng: field.data.lng.value}\"\n      :sections=\"getChartData.sections\"\n      :thresholds=\"getChartData.thresholds\"\n      :useds=\"getChartData.useds\"\n      :xAxisData=\"getChartData.xAxisData\"\n      :graphData=\"chartData\"\n    ></lineChart>\n    <!-- :graphData=\"chart.graphDatas['left'][house.id] && chart.graphDatas['left'][house.id].data ? chart.graphDatas['left'][house.id].data : []\" -->\n    <Transfer\n      :fieldId=\"field.id\"\n      :path=\"['dashboard',uiType]\"\n      :uiInfo=\"uiInfo[uiType]\"\n      :devices=\"sensor\"\n      :showDialog=\"showDialog\"\n      :closeDialog=\"()=>showDialog = false\"\n      :refresh=\"getGraphDat\"\n    />\n  </div>\n</template>\n\n<script>\nimport { addDays } from 'date-fns'\nimport LineChart from '@/components/LineChart'\nimport Transfer from '@/components/Transfer'\nexport default {\n  props: ['field', 'uiInfo', 'uiType', 'sensor', 'name', 'obs'],\n  components: {\n    Transfer,\n    LineChart\n  },\n  data () {\n    return {\n      showDialog: false,\n      timeSpan: {},\n      chartData: [],\n      today: new Date()\n    }\n  },\n  computed: {\n    getChartData () {\n      let chartData = {\n        thresholds: [],\n        sections: [],\n        useds: [],\n        graphData: [],\n        xAxisData: {\n          min: this.$date().format(this.today, 'YYYY-MM-DD'),\n          max: this.$date().format(addDays(this.today, 1), 'YYYY-MM-DD')\n        }\n      }\n\n      if (this.timeSpan.timespan) {\n        chartData.sections = this.timeSpan.timespan.parts\n        chartData.thresholds = this.timeSpan.timespan.threshold\n        this.timeSpan.timespan.parts.forEach(element => {\n          chartData.useds.push(true)\n        })\n      }\n      return chartData\n    }\n  },\n  mounted () {\n    this.getTimeSpan()\n    this.getGraphDat()\n  },\n  methods: {\n    async getTimeSpan () {\n      try {\n        const { data } = await this.axios.get(\n          `/rule/timespan/1/field/${this.field.id}`\n        )\n        this.$set(this, 'timeSpan', data)\n      } catch (error) {\n        console.log(error)\n      }\n    },\n    getGraphDat () {\n      let ids = []\n      for (const key in this.uiInfo[this.uiType].device) {\n        for (const id of this.uiInfo[this.uiType].device[key]) {\n          ids.push(id)\n        }\n      }\n      this.getGraph(\n        [this.today, addDays(this.today, 1)],\n        ids\n      )\n    },\n    async getGraph (date, searchItems) {\n      const { data } = await this.axios.put('farm/graph', {\n        device_id: searchItems.map(Number),\n        startdate: this.$date().format(date[0], 'YYYY-MM-DD'),\n        enddate: this.$date().format(date[1], 'YYYY-MM-DD')\n      })\n\n      for (const element of data.data) {\n        if (element.id.toString().startsWith('1')) {\n          for (const device of this.sensor) {\n            for (const data of device.datas) {\n              if (data.id === element.id) {\n                element.name = device.name + ' ' + element.name\n                break\n              }\n            }\n          }\n        }\n        element.sigdigit = this.obs[element.id].sigdigit\n      }\n      this.$set(this, 'chartData', data.data)\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/components"}]}