{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js!/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js!/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/JsonEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/JsonEditor.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\nimport JSONEditor from 'jsoneditor/dist/jsoneditor.js';\nimport 'jsoneditor/dist/jsoneditor.min.css';\nimport _ from 'lodash';\nexport default {\n  name: 'JsonEditor',\n  data: function data() {\n    return {\n      editor: null\n    };\n  },\n  props: {\n    type: {\n      required: false,\n      type: String,\n      default: function _default() {\n        return '';\n      }\n    },\n    json: {\n      required: true,\n      type: [Object, Array],\n      default: function _default() {\n        return {};\n      }\n    },\n    options: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    onChangeState: {\n      type: Function\n    },\n    onChange: {\n      type: Function\n    }\n  },\n  watch: {\n    json: {\n      handler: function handler(newJson) {\n        if (this.editor) {\n          this.editor.set(newJson);\n        }\n      },\n      deep: true\n    }\n  },\n  methods: {\n    _onChange: function _onChange(e) {\n      if (this.onChangeState && this.editor) {\n        this.onChangeState(true, this.type);\n      }\n    },\n    editorJsonGet: function editorJsonGet() {\n      try {\n        this.onChange(true, this.editor.get());\n      } catch (error) {\n        this.onChange(false);\n      }\n    },\n    editorJsonRetrun: function editorJsonRetrun() {\n      return this.editor.get();\n    }\n  },\n  mounted: function mounted() {\n    var container = this.$refs.jsoneditor;\n\n    var options = _.extend({\n      onChange: this._onChange\n    }, this.options);\n\n    this.editor = new JSONEditor(container, options);\n    this.editor.set(this.json);\n    this.editor.aceEditor.setOptions({\n      maxLines: Infinity\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.editor) {\n      this.editor.destroy();\n      this.editor = null;\n    }\n  }\n};",{"version":3,"sources":["JsonEditor.vue"],"names":[],"mappings":";;;;;;;AAQA,OAAA,UAAA,MAAA,+BAAA;AACA,OAAA,oCAAA;AACA,OAAA,CAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,QAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA,MAFA;AAGA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AALA,KADA;AAQA,IAAA,IAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAFA;AAGA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AALA,KARA;AAeA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AAJA,KAfA;AAqBA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KArBA;AAwBA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AAxBA,GAPA;AAmCA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,OADA,mBACA,OADA,EACA;AACA,YAAA,KAAA,MAAA,EAAA;AACA,eAAA,MAAA,CAAA,GAAA,CAAA,OAAA;AACA;AACA,OALA;AAMA,MAAA,IAAA,EAAA;AANA;AADA,GAnCA;AA6CA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,CADA,EACA;AACA,UAAA,KAAA,aAAA,IAAA,KAAA,MAAA,EAAA;AACA,aAAA,aAAA,CAAA,IAAA,EAAA,KAAA,IAAA;AACA;AACA,KALA;AAMA,IAAA,aANA,2BAMA;AACA,UAAA;AACA,aAAA,QAAA,CAAA,IAAA,EAAA,KAAA,MAAA,CAAA,GAAA,EAAA;AACA,OAFA,CAEA,OAAA,KAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA;AACA;AACA,KAZA;AAaA,IAAA,gBAbA,8BAaA;AACA,aAAA,KAAA,MAAA,CAAA,GAAA,EAAA;AACA;AAfA,GA7CA;AA8DA,EAAA,OA9DA,qBA8DA;AACA,QAAA,SAAA,GAAA,KAAA,KAAA,CAAA,UAAA;;AACA,QAAA,OAAA,GAAA,CAAA,CAAA,MAAA,CAAA;AACA,MAAA,QAAA,EAAA,KAAA;AADA,KAAA,EAEA,KAAA,OAFA,CAAA;;AAGA,SAAA,MAAA,GAAA,IAAA,UAAA,CAAA,SAAA,EAAA,OAAA,CAAA;AACA,SAAA,MAAA,CAAA,GAAA,CAAA,KAAA,IAAA;AACA,SAAA,MAAA,CAAA,SAAA,CAAA,UAAA,CAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KAAA;AACA,GAtEA;AAuEA,EAAA,aAvEA,2BAuEA;AACA,QAAA,KAAA,MAAA,EAAA;AACA,WAAA,MAAA,CAAA,OAAA;AACA,WAAA,MAAA,GAAA,IAAA;AACA;AACA;AA5EA,CAAA","sourcesContent":["<template>\n  <div\n    id=\"jsoneditor\"\n    ref=\"jsoneditor\"\n  />\n</template>\n\n<script>\nimport JSONEditor from 'jsoneditor/dist/jsoneditor.js'\nimport 'jsoneditor/dist/jsoneditor.min.css'\nimport _ from 'lodash'\n\nexport default {\n  name: 'JsonEditor',\n  data () {\n    return {\n      editor: null\n    }\n  },\n  props: {\n    type: {\n      required: false,\n      type: String,\n      default: () => {\n        return ''\n      }\n    },\n    json: {\n      required: true,\n      type: [Object, Array],\n      default: () => {\n        return {}\n      }\n    },\n    options: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    onChangeState: {\n      type: Function\n    },\n    onChange: {\n      type: Function\n    }\n  },\n  watch: {\n    json: {\n      handler (newJson) {\n        if (this.editor) {\n          this.editor.set(newJson)\n        }\n      },\n      deep: true\n    }\n  },\n  methods: {\n    _onChange (e) {\n      if (this.onChangeState && this.editor) {\n        this.onChangeState(true, this.type)\n      }\n    },\n    editorJsonGet () {\n      try {\n        this.onChange(true, this.editor.get())\n      } catch (error) {\n        this.onChange(false)\n      }\n    },\n    editorJsonRetrun () {\n      return this.editor.get()\n    }\n  },\n  mounted () {\n    const container = this.$refs.jsoneditor\n    const options = _.extend({\n      onChange: this._onChange\n    }, this.options)\n    this.editor = new JSONEditor(container, options)\n    this.editor.set(this.json)\n    this.editor.aceEditor.setOptions({ maxLines: Infinity })\n  },\n  beforeDestroy () {\n    if (this.editor) {\n      this.editor.destroy()\n      this.editor = null\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"],"sourceRoot":"src/components"}]}