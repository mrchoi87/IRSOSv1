{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js!/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js!/home/mrchoi87/farmosV2/ui/node_modules/eslint-loader/index.js??ref--13-0!/home/mrchoi87/farmosV2/ui/src/store/modules/cvtgate.js","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/store/modules/cvtgate.js","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Vue from 'vue';\nvar state = {\n  items: {},\n  deviceCouple: []\n};\nvar getters = {\n  getCvtgate: function getCvtgate(state) {\n    return state.items;\n  },\n  getDeviceCouple: function getDeviceCouple(state) {\n    return state.deviceCouple;\n  }\n};\nvar actions = {\n  fetchDataCvtgate: function () {\n    var _fetchDataCvtgate = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {\n      var commit, _yield$Vue$axios$get, data;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.prev = 1;\n              _context.next = 4;\n              return Vue.axios.get('gateinfo');\n\n            case 4:\n              _yield$Vue$axios$get = _context.sent;\n              data = _yield$Vue$axios$get.data;\n              commit('setCvtgate', data);\n              _context.next = 11;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    function fetchDataCvtgate(_x) {\n      return _fetchDataCvtgate.apply(this, arguments);\n    }\n\n    return fetchDataCvtgate;\n  }(),\n  fetchDataCoupleList: function () {\n    var _fetchDataCoupleList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2) {\n      var commit, _yield$Vue$axios$get2, data;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return Vue.axios.get('devicegate');\n\n            case 4:\n              _yield$Vue$axios$get2 = _context2.sent;\n              data = _yield$Vue$axios$get2.data;\n              commit('setDevicegate', data);\n              _context2.next = 11;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 9]]);\n    }));\n\n    function fetchDataCoupleList(_x2) {\n      return _fetchDataCoupleList.apply(this, arguments);\n    }\n\n    return fetchDataCoupleList;\n  }()\n};\nvar mutations = {\n  setCvtgate: function setCvtgate(state, items) {\n    state.items = items;\n  },\n  setDevicegate: function setDevicegate(state, items) {\n    state.deviceCouple = items;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/home/mrchoi87/farmosV2/ui/src/store/modules/cvtgate.js"],"names":["Vue","state","items","deviceCouple","getters","getCvtgate","getDeviceCouple","actions","fetchDataCvtgate","commit","axios","get","data","fetchDataCoupleList","mutations","setCvtgate","setDevicegate","namespaced"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE,EADK;AAEZC,EAAAA,YAAY,EAAE;AAFF,CAAd;AAKA,IAAMC,OAAO,GAAG;AACdC,EAAAA,UADc,sBACFJ,KADE,EACK;AACjB,WAAOA,KAAK,CAACC,KAAb;AACD,GAHa;AAIdI,EAAAA,eAJc,2BAIGL,KAJH,EAIU;AACtB,WAAOA,KAAK,CAACE,YAAb;AACD;AANa,CAAhB;AASA,IAAMI,OAAO,GAAG;AACdC,EAAAA,gBAAgB;AAAA,oFAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,cAAAA,MAAT,QAASA,MAAT;AAAA;AAAA;AAAA,qBAEST,GAAG,CAACU,KAAJ,CAAUC,GAAV,CAAc,UAAd,CAFT;;AAAA;AAAA;AAENC,cAAAA,IAFM,wBAENA,IAFM;AAGdH,cAAAA,MAAM,CAAC,YAAD,EAAeG,IAAf,CAAN;AAHc;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADF;AAOdC,EAAAA,mBAAmB;AAAA,uFAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASJ,cAAAA,MAAT,SAASA,MAAT;AAAA;AAAA;AAAA,qBAEMT,GAAG,CAACU,KAAJ,CAAUC,GAAV,CAAc,YAAd,CAFN;;AAAA;AAAA;AAETC,cAAAA,IAFS,yBAETA,IAFS;AAGjBH,cAAAA,MAAM,CAAC,eAAD,EAAkBG,IAAlB,CAAN;AAHiB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAPL,CAAhB;AAeA,IAAME,SAAS,GAAG;AAChBC,EAAAA,UADgB,sBACJd,KADI,EACGC,KADH,EACU;AACxBD,IAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACD,GAHe;AAIhBc,EAAAA,aAJgB,yBAIDf,KAJC,EAIMC,KAJN,EAIa;AAC3BD,IAAAA,KAAK,CAACE,YAAN,GAAqBD,KAArB;AACD;AANe,CAAlB;AASA,eAAe;AACbe,EAAAA,UAAU,EAAE,IADC;AAEbhB,EAAAA,KAAK,EAALA,KAFa;AAGbG,EAAAA,OAAO,EAAPA,OAHa;AAIbU,EAAAA,SAAS,EAATA,SAJa;AAKbP,EAAAA,OAAO,EAAPA;AALa,CAAf","sourcesContent":["import Vue from 'vue'\r\n\r\nconst state = {\r\n  items: {},\r\n  deviceCouple: []\r\n}\r\n\r\nconst getters = {\r\n  getCvtgate (state) {\r\n    return state.items\r\n  },\r\n  getDeviceCouple (state) {\r\n    return state.deviceCouple\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  fetchDataCvtgate: async ({ commit }) => {\r\n    try {\r\n      const { data } = await Vue.axios.get('gateinfo')\r\n      commit('setCvtgate', data)\r\n    } catch (error) { }\r\n  },\r\n  fetchDataCoupleList: async ({ commit }) => {\r\n    try {\r\n      const { data } = await Vue.axios.get('devicegate')\r\n      commit('setDevicegate', data)\r\n    } catch (error) { }\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  setCvtgate (state, items) {\r\n    state.items = items\r\n  },\r\n  setDevicegate (state, items) {\r\n    state.deviceCouple = items\r\n  }\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n}\r\n"]}]}