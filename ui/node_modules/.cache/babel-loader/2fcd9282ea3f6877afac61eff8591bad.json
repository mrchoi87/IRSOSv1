{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js!/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js!/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/views/app/page/monitor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/views/app/page/monitor.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MonitorChart from '@/components/MonitorChart';\nimport { addDays, isBefore, differenceInSeconds } from 'date-fns';\nimport { mapGetters } from 'vuex';\nimport downloadjs from 'downloadjs';\n\nvar iconv = require('iconv-lite');\n\nexport default {\n  components: {\n    MonitorChart: MonitorChart\n  },\n  watch: {\n    'searchOne.field': function searchOneField(newValue, oldValue) {\n      this.$set(this.searchOne, 'data', []);\n    },\n    'searchTwo.field': function searchTwoField(newValue, oldValue) {\n      this.$set(this.searchTwo, 'data', []);\n    }\n  },\n  data: function data() {\n    return {\n      activeName: '1',\n      searchOne: {\n        field: '',\n        date: [],\n        data: []\n      },\n      searchTwo: {\n        field: '',\n        date: [],\n        data: []\n      },\n      xAxisData: {\n        min: '',\n        max: ''\n      },\n      chartData: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    getFields: 'field/getFields',\n    getAllFieldDevices: 'device/getAllFieldDevices',\n    getDataIndexList: 'dataIndex/getDataIndexList'\n  })), {}, {\n    fieldData: function fieldData() {\n      var dataItems = {};\n\n      for (var key in this.getAllFieldDevices) {\n        if (this.getAllFieldDevices.hasOwnProperty(key)) {\n          dataItems[key] = [];\n          var devics = this.getAllFieldDevices[key];\n\n          var _iterator = _createForOfIteratorHelper(devics),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var device = _step.value;\n\n              var _iterator3 = _createForOfIteratorHelper(device.datas),\n                  _step3;\n\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var data = _step3.value;\n                  dataItems[key].push({\n                    id: data.id,\n                    name: (device.name ? device.name : device.spec.Name) + ' ' + data.name,\n                    sigdigit: data.sigdigit\n                  });\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          var _iterator2 = _createForOfIteratorHelper(this.getDataIndexList),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var dataIndex = _step2.value;\n\n              // eslint-disable-next-line eqeqeq\n              if (dataIndex.field_id == key && dataIndex.id > 30000000 && String(dataIndex.id).lastIndexOf('0') !== String(dataIndex.id).length - 1) {\n                dataItems[key].push({\n                  id: dataIndex.id,\n                  name: dataIndex.name,\n                  sigdigit: dataIndex.sigdigit\n                });\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      }\n\n      return dataItems;\n    }\n  }),\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      var today = new Date();\n      var date = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0);\n      this.searchOne.date.push(this.$date().format(date));\n      this.searchOne.date.push(this.$date().format(date));\n      this.searchTwo.date.push(this.$date().format(date));\n      this.searchTwo.date.push(this.$date().format(date));\n      this.xAxisData.min = this.searchOne.date[0];\n      this.xAxisData.max = addDays(this.searchOne.date[1], 1);\n    },\n    getGraph: function () {\n      var _getGraph = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(date, searchItems) {\n        var _yield$this$axios$put, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.axios.put('farm/graph', {\n                  device_id: searchItems.map(Number),\n                  startdate: this.$date().format(date[0], 'YYYY-MM-DD'),\n                  enddate: this.$date().format(addDays(date[1], 1), 'YYYY-MM-DD')\n                });\n\n              case 2:\n                _yield$this$axios$put = _context.sent;\n                data = _yield$this$axios$put.data;\n                return _context.abrupt(\"return\", data.data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getGraph(_x, _x2) {\n        return _getGraph.apply(this, arguments);\n      }\n\n      return getGraph;\n    }(),\n    searchDownload: function () {\n      var _searchDownload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(date, searchItems) {\n        var temp, disposition, filenameRegex, matches, filename;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.axios.put('/farm/graph/download', {\n                  device_id: searchItems.map(Number),\n                  startdate: this.$date().format(date[0], 'YYYY-MM-DD'),\n                  enddate: this.$date().format(addDays(date[1], 1), 'YYYY-MM-DD')\n                });\n\n              case 2:\n                temp = _context2.sent;\n\n                if (temp) {\n                  if (temp.status === 200) {\n                    disposition = temp.headers['content-disposition'];\n\n                    if (disposition && disposition.indexOf('attachment') !== -1) {\n                      filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n                      matches = filenameRegex.exec(disposition);\n\n                      if (matches != null && matches[1]) {\n                        filename = matches[1].replace(/['\"]/g, '');\n                        downloadjs(iconv.encode(temp.data, 'utf8', {\n                          addBOM: true\n                        }).toString(), filename, 'text/csv');\n                        console.log(temp.data);\n                      }\n                    }\n                  }\n                } else {}\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function searchDownload(_x3, _x4) {\n        return _searchDownload.apply(this, arguments);\n      }\n\n      return searchDownload;\n    }(),\n    search: function () {\n      var _search = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(isDown) {\n        var _this = this;\n\n        var chartOneData, chartTwoData, isOneData, isTwoData, data, _iterator4, _step4, element, field, _iterator5, _step5, item, _data, _iterator6, _step6, _element, _field, _iterator7, _step7, _item, second, _second;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.chartData = [];\n                chartOneData = [];\n                chartTwoData = [];\n                isOneData = false;\n                isTwoData = false;\n\n                if (!(this.searchOne.field !== '' && this.searchOne.data.length > 0)) {\n                  _context3.next = 50;\n                  break;\n                }\n\n                _context3.next = 8;\n                return this.getGraph(this.searchOne.date, this.searchOne.data);\n\n              case 8:\n                data = _context3.sent;\n\n                if (!isDown) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                _context3.next = 12;\n                return this.searchDownload(this.searchOne.date, this.searchOne.data);\n\n              case 12:\n                _iterator4 = _createForOfIteratorHelper(data);\n                _context3.prev = 13;\n\n                _iterator4.s();\n\n              case 15:\n                if ((_step4 = _iterator4.n()).done) {\n                  _context3.next = 42;\n                  break;\n                }\n\n                element = _step4.value;\n                field = this.getFields.find(function (field) {\n                  return field.id === _this.searchOne.field;\n                });\n                element.name = field.name + '_';\n                _iterator5 = _createForOfIteratorHelper(this.fieldData[this.searchOne.field]);\n                _context3.prev = 20;\n\n                _iterator5.s();\n\n              case 22:\n                if ((_step5 = _iterator5.n()).done) {\n                  _context3.next = 30;\n                  break;\n                }\n\n                item = _step5.value;\n\n                if (!(item.id === element.id)) {\n                  _context3.next = 28;\n                  break;\n                }\n\n                element.name += item.name;\n                element.sigdigit = item.sigdigit;\n                return _context3.abrupt(\"break\", 30);\n\n              case 28:\n                _context3.next = 22;\n                break;\n\n              case 30:\n                _context3.next = 35;\n                break;\n\n              case 32:\n                _context3.prev = 32;\n                _context3.t0 = _context3[\"catch\"](20);\n\n                _iterator5.e(_context3.t0);\n\n              case 35:\n                _context3.prev = 35;\n\n                _iterator5.f();\n\n                return _context3.finish(35);\n\n              case 38:\n                // chartOneData = element\n                chartOneData.push(element);\n\n                if (element.data.length > 0) {\n                  isOneData = true;\n                }\n\n              case 40:\n                _context3.next = 15;\n                break;\n\n              case 42:\n                _context3.next = 47;\n                break;\n\n              case 44:\n                _context3.prev = 44;\n                _context3.t1 = _context3[\"catch\"](13);\n\n                _iterator4.e(_context3.t1);\n\n              case 47:\n                _context3.prev = 47;\n\n                _iterator4.f();\n\n                return _context3.finish(47);\n\n              case 50:\n                if (!(this.searchTwo.field !== '' && this.searchTwo.data.length > 0)) {\n                  _context3.next = 95;\n                  break;\n                }\n\n                _context3.next = 53;\n                return this.getGraph(this.searchTwo.date, this.searchTwo.data);\n\n              case 53:\n                _data = _context3.sent;\n\n                if (!isDown) {\n                  _context3.next = 57;\n                  break;\n                }\n\n                _context3.next = 57;\n                return this.searchDownload(this.searchTwo.date, this.searchTwo.data);\n\n              case 57:\n                _iterator6 = _createForOfIteratorHelper(_data);\n                _context3.prev = 58;\n\n                _iterator6.s();\n\n              case 60:\n                if ((_step6 = _iterator6.n()).done) {\n                  _context3.next = 87;\n                  break;\n                }\n\n                _element = _step6.value;\n                _field = this.getFields.find(function (field) {\n                  return field.id === _this.searchTwo.field;\n                });\n                _element.name = _field.name + '_';\n                _iterator7 = _createForOfIteratorHelper(this.fieldData[this.searchTwo.field]);\n                _context3.prev = 65;\n\n                _iterator7.s();\n\n              case 67:\n                if ((_step7 = _iterator7.n()).done) {\n                  _context3.next = 75;\n                  break;\n                }\n\n                _item = _step7.value;\n\n                if (!(_item.id === _element.id)) {\n                  _context3.next = 73;\n                  break;\n                }\n\n                _element.name += _item.name;\n                _element.sigdigit = _item.sigdigit;\n                return _context3.abrupt(\"break\", 75);\n\n              case 73:\n                _context3.next = 67;\n                break;\n\n              case 75:\n                _context3.next = 80;\n                break;\n\n              case 77:\n                _context3.prev = 77;\n                _context3.t2 = _context3[\"catch\"](65);\n\n                _iterator7.e(_context3.t2);\n\n              case 80:\n                _context3.prev = 80;\n\n                _iterator7.f();\n\n                return _context3.finish(80);\n\n              case 83:\n                chartTwoData.push(_element);\n\n                if (_element.data.length > 0) {\n                  isTwoData = true;\n                }\n\n              case 85:\n                _context3.next = 60;\n                break;\n\n              case 87:\n                _context3.next = 92;\n                break;\n\n              case 89:\n                _context3.prev = 89;\n                _context3.t3 = _context3[\"catch\"](58);\n\n                _iterator6.e(_context3.t3);\n\n              case 92:\n                _context3.prev = 92;\n\n                _iterator6.f();\n\n                return _context3.finish(92);\n\n              case 95:\n                if (isTwoData) {\n                  if (isOneData && isBefore(this.searchTwo.date[0], this.searchOne.date[0])) {\n                    second = differenceInSeconds(this.searchOne.date[0], this.searchTwo.date[0]);\n                    chartOneData.forEach(function (element) {\n                      element.data.forEach(function (element) {\n                        element.time = second + Number(element.time);\n                      });\n                    });\n                  }\n\n                  this.chartData = this.chartData.concat(chartTwoData);\n                }\n\n                if (isOneData) {\n                  if (isTwoData && isBefore(this.searchOne.date[0], this.searchTwo.date[0])) {\n                    _second = differenceInSeconds(this.searchTwo.date[0], this.searchOne.date[0]);\n                    chartTwoData.forEach(function (element) {\n                      element.data.forEach(function (element) {\n                        element.time = _second + Number(element.time);\n                      });\n                    });\n                  }\n\n                  this.chartData = this.chartData.concat(chartOneData);\n                }\n\n                if (isOneData && isTwoData) {\n                  if (isBefore(this.searchOne.date[0], this.searchTwo.date[0])) {\n                    this.xAxisData.min = this.searchOne.date[0];\n                  } else {\n                    this.xAxisData.min = this.searchTwo.date[0];\n                  }\n\n                  if (isBefore(this.searchOne.date[1], this.searchTwo.date[1])) {\n                    this.xAxisData.max = addDays(this.searchTwo.date[1], 1);\n                  } else {\n                    this.xAxisData.max = addDays(this.searchOne.date[1], 1);\n                  }\n                } else if (isOneData) {\n                  this.xAxisData.min = this.searchOne.date[0];\n                  this.xAxisData.max = addDays(this.searchOne.date[1], 1);\n                } else if (isTwoData) {\n                  this.xAxisData.min = this.searchTwo.date[0];\n                  this.xAxisData.max = addDays(this.searchTwo.date[1], 1);\n                }\n\n              case 98:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[13, 44, 47, 50], [20, 32, 35, 38], [58, 89, 92, 95], [65, 77, 80, 83]]);\n      }));\n\n      function search(_x5) {\n        return _search.apply(this, arguments);\n      }\n\n      return search;\n    }()\n  }\n};",{"version":3,"sources":["monitor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"col-xxs-12 mx-auto my-auto\" style=\"padding:15px\">\r\n    <h4 class=\"c-grey-900 mB-30\">데이터 조회</h4>\r\n\r\n    <b-row class=\"mb-2\">\r\n      <b-col xs=\"12\" lg=\"6\">\r\n        <b-card-body class=\"p-0\">\r\n          <el-collapse v-model=\"activeName\">\r\n            <el-collapse-item title=\"검색 조건\" name=\"1\">\r\n              <el-form label-position=\"left\" label-width=\"100px\">\r\n                <el-form-item label=\"온실\">\r\n                  <el-select v-model=\"searchOne.field\" placeholder=\"Select\">\r\n                    <el-option\r\n                      v-for=\"item in getFields\"\r\n                      :key=\"item.id\"\r\n                      :label=\"item.name\"\r\n                      :value=\"item.id\"\r\n                    ></el-option>\r\n                  </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"기간\">\r\n                  <el-date-picker\r\n                    v-model=\"searchOne.date\"\r\n                    type=\"daterange\"\r\n                    range-separator=\"~\"\r\n                    start-placeholder=\"시작일\"\r\n                    end-placeholder=\"종료일\"\r\n                  ></el-date-picker>\r\n                </el-form-item>\r\n                <el-form-item label=\"데이터\">\r\n                  <el-select v-model=\"searchOne.data\" multiple placeholder=\"Select\">\r\n                    <el-option\r\n                      v-for=\"item in fieldData[searchOne.field]\"\r\n                      :key=\"item.id\"\r\n                      :label=\"item.name\"\r\n                      :value=\"item.id\"\r\n                    ></el-option>\r\n                  </el-select>\r\n                </el-form-item>\r\n              </el-form>\r\n            </el-collapse-item>\r\n          </el-collapse>\r\n        </b-card-body>\r\n      </b-col>\r\n      <b-col xs=\"12\" lg=\"6\">\r\n        <b-card-body class=\"p-0\">\r\n          <el-collapse v-model=\"activeName\">\r\n            <el-collapse-item title=\"비교 조건\" name=\"1\">\r\n              <el-form label-position=\"left\" label-width=\"100px\">\r\n                <el-form-item label=\"온실\">\r\n                  <el-select v-model=\"searchTwo.field\" placeholder=\"Select\">\r\n                    <el-option\r\n                      v-for=\"item in getFields\"\r\n                      :key=\"item.id\"\r\n                      :label=\"item.name\"\r\n                      :value=\"item.id\"\r\n                    ></el-option>\r\n                  </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"기간\">\r\n                  <el-date-picker\r\n                    v-model=\"searchTwo.date\"\r\n                    type=\"daterange\"\r\n                    range-separator=\"~\"\r\n                    start-placeholder=\"시작일\"\r\n                    end-placeholder=\"종료일\"\r\n                  ></el-date-picker>\r\n                </el-form-item>\r\n                <el-form-item label=\"데이터\">\r\n                  <el-select v-model=\"searchTwo.data\" multiple placeholder=\"Select\">\r\n                    <el-option\r\n                      v-for=\"item in fieldData[searchTwo.field]\"\r\n                      :key=\"item.id\"\r\n                      :label=\"item.name\"\r\n                      :value=\"item.id\"\r\n                    ></el-option>\r\n                  </el-select>\r\n                </el-form-item>\r\n              </el-form>\r\n            </el-collapse-item>\r\n          </el-collapse>\r\n        </b-card-body>\r\n      </b-col>\r\n    </b-row>\r\n    <b-row>\r\n      <b-col lg=\"6\">\r\n        <el-button\r\n          class=\"w-100 mt-1 mb-4\"\r\n          icon=\"el-icon-search\"\r\n          @click=\"search(false)\"\r\n          type=\"primary\"\r\n          plain\r\n        >조회</el-button>\r\n      </b-col>\r\n      <b-col lg=\"6\">\r\n        <el-button\r\n          class=\"w-100 mt-1 mb-4\"\r\n          icon=\"el-icon-search\"\r\n          @click=\"search(true)\"\r\n          type=\"success\"\r\n          plain\r\n        >다운로드</el-button>\r\n      </b-col>\r\n    </b-row>\r\n    <b-row class=\"h-100\">\r\n      <b-col lg=\"12\" class=\"h-100\">\r\n        <b-card no-body class=\"h-100\" header=\"차트\">\r\n          <b-card-body ref=\"chartBody\" class=\"h-100\">\r\n            <MonitorChart id=\"load\" :graph-data=\"chartData\" :x-axis-data=\"xAxisData\" />\r\n          </b-card-body>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MonitorChart from '@/components/MonitorChart'\r\nimport { addDays, isBefore, differenceInSeconds } from 'date-fns'\r\nimport { mapGetters } from 'vuex'\r\nimport downloadjs from 'downloadjs'\r\nconst iconv = require('iconv-lite')\r\n\r\nexport default {\r\n  components: {\r\n    MonitorChart\r\n  },\r\n  watch: {\r\n    'searchOne.field' (newValue, oldValue) {\r\n      this.$set(this.searchOne, 'data', [])\r\n    },\r\n    'searchTwo.field' (newValue, oldValue) {\r\n      this.$set(this.searchTwo, 'data', [])\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      activeName: '1',\r\n      searchOne: {\r\n        field: '',\r\n        date: [],\r\n        data: []\r\n      },\r\n      searchTwo: {\r\n        field: '',\r\n        date: [],\r\n        data: []\r\n      },\r\n      xAxisData: {\r\n        min: '',\r\n        max: ''\r\n      },\r\n      chartData: []\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getFields: 'field/getFields',\r\n      getAllFieldDevices: 'device/getAllFieldDevices',\r\n      getDataIndexList: 'dataIndex/getDataIndexList'\r\n    }),\r\n\r\n    fieldData () {\r\n      let dataItems = {}\r\n      for (const key in this.getAllFieldDevices) {\r\n        if (this.getAllFieldDevices.hasOwnProperty(key)) {\r\n          dataItems[key] = []\r\n          const devics = this.getAllFieldDevices[key]\r\n          for (const device of devics) {\r\n            for (const data of device.datas) {\r\n              dataItems[key].push({\r\n                id: data.id,\r\n                name:\r\n                  (device.name ? device.name : device.spec.Name) +\r\n                  ' ' +\r\n                  data.name,\r\n                sigdigit: data.sigdigit\r\n              })\r\n            }\r\n          }\r\n\r\n          for (const dataIndex of this.getDataIndexList) {\r\n          // eslint-disable-next-line eqeqeq\r\n            if (dataIndex.field_id == key &&\r\n            dataIndex.id > 30000000 &&\r\n            String(dataIndex.id).lastIndexOf('0') !==\r\n              String(dataIndex.id).length - 1\r\n            ) {\r\n              dataItems[key].push({\r\n                id: dataIndex.id,\r\n                name: dataIndex.name,\r\n                sigdigit: dataIndex.sigdigit\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return dataItems\r\n    }\r\n  },\r\n  mounted () {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    init () {\r\n      var today = new Date()\r\n      let date = new Date(\r\n        today.getFullYear(),\r\n        today.getMonth(),\r\n        today.getDate(),\r\n        0,\r\n        0,\r\n        0\r\n      )\r\n\r\n      this.searchOne.date.push(this.$date().format(date))\r\n      this.searchOne.date.push(this.$date().format(date))\r\n      this.searchTwo.date.push(this.$date().format(date))\r\n      this.searchTwo.date.push(this.$date().format(date))\r\n\r\n      this.xAxisData.min = this.searchOne.date[0]\r\n      this.xAxisData.max = addDays(this.searchOne.date[1], 1)\r\n    },\r\n    async getGraph (date, searchItems) {\r\n      const { data } = await this.axios.put('farm/graph', {\r\n        device_id: searchItems.map(Number),\r\n        startdate: this.$date().format(date[0], 'YYYY-MM-DD'),\r\n        enddate: this.$date().format(addDays(date[1], 1), 'YYYY-MM-DD')\r\n      })\r\n      return data.data\r\n    },\r\n    async searchDownload (date, searchItems) {\r\n      let temp = await this.axios.put('/farm/graph/download', {\r\n        device_id: searchItems.map(Number),\r\n        startdate: this.$date().format(date[0], 'YYYY-MM-DD'),\r\n        enddate: this.$date().format(addDays(date[1], 1), 'YYYY-MM-DD')\r\n      })\r\n\r\n      if (temp) {\r\n        if (temp.status === 200) {\r\n          let disposition = temp.headers['content-disposition']\r\n          if (disposition && disposition.indexOf('attachment') !== -1) {\r\n            var filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/\r\n            var matches = filenameRegex.exec(disposition)\r\n            if (matches != null && matches[1]) {\r\n              const filename = matches[1].replace(/['\"]/g, '')\r\n              downloadjs(\r\n                iconv.encode(temp.data, 'utf8', { addBOM: true }).toString(),\r\n                filename,\r\n                'text/csv'\r\n              )\r\n              console.log(temp.data)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n      }\r\n    },\r\n    async search (isDown) {\r\n      this.chartData = []\r\n\r\n      let chartOneData = []\r\n      let chartTwoData = []\r\n\r\n      let isOneData = false\r\n      let isTwoData = false\r\n\r\n      if (this.searchOne.field !== '' && this.searchOne.data.length > 0) {\r\n        const data = await this.getGraph(\r\n          this.searchOne.date,\r\n          this.searchOne.data\r\n        )\r\n\r\n        if (isDown) {\r\n          await this.searchDownload(this.searchOne.date, this.searchOne.data)\r\n        }\r\n\r\n        for (const element of data) {\r\n          const field = this.getFields.find(field => {\r\n            return field.id === this.searchOne.field\r\n          })\r\n\r\n          element.name = field.name + '_'\r\n          for (const item of this.fieldData[this.searchOne.field]) {\r\n            if (item.id === element.id) {\r\n              element.name += item.name\r\n              element.sigdigit = item.sigdigit\r\n              break\r\n            }\r\n          }\r\n          // chartOneData = element\r\n          chartOneData.push(element)\r\n\r\n          if (element.data.length > 0) {\r\n            isOneData = true\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.searchTwo.field !== '' && this.searchTwo.data.length > 0) {\r\n        const data = await this.getGraph(\r\n          this.searchTwo.date,\r\n          this.searchTwo.data\r\n        )\r\n\r\n        if (isDown) {\r\n          await this.searchDownload(this.searchTwo.date, this.searchTwo.data)\r\n        }\r\n\r\n        for (const element of data) {\r\n          const field = this.getFields.find(field => {\r\n            return field.id === this.searchTwo.field\r\n          })\r\n\r\n          element.name = field.name + '_'\r\n          for (const item of this.fieldData[this.searchTwo.field]) {\r\n            if (item.id === element.id) {\r\n              element.name += item.name\r\n              element.sigdigit = item.sigdigit\r\n              break\r\n            }\r\n          }\r\n          chartTwoData.push(element)\r\n\r\n          if (element.data.length > 0) {\r\n            isTwoData = true\r\n          }\r\n        }\r\n      }\r\n\r\n      if (isTwoData) {\r\n        if (isOneData && isBefore(this.searchTwo.date[0], this.searchOne.date[0])) {\r\n          const second = differenceInSeconds(\r\n            this.searchOne.date[0],\r\n            this.searchTwo.date[0]\r\n          )\r\n\r\n          chartOneData.forEach(element => {\r\n            element.data.forEach(element => {\r\n              element.time = second + Number(element.time)\r\n            })\r\n          })\r\n        }\r\n        this.chartData = this.chartData.concat(chartTwoData)\r\n      }\r\n\r\n      if (isOneData) {\r\n        if (isTwoData && isBefore(this.searchOne.date[0], this.searchTwo.date[0])) {\r\n          const second = differenceInSeconds(\r\n            this.searchTwo.date[0],\r\n            this.searchOne.date[0]\r\n          )\r\n          chartTwoData.forEach(element => {\r\n            element.data.forEach(element => {\r\n              element.time = second + Number(element.time)\r\n            })\r\n          })\r\n        }\r\n        this.chartData = this.chartData.concat(chartOneData)\r\n      }\r\n\r\n      if (isOneData && isTwoData) {\r\n        if (isBefore(this.searchOne.date[0], this.searchTwo.date[0])) {\r\n          this.xAxisData.min = this.searchOne.date[0]\r\n        } else {\r\n          this.xAxisData.min = this.searchTwo.date[0]\r\n        }\r\n        if (isBefore(this.searchOne.date[1], this.searchTwo.date[1])) {\r\n          this.xAxisData.max = addDays(this.searchTwo.date[1], 1)\r\n        } else {\r\n          this.xAxisData.max = addDays(this.searchOne.date[1], 1)\r\n        }\r\n      } else if (isOneData) {\r\n        this.xAxisData.min = this.searchOne.date[0]\r\n        this.xAxisData.max = addDays(this.searchOne.date[1], 1)\r\n      } else if (isTwoData) {\r\n        this.xAxisData.min = this.searchTwo.date[0]\r\n        this.xAxisData.max = addDays(this.searchTwo.date[1], 1)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ndiv >>> .el-collapse-item__header,\r\ndiv >>> .el-collapse-item__content {\r\n  padding: 20px;\r\n}\r\n\r\n.el-collapse {\r\n  border-left: 1px solid #ebeef5;\r\n  border-right: 1px solid #ebeef5;\r\n}\r\n\r\n.el-date-editor,\r\n.el-select {\r\n  width: 100%;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/app/page"}]}