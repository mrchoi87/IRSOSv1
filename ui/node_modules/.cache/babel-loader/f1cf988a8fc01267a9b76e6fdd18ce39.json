{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js!/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js!/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/MonitorChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/MonitorChart.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.string.ends-with\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { addSeconds } from 'date-fns';\nimport vgridVue from '@/components/chart/vgridVue';\nimport hgridVue from '@/components/chart/hgridVue';\nimport lineVue from '@/components/chart/lineVue';\nimport circleTextVue from '@/components/chart/circleTextVue';\nimport legendVue from '@/components/chart/legendVue';\nimport defsVue from '@/components/chart/defsVue';\nimport { statusCode } from '@/constants/config';\nimport * as d3 from 'd3';\nexport default {\n  layout: 'dashboard',\n  components: {\n    vgridVue: vgridVue,\n    hgridVue: hgridVue,\n    lineVue: lineVue,\n    circleTextVue: circleTextVue,\n    legendVue: legendVue,\n    defsVue: defsVue\n  },\n  props: {\n    defineHeight: {\n      required: false,\n      type: Number,\n      default: 366\n    },\n    id: {\n      required: true,\n      type: String\n    },\n    xAxisData: {\n      type: Object,\n      required: true\n    },\n    graphData: {\n      required: true,\n      type: Array\n    }\n  },\n  data: function data() {\n    return {\n      difineMax: 30,\n      marginAxis: 40,\n      width: 0,\n      height: 0,\n      thresholds: []\n    };\n  },\n  computed: {\n    Root: function Root() {\n      var Root = d3.select(this.$el);\n      Root.append('div').attr('class', 'tooltip').style('opacity', 0);\n      return Root;\n    },\n    Svg: function Svg() {\n      return this.Root.select('svg');\n    },\n    Ggrid: function Ggrid() {\n      return this.Svg.select('.grid');\n    },\n    svgWidth: function svgWidth() {\n      return this.width + this.margin.left + this.margin.right;\n    },\n    svgHeight: function svgHeight() {\n      return this.height + this.margin.top + this.margin.bottom;\n    },\n    xScale: function xScale() {\n      return d3.scaleTime().domain([this.$date().parse(this.xAxisData.min), this.$date().parse(this.xAxisData.max)]).range([0, this.width]);\n    },\n    yScales: function yScales() {\n      var yScales = this.yAxisData;\n\n      for (var index in this.yAxisData) {\n        yScales[index]['yScale'] = d3.scaleLinear().domain([this.yAxisData[index]['min'], this.yAxisData[index]['max']]).range([this.height, 0]);\n      }\n\n      return yScales;\n    },\n    yAxisData: function yAxisData() {\n      var yAxisData = {};\n      this.thresholds.forEach(function (element) {\n        if (yAxisData[element.unit] === undefined) {\n          yAxisData[element.unit] = {\n            max: this.difineMax,\n            min: 0\n          };\n        }\n\n        var max = d3.max(element.data, function (d) {\n          return d.value;\n        });\n\n        if (yAxisData[element.unit]['max'] <= max) {\n          yAxisData[element.unit]['max'] = Math.ceil(max / 10) * 10;\n        }\n\n        var min = d3.min(element.data, function (d) {\n          return d.value;\n        });\n\n        if (yAxisData[element.unit]['min'] >= min) {\n          if (min >= 0) {\n            yAxisData[element.unit]['min'] = 0;\n          } else {\n            yAxisData[element.unit]['min'] = -Math.ceil(min / -10) * 10;\n          }\n        }\n\n        element.lineStyle = 'dash';\n        element.linetype = 'monotone';\n        element.dotEnable = false;\n      }, this);\n      this.handleWindowResize();\n      return yAxisData;\n    },\n    margin: function margin() {\n      var margin = {\n        top: 30,\n        right: 40,\n        bottom: 20,\n        left: Object.keys(this.yAxisData).length <= 0 ? this.marginAxis : Object.keys(this.yAxisData).length * this.marginAxis\n      };\n      return margin;\n    }\n  },\n  watch: {\n    graphData: function graphData() {\n      var thresholds = [];\n      var index = 0;\n      this.graphData.forEach(function (element, ii) {\n        element.data.forEach(function (element, i) {\n          element.x = element.time;\n          element.y = element.value;\n        }, this);\n        var threshold = {\n          device_id: element.device_id,\n          name: element.name,\n          linetype: element.id.toString().endsWith('00') ? 'step' : 'monotone',\n          lineStyle: 'line',\n          unit: element.unit,\n          data: element.data,\n          xValue: 0,\n          yValue: 0,\n          opacity: 0,\n          id: index,\n          sigdigit: element.sigdigit,\n          deviceId: element.id\n        };\n        index++;\n        thresholds.push(threshold);\n      }, this);\n      this.thresholds = thresholds;\n    }\n  },\n  mounted: function mounted() {\n    window.addEventListener('resize', this.handleWindowResize);\n    this.handleWindowResize();\n    this.eventGrid();\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  },\n  methods: {\n    eventGrid: function eventGrid() {\n      var lines = d3.select(this.$el).select('svg').selectAll('#thresholdLine').node().childNodes;\n      var tooltip = this.Root.selectAll('.tooltip');\n      var self = this;\n      this.$nextTick(function () {\n        d3.select(this.$el).select('svg').selectAll('.dot').on('click', function (d) {\n          d3.selectAll('.active').classed('active', false);\n          d3.select(this).classed('active', true);\n          d3.select(this).transition().duration(400).attr('r', 50).transition().duration(400).attr('r', 7);\n          var time = self.$date().format(self.secondToHour(d3.select(this).attr('x')).toFixed(2), 'MM-DD HH:mm');\n          var ss = time + '<br>' + d3.select(this).attr('name') + ' : ' + d3.select(this).attr('y') + '<br>';\n          tooltip.html(ss);\n        });\n      });\n      d3.select(this.$el).select('svg').on('mouseover', function () {\n        d3.select(self.$el).select('svg').select('#circle').selectAll('circle').style('opacity', '1');\n        tooltip.transition().style('opacity', 1);\n      });\n      d3.select(this.$el).on('mouseleave', function () {\n        d3.select(self.$el).select('svg').select('#circle').selectAll('circle').style('opacity', '0');\n        tooltip.transition().style('opacity', 0);\n        lines.forEach(function (element, i) {\n          self.thresholds[i].opacity = 0;\n        });\n      }, this);\n      d3.select(this.$el).on('mousemove', function () {\n        var mouse = d3.mouse(this);\n        mouse[0] -= self.margin.left;\n\n        if (mouse[0] < 0) {\n          mouse[0] = 0;\n        } else if (mouse[0] >= self.width) {\n          mouse[0] = self.width;\n        }\n\n        var time = \"<div style=\\\"margin-top:10px;margin-bottom:10px;text-align: center;font-weight: bold;\\\">\\n          \".concat(self.$date().format(self.xScale.invert(mouse[0]), 'M/D HH:mm'), \"</div>\");\n        lines.forEach(function (element, i) {\n          var pos = element.getPointAtLength(mouse[0]);\n          var beginning = 0;\n          var end = element.getTotalLength();\n          var target = null;\n\n          while (true) {\n            target = Math.floor((beginning + end) / 2);\n            pos = element.getPointAtLength(target);\n\n            if ((target === end || target === beginning) && pos.x !== mouse[0]) {\n              break;\n            }\n\n            if (pos.x > mouse[0]) end = target;else if (pos.x < mouse[0]) beginning = target;else {\n              // self.thresholds[i].opacity = 1\n              break; // position found\n            }\n          }\n\n          self.$set(self.thresholds[i], 'xValue', pos.x);\n          self.$set(self.thresholds[i], 'yValue', pos.y);\n          var color = \"color:\".concat(d3.schemeCategory10[i % 10]);\n          var value = self.yScale(self.thresholds[i].unit).invert(pos.y);\n          var sigdigit = Math.pow(10, self.thresholds[i].sigdigit);\n          time += \"<div style=\\\"margin-left:5px;margin-right:5px;margin-bottom:5px;\".concat(color, \"\\\">\");\n\n          if (self.thresholds[i].deviceId.toString().endsWith('00')) {\n            time += \"\".concat(self.thresholds[i].name, \" : \").concat(statusCode[value.toFixed(0)], \"</div>\");\n          } else {\n            time += \"\".concat(self.thresholds[i].name, \" : \").concat(Math.floor(value * sigdigit) / sigdigit, \" \").concat(self.thresholds[i].unit, \"</div>\");\n          }\n        });\n\n        if (tooltip.node()) {\n          var tooltipX = 0;\n\n          if (mouse[0] < tooltip.node().getBoundingClientRect().width) {\n            tooltipX = mouse[0] + self.margin.left + 60 + 'px';\n          } else {\n            tooltipX = mouse[0] + self.margin.left - tooltip.node().getBoundingClientRect().width - 20 + 'px';\n          }\n\n          tooltip.html(time).style('left', tooltipX).style('top', mouse[1] - tooltip.node().getBoundingClientRect().height / 2 + 'px').style('padding', 2 + 'px');\n        }\n      });\n    },\n    handleWindowResize: function handleWindowResize() {\n      this.getSize();\n    },\n    getSize: function getSize() {\n      var _this = this;\n\n      setTimeout(function () {\n        _this.width = _this.$el.clientWidth - _this.margin.left - _this.margin.right;\n        _this.height = _this.$el.clientHeight - _this.margin.top - _this.margin.bottom;\n      }, 1);\n    },\n    yScale: function yScale(unit) {\n      if (unit !== undefined && this.yAxisData[unit]) {\n        return d3.scaleLinear().domain([this.yAxisData[unit]['min'], this.yAxisData[unit]['max']]).range([this.height, 0]);\n      } else {\n        for (var index in this.yAxisData) {\n          return d3.scaleLinear().domain([this.yAxisData[index]['min'], this.yAxisData[index]['max']]).range([this.height, 0]);\n        }\n      }\n    },\n    secondToHour: function secondToHour(seconds) {\n      return addSeconds(this.xAxisData.min, seconds);\n    }\n  }\n};",{"version":3,"sources":["MonitorChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA,SAAA,UAAA,QAAA,UAAA;AACA,OAAA,QAAA,MAAA,6BAAA;AACA,OAAA,QAAA,MAAA,6BAAA;AACA,OAAA,OAAA,MAAA,4BAAA;AACA,OAAA,aAAA,MAAA,kCAAA;AACA,OAAA,SAAA,MAAA,8BAAA;AACA,OAAA,OAAA,MAAA,4BAAA;AACA,SAAA,UAAA,QAAA,oBAAA;AAEA,OAAA,KAAA,EAAA,MAAA,IAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA,QADA;AAEA,IAAA,QAAA,EAAA,QAFA;AAGA,IAAA,OAAA,EAAA,OAHA;AAIA,IAAA,aAAA,EAAA,aAJA;AAKA,IAAA,SAAA,EAAA,SALA;AAMA,IAAA,OAAA,EAAA;AANA,GAFA;AAUA,EAAA,KAAA,EAAA;AACA,IAAA,YAAA,EAAA;AACA,MAAA,QAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA,MAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KADA;AAMA,IAAA,EAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA,KANA;AAUA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAVA;AAcA,IAAA,SAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA;AAdA,GAVA;AA6BA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,CAHA;AAIA,MAAA,MAAA,EAAA,CAJA;AAKA,MAAA,UAAA,EAAA;AALA,KAAA;AAOA,GArCA;AAsCA,EAAA,QAAA,EAAA;AACA,IAAA,IAAA,EAAA,gBAAA;AACA,UAAA,IAAA,GAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,CAAA;AACA,MAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EACA,IADA,CACA,OADA,EACA,SADA,EAEA,KAFA,CAEA,SAFA,EAEA,CAFA;AAGA,aAAA,IAAA;AACA,KAPA;AAQA,IAAA,GAAA,EAAA,eAAA;AACA,aAAA,KAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA,KAVA;AAWA,IAAA,KAAA,EAAA,iBAAA;AACA,aAAA,KAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA;AACA,KAbA;AAcA,IAAA,QAAA,EAAA,oBAAA;AACA,aAAA,KAAA,KAAA,GAAA,KAAA,MAAA,CAAA,IAAA,GAAA,KAAA,MAAA,CAAA,KAAA;AACA,KAhBA;AAiBA,IAAA,SAAA,EAAA,qBAAA;AACA,aAAA,KAAA,MAAA,GAAA,KAAA,MAAA,CAAA,GAAA,GAAA,KAAA,MAAA,CAAA,MAAA;AACA,KAnBA;AAoBA,IAAA,MAAA,EAAA,kBAAA;AACA,aAAA,EAAA,CACA,SADA,GAEA,MAFA,CAEA,CACA,KAAA,KAAA,GAAA,KAAA,CAAA,KAAA,SAAA,CAAA,GAAA,CADA,EAEA,KAAA,KAAA,GAAA,KAAA,CAAA,KAAA,SAAA,CAAA,GAAA,CAFA,CAFA,EAMA,KANA,CAMA,CAAA,CAAA,EAAA,KAAA,KAAA,CANA,CAAA;AAOA,KA5BA;AA6BA,IAAA,OAAA,EAAA,mBAAA;AACA,UAAA,OAAA,GAAA,KAAA,SAAA;;AACA,WAAA,IAAA,KAAA,IAAA,KAAA,SAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,CAAA,QAAA,IAAA,EAAA,CACA,WADA,GAEA,MAFA,CAEA,CAAA,KAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,CAFA,EAGA,KAHA,CAGA,CAAA,KAAA,MAAA,EAAA,CAAA,CAHA,CAAA;AAIA;;AACA,aAAA,OAAA;AACA,KAtCA;AAuCA,IAAA,SAAA,EAAA,qBAAA;AACA,UAAA,SAAA,GAAA,EAAA;AACA,WAAA,UAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,YAAA,SAAA,CAAA,OAAA,CAAA,IAAA,CAAA,KAAA,SAAA,EAAA;AACA,UAAA,SAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA,YAAA,GAAA,EAAA,KAAA,SADA;AAEA,YAAA,GAAA,EAAA;AAFA,WAAA;AAIA;;AACA,YAAA,GAAA,GAAA,EAAA,CAAA,GAAA,CAAA,OAAA,CAAA,IAAA,EAAA,UAAA,CAAA,EAAA;AACA,iBAAA,CAAA,CAAA,KAAA;AACA,SAFA,CAAA;;AAGA,YAAA,SAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,KAAA,KAAA,GAAA,EAAA;AACA,UAAA,SAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,KAAA,IAAA,IAAA,CAAA,IAAA,CAAA,GAAA,GAAA,EAAA,IAAA,EAAA;AACA;;AAEA,YAAA,GAAA,GAAA,EAAA,CAAA,GAAA,CAAA,OAAA,CAAA,IAAA,EAAA,UAAA,CAAA,EAAA;AACA,iBAAA,CAAA,CAAA,KAAA;AACA,SAFA,CAAA;;AAGA,YAAA,SAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,KAAA,KAAA,GAAA,EAAA;AACA,cAAA,GAAA,IAAA,CAAA,EAAA;AACA,YAAA,SAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA;AACA,WAFA,MAEA;AACA,YAAA,SAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA;AACA;AACA;;AACA,QAAA,OAAA,CAAA,SAAA,GAAA,MAAA;AACA,QAAA,OAAA,CAAA,QAAA,GAAA,UAAA;AACA,QAAA,OAAA,CAAA,SAAA,GAAA,KAAA;AACA,OA3BA,EA2BA,IA3BA;AA4BA,WAAA,kBAAA;AACA,aAAA,SAAA;AACA,KAvEA;AAwEA,IAAA,MAxEA,oBAwEA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,GAAA,EAAA,EADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,MAAA,EAAA,EAHA;AAIA,QAAA,IAAA,EACA,MAAA,CAAA,IAAA,CAAA,KAAA,SAAA,EAAA,MAAA,IAAA,CAAA,GACA,KAAA,UADA,GAEA,MAAA,CAAA,IAAA,CAAA,KAAA,SAAA,EAAA,MAAA,GAAA,KAAA;AAPA,OAAA;AASA,aAAA,MAAA;AACA;AAnFA,GAtCA;AA2HA,EAAA,KAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,GAAA,CAAA;AACA,WAAA,SAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA,EAAA,EAAA;AACA,QAAA,OAAA,CAAA,IAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA,CAAA,EAAA;AACA,UAAA,OAAA,CAAA,CAAA,GAAA,OAAA,CAAA,IAAA;AACA,UAAA,OAAA,CAAA,CAAA,GAAA,OAAA,CAAA,KAAA;AACA,SAHA,EAGA,IAHA;AAKA,YAAA,SAAA,GAAA;AACA,UAAA,SAAA,EAAA,OAAA,CAAA,SADA;AAEA,UAAA,IAAA,EAAA,OAAA,CAAA,IAFA;AAGA,UAAA,QAAA,EAAA,OAAA,CAAA,EAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA,IAAA,MAAA,GAAA,UAHA;AAIA,UAAA,SAAA,EAAA,MAJA;AAKA,UAAA,IAAA,EAAA,OAAA,CAAA,IALA;AAMA,UAAA,IAAA,EAAA,OAAA,CAAA,IANA;AAOA,UAAA,MAAA,EAAA,CAPA;AAQA,UAAA,MAAA,EAAA,CARA;AASA,UAAA,OAAA,EAAA,CATA;AAUA,UAAA,EAAA,EAAA,KAVA;AAWA,UAAA,QAAA,EAAA,OAAA,CAAA,QAXA;AAYA,UAAA,QAAA,EAAA,OAAA,CAAA;AAZA,SAAA;AAcA,QAAA,KAAA;AACA,QAAA,UAAA,CAAA,IAAA,CAAA,SAAA;AACA,OAtBA,EAsBA,IAtBA;AAuBA,WAAA,UAAA,GAAA,UAAA;AACA;AA5BA,GA3HA;AAyJA,EAAA,OAzJA,qBAyJA;AACA,IAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,kBAAA;AACA,SAAA,kBAAA;AAEA,SAAA,SAAA;AACA,GA9JA;AA+JA,EAAA,aAAA,EAAA,yBAAA;AACA,IAAA,MAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,kBAAA;AACA,GAjKA;AAkKA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,KAAA,GAAA,EAAA,CACA,MADA,CACA,KAAA,GADA,EAEA,MAFA,CAEA,KAFA,EAGA,SAHA,CAGA,gBAHA,EAIA,IAJA,GAIA,UAJA;AAKA,UAAA,OAAA,GAAA,KAAA,IAAA,CAAA,SAAA,CAAA,UAAA,CAAA;AACA,UAAA,IAAA,GAAA,IAAA;AAEA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,EACA,MADA,CACA,KADA,EAEA,SAFA,CAEA,MAFA,EAGA,EAHA,CAGA,OAHA,EAGA,UAAA,CAAA,EAAA;AACA,UAAA,EAAA,CAAA,SAAA,CAAA,SAAA,EAAA,OAAA,CAAA,QAAA,EAAA,KAAA;AACA,UAAA,EAAA,CAAA,MAAA,CAAA,IAAA,EAAA,OAAA,CAAA,QAAA,EAAA,IAAA;AAEA,UAAA,EAAA,CAAA,MAAA,CAAA,IAAA,EACA,UADA,GAEA,QAFA,CAEA,GAFA,EAGA,IAHA,CAGA,GAHA,EAGA,EAHA,EAIA,UAJA,GAKA,QALA,CAKA,GALA,EAMA,IANA,CAMA,GANA,EAMA,CANA;AAQA,cAAA,IAAA,GAAA,IAAA,CACA,KADA,GAEA,MAFA,CAGA,IAAA,CAAA,YAAA,CAAA,EAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CAAA,GAAA,CAAA,EAAA,OAAA,CAAA,CAAA,CAHA,EAIA,aAJA,CAAA;AAOA,cAAA,EAAA,GACA,IAAA,GACA,MADA,GAEA,EAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CAAA,MAAA,CAFA,GAGA,KAHA,GAIA,EAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CAAA,GAAA,CAJA,GAKA,MANA;AAOA,UAAA,OAAA,CAAA,IAAA,CAAA,EAAA;AACA,SA9BA;AA+BA,OAhCA;AAiCA,MAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,EACA,MADA,CACA,KADA,EAEA,EAFA,CAEA,WAFA,EAEA,YAAA;AACA,QAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,EACA,MADA,CACA,KADA,EAEA,MAFA,CAEA,SAFA,EAGA,SAHA,CAGA,QAHA,EAIA,KAJA,CAIA,SAJA,EAIA,GAJA;AAKA,QAAA,OAAA,CAAA,UAAA,GAAA,KAAA,CAAA,SAAA,EAAA,CAAA;AACA,OATA;AAUA,MAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,EAAA,EAAA,CACA,YADA,EAEA,YAAA;AACA,QAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,EACA,MADA,CACA,KADA,EAEA,MAFA,CAEA,SAFA,EAGA,SAHA,CAGA,QAHA,EAIA,KAJA,CAIA,SAJA,EAIA,GAJA;AAKA,QAAA,OAAA,CAAA,UAAA,GAAA,KAAA,CAAA,SAAA,EAAA,CAAA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA,CAAA,EAAA;AACA,UAAA,IAAA,CAAA,UAAA,CAAA,CAAA,EAAA,OAAA,GAAA,CAAA;AACA,SAFA;AAGA,OAZA,EAaA,IAbA;AAgBA,MAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,EAAA,EAAA,CAAA,WAAA,EAAA,YAAA;AACA,YAAA,KAAA,GAAA,EAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,MAAA,CAAA,IAAA;;AACA,YAAA,KAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA;AACA,UAAA,KAAA,CAAA,CAAA,CAAA,GAAA,CAAA;AACA,SAFA,MAEA,IAAA,KAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,KAAA;AACA;;AAEA,YAAA,IAAA,iHACA,IAAA,CACA,KADA,GAEA,MAFA,CAEA,IAAA,CAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAFA,EAEA,WAFA,CADA,WAAA;AAKA,QAAA,KAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA,CAAA,EAAA;AACA,cAAA,GAAA,GAAA,OAAA,CAAA,gBAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,cAAA,SAAA,GAAA,CAAA;AACA,cAAA,GAAA,GAAA,OAAA,CAAA,cAAA,EAAA;AACA,cAAA,MAAA,GAAA,IAAA;;AAEA,iBAAA,IAAA,EAAA;AACA,YAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,SAAA,GAAA,GAAA,IAAA,CAAA,CAAA;AACA,YAAA,GAAA,GAAA,OAAA,CAAA,gBAAA,CAAA,MAAA,CAAA;;AAEA,gBACA,CAAA,MAAA,KAAA,GAAA,IAAA,MAAA,KAAA,SAAA,KACA,GAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,CAFA,EAGA;AACA;AACA;;AACA,gBAAA,GAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA,EAAA,GAAA,GAAA,MAAA,CAAA,KACA,IAAA,GAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA,EAAA,SAAA,GAAA,MAAA,CAAA,KACA;AACA;AACA,oBAFA,CAEA;AACA;AACA;;AACA,UAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,QAAA,EAAA,GAAA,CAAA,CAAA;AACA,UAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,QAAA,EAAA,GAAA,CAAA,CAAA;AAEA,cAAA,KAAA,mBAAA,EAAA,CAAA,gBAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA,cAAA,KAAA,GAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,UAAA,CAAA,CAAA,EAAA,IAAA,EAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA;AACA,cAAA,QAAA,GAAA,IAAA,CAAA,GAAA,CAAA,EAAA,EAAA,IAAA,CAAA,UAAA,CAAA,CAAA,EAAA,QAAA,CAAA;AACA,UAAA,IAAA,8EAAA,KAAA,QAAA;;AACA,cAAA,IAAA,CAAA,UAAA,CAAA,CAAA,EAAA,QAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAAA,EAAA;AACA,YAAA,IAAA,cAAA,IAAA,CAAA,UAAA,CAAA,CAAA,EAAA,IAAA,gBACA,UAAA,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CADA,WAAA;AAGA,WAJA,MAIA;AACA,YAAA,IAAA,cAAA,IAAA,CAAA,UAAA,CAAA,CAAA,EAAA,IAAA,gBAAA,IAAA,CAAA,KAAA,CACA,KAAA,GAAA,QADA,IAEA,QAFA,cAEA,IAAA,CAAA,UAAA,CAAA,CAAA,EAAA,IAFA,WAAA;AAGA;AACA,SAvCA;;AAyCA,YAAA,OAAA,CAAA,IAAA,EAAA,EAAA;AACA,cAAA,QAAA,GAAA,CAAA;;AACA,cAAA,KAAA,CAAA,CAAA,CAAA,GAAA,OAAA,CAAA,IAAA,GAAA,qBAAA,GAAA,KAAA,EAAA;AACA,YAAA,QAAA,GAAA,KAAA,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,MAAA,CAAA,IAAA,GAAA,EAAA,GAAA,IAAA;AACA,WAFA,MAEA;AACA,YAAA,QAAA,GACA,KAAA,CAAA,CAAA,CAAA,GACA,IAAA,CAAA,MAAA,CAAA,IADA,GAEA,OAAA,CAAA,IAAA,GAAA,qBAAA,GAAA,KAFA,GAGA,EAHA,GAIA,IALA;AAMA;;AAEA,UAAA,OAAA,CACA,IADA,CACA,IADA,EAEA,KAFA,CAEA,MAFA,EAEA,QAFA,EAGA,KAHA,CAIA,KAJA,EAKA,KAAA,CAAA,CAAA,CAAA,GACA,OAAA,CAAA,IAAA,GAAA,qBAAA,GAAA,MAAA,GAAA,CADA,GAEA,IAPA,EASA,KATA,CASA,SATA,EASA,IAAA,IATA;AAUA;AACA,OA/EA;AAgFA,KArJA;AAsJA,IAAA,kBAtJA,gCAsJA;AACA,WAAA,OAAA;AACA,KAxJA;AAyJA,IAAA,OAzJA,qBAyJA;AAAA;;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,KAAA,GACA,KAAA,CAAA,GAAA,CAAA,WAAA,GAAA,KAAA,CAAA,MAAA,CAAA,IAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KADA;AAEA,QAAA,KAAA,CAAA,MAAA,GACA,KAAA,CAAA,GAAA,CAAA,YAAA,GAAA,KAAA,CAAA,MAAA,CAAA,GAAA,GAAA,KAAA,CAAA,MAAA,CAAA,MADA;AAEA,OALA,EAKA,CALA,CAAA;AAMA,KAhKA;AAiKA,IAAA,MAjKA,kBAiKA,IAjKA,EAiKA;AACA,UAAA,IAAA,KAAA,SAAA,IAAA,KAAA,SAAA,CAAA,IAAA,CAAA,EAAA;AACA,eAAA,EAAA,CACA,WADA,GAEA,MAFA,CAEA,CAAA,KAAA,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAFA,EAGA,KAHA,CAGA,CAAA,KAAA,MAAA,EAAA,CAAA,CAHA,CAAA;AAIA,OALA,MAKA;AACA,aAAA,IAAA,KAAA,IAAA,KAAA,SAAA,EAAA;AACA,iBAAA,EAAA,CACA,WADA,GAEA,MAFA,CAEA,CACA,KAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CADA,EAEA,KAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAFA,CAFA,EAMA,KANA,CAMA,CAAA,KAAA,MAAA,EAAA,CAAA,CANA,CAAA;AAOA;AACA;AACA,KAlLA;AAmLA,IAAA,YAnLA,wBAmLA,OAnLA,EAmLA;AACA,aAAA,UAAA,CAAA,KAAA,SAAA,CAAA,GAAA,EAAA,OAAA,CAAA;AACA;AArLA;AAlKA,CAAA","sourcesContent":["<template>\n  <div class=\"h-100\">\n    <svg :height=\"defineHeight\" class=\"h-100 w-100\">\n      <defsVue :id=\"id\" />\n      <g id=\"main\" :transform=\"'translate('+margin.left+ ','+margin.top+')'\">\n        <g id=\"grid\">\n          <vgridVue\n            ref=\"vgridVue\"\n            :x-scale=\"xScale\"\n            :isGrid=\"true\"\n            :width=\"width\"\n            :height=\"height\"\n          />\n          <hgridVue\n            ref=\"hgridVue\"\n            :yScales=\"yScales\"\n            :isGrid=\"true\"\n            :yAxisData=\"yAxisData\"\n            :width=\"width\"\n          />\n        </g>\n        <g id=\"line\">\n          <g id=\"thresholdLine\">\n            <lineVue\n              v-for=\"(item,index) in thresholds\"\n              :lineStyle=\"item.lineStyle\"\n              :lineType=\"item.linetype\"\n              :key=\"item.id\"\n              :x-scale=\"xScale\"\n              :y-scale=\"yScale(item.unit)\"\n              :parameters=\"item.data\"\n              :index=\"index\"\n              :xScaleFunction=\"secondToHour\"\n            />\n          </g>\n        </g>\n        <g id=\"circle\">\n          <circleTextVue\n            v-for=\"(item,index) in thresholds\"\n            :key=\"item.id\"\n            :x-scale=\"xScale\"\n            :y-scale=\"yScale(item.unit)\"\n            :xValue=\"item.xValue\"\n            :opacity=\"item.opacity\"\n            :yValue=\"item.yValue\"\n            :index=\"index\"\n            :unit=\"item.unit\"\n            :deviceId=\"item.deviceId\"\n          />\n        </g>\n        <g id=\"legend\">\n          <legendVue\n            v-for=\"(item,index) in thresholds\"\n            :key=\"index\"\n            :index=\"index\"\n            :name=\"item.name\"\n            :posX=\"width\"\n          />\n        </g>\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport { addSeconds } from 'date-fns'\nimport vgridVue from '@/components/chart/vgridVue'\nimport hgridVue from '@/components/chart/hgridVue'\nimport lineVue from '@/components/chart/lineVue'\nimport circleTextVue from '@/components/chart/circleTextVue'\nimport legendVue from '@/components/chart/legendVue'\nimport defsVue from '@/components/chart/defsVue'\nimport { statusCode } from '@/constants/config'\n\nimport * as d3 from 'd3'\n\nexport default {\n  layout: 'dashboard',\n  components: {\n    vgridVue,\n    hgridVue,\n    lineVue,\n    circleTextVue,\n    legendVue,\n    defsVue\n  },\n  props: {\n    defineHeight: {\n      required: false,\n      type: Number,\n      default: 366\n    },\n    id: {\n      required: true,\n      type: String\n    },\n    xAxisData: {\n      type: Object,\n      required: true\n    },\n    graphData: {\n      required: true,\n      type: Array\n    }\n  },\n  data: function () {\n    return {\n      difineMax: 30,\n      marginAxis: 40,\n      width: 0,\n      height: 0,\n      thresholds: []\n    }\n  },\n  computed: {\n    Root: function () {\n      const Root = d3.select(this.$el)\n      Root.append('div')\n        .attr('class', 'tooltip')\n        .style('opacity', 0)\n      return Root\n    },\n    Svg: function () {\n      return this.Root.select('svg')\n    },\n    Ggrid: function () {\n      return this.Svg.select('.grid')\n    },\n    svgWidth: function () {\n      return this.width + this.margin.left + this.margin.right\n    },\n    svgHeight: function () {\n      return this.height + this.margin.top + this.margin.bottom\n    },\n    xScale: function () {\n      return d3\n        .scaleTime()\n        .domain([\n          this.$date().parse(this.xAxisData.min),\n          this.$date().parse(this.xAxisData.max)\n        ])\n        .range([0, this.width])\n    },\n    yScales: function () {\n      let yScales = this.yAxisData\n      for (var index in this.yAxisData) {\n        yScales[index]['yScale'] = d3\n          .scaleLinear()\n          .domain([this.yAxisData[index]['min'], this.yAxisData[index]['max']])\n          .range([this.height, 0])\n      }\n      return yScales\n    },\n    yAxisData: function () {\n      let yAxisData = {}\n      this.thresholds.forEach(function (element) {\n        if (yAxisData[element.unit] === undefined) {\n          yAxisData[element.unit] = {\n            max: this.difineMax,\n            min: 0\n          }\n        }\n        let max = d3.max(element.data, function (d) {\n          return d.value\n        })\n        if (yAxisData[element.unit]['max'] <= max) {\n          yAxisData[element.unit]['max'] = Math.ceil(max / 10) * 10\n        }\n\n        let min = d3.min(element.data, function (d) {\n          return d.value\n        })\n        if (yAxisData[element.unit]['min'] >= min) {\n          if (min >= 0) {\n            yAxisData[element.unit]['min'] = 0\n          } else {\n            yAxisData[element.unit]['min'] = -Math.ceil(min / -10) * 10\n          }\n        }\n        element.lineStyle = 'dash'\n        element.linetype = 'monotone'\n        element.dotEnable = false\n      }, this)\n      this.handleWindowResize()\n      return yAxisData\n    },\n    margin () {\n      let margin = {\n        top: 30,\n        right: 40,\n        bottom: 20,\n        left:\n          Object.keys(this.yAxisData).length <= 0\n            ? this.marginAxis\n            : Object.keys(this.yAxisData).length * this.marginAxis\n      }\n      return margin\n    }\n  },\n  watch: {\n    graphData () {\n      let thresholds = []\n      let index = 0\n      this.graphData.forEach(function (element, ii) {\n        element.data.forEach(function (element, i) {\n          element.x = element.time\n          element.y = element.value\n        }, this)\n\n        let threshold = {\n          device_id: element.device_id,\n          name: element.name,\n          linetype: element.id.toString().endsWith('00') ? 'step' : 'monotone',\n          lineStyle: 'line',\n          unit: element.unit,\n          data: element.data,\n          xValue: 0,\n          yValue: 0,\n          opacity: 0,\n          id: index,\n          sigdigit: element.sigdigit,\n          deviceId: element.id\n        }\n        index++\n        thresholds.push(threshold)\n      }, this)\n      this.thresholds = thresholds\n    }\n  },\n  mounted () {\n    window.addEventListener('resize', this.handleWindowResize)\n    this.handleWindowResize()\n\n    this.eventGrid()\n  },\n  beforeDestroy: function () {\n    window.removeEventListener('resize', this.handleWindowResize)\n  },\n  methods: {\n    eventGrid () {\n      var lines = d3\n        .select(this.$el)\n        .select('svg')\n        .selectAll('#thresholdLine')\n        .node().childNodes\n      var tooltip = this.Root.selectAll('.tooltip')\n      var self = this\n\n      this.$nextTick(function () {\n        d3.select(this.$el)\n          .select('svg')\n          .selectAll('.dot')\n          .on('click', function (d) {\n            d3.selectAll('.active').classed('active', false)\n            d3.select(this).classed('active', true)\n\n            d3.select(this)\n              .transition()\n              .duration(400)\n              .attr('r', 50)\n              .transition()\n              .duration(400)\n              .attr('r', 7)\n\n            var time = self\n              .$date()\n              .format(\n                self.secondToHour(d3.select(this).attr('x')).toFixed(2),\n                'MM-DD HH:mm'\n              )\n\n            var ss =\n              time +\n              '<br>' +\n              d3.select(this).attr('name') +\n              ' : ' +\n              d3.select(this).attr('y') +\n              '<br>'\n            tooltip.html(ss)\n          })\n      })\n      d3.select(this.$el)\n        .select('svg')\n        .on('mouseover', function () {\n          d3.select(self.$el)\n            .select('svg')\n            .select('#circle')\n            .selectAll('circle')\n            .style('opacity', '1')\n          tooltip.transition().style('opacity', 1)\n        })\n      d3.select(this.$el).on(\n        'mouseleave',\n        function () {\n          d3.select(self.$el)\n            .select('svg')\n            .select('#circle')\n            .selectAll('circle')\n            .style('opacity', '0')\n          tooltip.transition().style('opacity', 0)\n          lines.forEach(function (element, i) {\n            self.thresholds[i].opacity = 0\n          })\n        },\n        this\n      )\n\n      d3.select(this.$el).on('mousemove', function () {\n        var mouse = d3.mouse(this)\n        mouse[0] -= self.margin.left\n        if (mouse[0] < 0) {\n          mouse[0] = 0\n        } else if (mouse[0] >= self.width) {\n          mouse[0] = self.width\n        }\n\n        var time = `<div style=\"margin-top:10px;margin-bottom:10px;text-align: center;font-weight: bold;\">\n          ${self\n    .$date()\n    .format(self.xScale.invert(mouse[0]), 'M/D HH:mm')}</div>`\n\n        lines.forEach((element, i) => {\n          var pos = element.getPointAtLength(mouse[0])\n          var beginning = 0\n          var end = element.getTotalLength()\n          var target = null\n\n          while (true) {\n            target = Math.floor((beginning + end) / 2)\n            pos = element.getPointAtLength(target)\n\n            if (\n              (target === end || target === beginning) &&\n              pos.x !== mouse[0]\n            ) {\n              break\n            }\n            if (pos.x > mouse[0]) end = target\n            else if (pos.x < mouse[0]) beginning = target\n            else {\n              // self.thresholds[i].opacity = 1\n              break // position found\n            }\n          }\n          self.$set(self.thresholds[i], 'xValue', pos.x)\n          self.$set(self.thresholds[i], 'yValue', pos.y)\n\n          const color = `color:${d3.schemeCategory10[i % 10]}`\n          let value = self.yScale(self.thresholds[i].unit).invert(pos.y)\n          const sigdigit = Math.pow(10, self.thresholds[i].sigdigit)\n          time += `<div style=\"margin-left:5px;margin-right:5px;margin-bottom:5px;${color}\">`\n          if (self.thresholds[i].deviceId.toString().endsWith('00')) {\n            time += `${self.thresholds[i].name} : ${\n              statusCode[value.toFixed(0)]\n            }</div>`\n          } else {\n            time += `${self.thresholds[i].name} : ${Math.floor(\n              value * sigdigit\n            ) / sigdigit} ${self.thresholds[i].unit}</div>`\n          }\n        })\n\n        if (tooltip.node()) {\n          let tooltipX = 0\n          if (mouse[0] < tooltip.node().getBoundingClientRect().width) {\n            tooltipX = mouse[0] + self.margin.left + 60 + 'px'\n          } else {\n            tooltipX =\n              mouse[0] +\n              self.margin.left -\n              tooltip.node().getBoundingClientRect().width -\n              20 +\n              'px'\n          }\n\n          tooltip\n            .html(time)\n            .style('left', tooltipX)\n            .style(\n              'top',\n              mouse[1] -\n                tooltip.node().getBoundingClientRect().height / 2 +\n                'px'\n            )\n            .style('padding', 2 + 'px')\n        }\n      })\n    },\n    handleWindowResize () {\n      this.getSize()\n    },\n    getSize () {\n      setTimeout(() => {\n        this.width =\n          this.$el.clientWidth - this.margin.left - this.margin.right\n        this.height =\n          this.$el.clientHeight - this.margin.top - this.margin.bottom\n      }, 1)\n    },\n    yScale (unit) {\n      if (unit !== undefined && this.yAxisData[unit]) {\n        return d3\n          .scaleLinear()\n          .domain([this.yAxisData[unit]['min'], this.yAxisData[unit]['max']])\n          .range([this.height, 0])\n      } else {\n        for (var index in this.yAxisData) {\n          return d3\n            .scaleLinear()\n            .domain([\n              this.yAxisData[index]['min'],\n              this.yAxisData[index]['max']\n            ])\n            .range([this.height, 0])\n        }\n      }\n    },\n    secondToHour (seconds) {\n      return addSeconds(this.xAxisData.min, seconds)\n    }\n  }\n}\n</script>\n\n<style >\ndiv.tooltip {\n  position: absolute;\n  /* text-align: center; */\n\n  /* width: auto;\n  height: auto;\n  padding: 2px;\n  font: 12px sans-serif;\n  background: lightsteelblue;\n  border: 0px;\n  border-radius: 8px;\n  pointer-events: none; */\n\n  border-radius: 10px;\n  padding: 6px;\n  color: #666;\n  background: rgba(255, 255, 255, 0.9);\n  border: solid 2px rgba(230, 230, 230, 0.8);\n  font-size: 14px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}