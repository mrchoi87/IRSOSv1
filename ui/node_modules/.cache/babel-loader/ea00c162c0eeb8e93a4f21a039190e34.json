{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js!/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js!/home/mrchoi87/farmosV2/ui/node_modules/eslint-loader/index.js??ref--13-0!/home/mrchoi87/farmosV2/ui/src/store/modules/user.js","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/store/modules/user.js","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import jwt from 'jsonwebtoken';\n\nfunction jwtDecode(token) {\n  return jwt.decode(token);\n}\n\nexport default {\n  namespaced: true,\n  state: {\n    info: null,\n    token: null,\n    refreshToken: null\n  },\n  getters: {\n    isAuthenticated: function isAuthenticated(state) {\n      return !!state.info;\n    },\n    getdUser: function getdUser(state) {\n      return state.currentUser;\n    }\n  },\n  actions: {},\n  mutations: {\n    setCurrentUser: function setCurrentUser(state, _ref) {\n      var token = _ref.token,\n          refreshToken = _ref.refreshToken;\n      state.info = jwtDecode(token);\n      state.token = token;\n      state.refreshToken = refreshToken;\n    },\n    unsetCurrentUser: function unsetCurrentUser(state) {\n      state.info = null;\n      state.token = null;\n      state.refreshToken = null;\n    },\n    refresh: function refresh(state, _ref2) {\n      var token = _ref2.token,\n          refreshToken = _ref2.refreshToken;\n      state.token = token;\n      state.refreshToken = refreshToken;\n    }\n  }\n};",{"version":3,"sources":["/home/mrchoi87/farmosV2/ui/src/store/modules/user.js"],"names":["jwt","jwtDecode","token","decode","namespaced","state","info","refreshToken","getters","isAuthenticated","getdUser","currentUser","actions","mutations","setCurrentUser","unsetCurrentUser","refresh"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;;AAEA,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AACzB,SAAOF,GAAG,CAACG,MAAJ,CAAWD,KAAX,CAAP;AACD;;AAED,eAAe;AACbE,EAAAA,UAAU,EAAE,IADC;AAEbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,IADD;AAELJ,IAAAA,KAAK,EAAE,IAFF;AAGLK,IAAAA,YAAY,EAAE;AAHT,GAFM;AAQbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAE,yBAAAJ,KAAK;AAAA,aAAI,CAAC,CAACA,KAAK,CAACC,IAAZ;AAAA,KADf;AAEPI,IAAAA,QAAQ,EAAE,kBAAAL,KAAK;AAAA,aAAIA,KAAK,CAACM,WAAV;AAAA;AAFR,GARI;AAabC,EAAAA,OAAO,EAAE,EAbI;AAebC,EAAAA,SAAS,EAAE;AACTC,IAAAA,cADS,0BACOT,KADP,QACuC;AAAA,UAAvBH,KAAuB,QAAvBA,KAAuB;AAAA,UAAhBK,YAAgB,QAAhBA,YAAgB;AAC9CF,MAAAA,KAAK,CAACC,IAAN,GAAaL,SAAS,CAACC,KAAD,CAAtB;AACAG,MAAAA,KAAK,CAACH,KAAN,GAAcA,KAAd;AACAG,MAAAA,KAAK,CAACE,YAAN,GAAqBA,YAArB;AACD,KALQ;AAMTQ,IAAAA,gBANS,4BAMSV,KANT,EAMgB;AACvBA,MAAAA,KAAK,CAACC,IAAN,GAAa,IAAb;AACAD,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACAG,MAAAA,KAAK,CAACE,YAAN,GAAqB,IAArB;AACD,KAVQ;AAWTS,IAAAA,OAXS,mBAWAX,KAXA,SAWgC;AAAA,UAAvBH,KAAuB,SAAvBA,KAAuB;AAAA,UAAhBK,YAAgB,SAAhBA,YAAgB;AACvCF,MAAAA,KAAK,CAACH,KAAN,GAAcA,KAAd;AACAG,MAAAA,KAAK,CAACE,YAAN,GAAqBA,YAArB;AACD;AAdQ;AAfE,CAAf","sourcesContent":["import jwt from 'jsonwebtoken'\r\n\r\nfunction jwtDecode (token) {\r\n  return jwt.decode(token)\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    info: null,\r\n    token: null,\r\n    refreshToken: null\r\n  },\r\n\r\n  getters: {\r\n    isAuthenticated: state => !!state.info,\r\n    getdUser: state => state.currentUser\r\n  },\r\n\r\n  actions: {},\r\n\r\n  mutations: {\r\n    setCurrentUser (state, { token, refreshToken }) {\r\n      state.info = jwtDecode(token)\r\n      state.token = token\r\n      state.refreshToken = refreshToken\r\n    },\r\n    unsetCurrentUser (state) {\r\n      state.info = null\r\n      state.token = null\r\n      state.refreshToken = null\r\n    },\r\n    refresh (state, { token, refreshToken }) {\r\n      state.token = token\r\n      state.refreshToken = refreshToken\r\n    }\r\n  }\r\n}\r\n"]}]}