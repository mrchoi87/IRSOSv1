{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js!/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js!/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/views/app/page/control/manual.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/views/app/page/control/manual.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport _defineProperty from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TimeLine from '@/components/TimeLine';\nimport DeviceState from '@/components/DeviceState';\nimport { statusCode, cmdCode } from '@/constants/config';\nimport { mapGetters } from 'vuex';\nexport default {\n  props: {\n    id: String,\n    type: String\n  },\n  components: {\n    DeviceState: DeviceState,\n    TimeLine: TimeLine\n  },\n  data: function data() {\n    return {\n      statusCode: statusCode,\n      cmdCode: cmdCode,\n      controlData: {},\n      history: {}\n    };\n  },\n  watch: {\n    getNotiLast: function getNotiLast(noti) {\n      var isDevice = false;\n\n      for (var key in noti) {\n        if (key !== 'code' || key !== 'time') {\n          var _iterator = _createForOfIteratorHelper(this.getSwitch),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var sw = _step.value;\n\n              if (sw.id === Number(key)) {\n                isDevice = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          var _iterator2 = _createForOfIteratorHelper(this.getRetractable),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var ret = _step2.value;\n\n              if (ret.id === Number(key)) {\n                isDevice = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          var _iterator3 = _createForOfIteratorHelper(this.getNutrientSupply),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var _ret = _step3.value;\n\n              if (_ret.id === Number(key)) {\n                isDevice = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        }\n      }\n\n      if (isDevice) {\n        this.getAllDeviceHistory();\n      }\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    getNotiLast: 'mqtt/getNotiMsgLast',\n    getFields: 'field/getFields',\n    getDevices: 'device/getDevices',\n    getAllFieldDevices: 'device/getAllFieldDevices',\n    getObservations: 'observation/getObservations'\n  })), {}, {\n    getCurrentDevice: function getCurrentDevice() {\n      var item = [];\n\n      if (this.getAllFieldDevices && this.getAllFieldDevices[this.id]) {\n        item = this.getAllFieldDevices[this.id];\n      }\n\n      var _iterator4 = _createForOfIteratorHelper(item),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var device = _step4.value;\n          this.$set(device, 'roll', true);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      if (item.length > 0) {\n        this.historyDataMaker(item);\n        this.controlDataMaker(item);\n        this.getAllDeviceHistory();\n      }\n\n      return item;\n    },\n    getNutrientSupply: function getNutrientSupply() {\n      var item = [];\n\n      if (this.getDevices) {\n        item = this.getDevices.filter(function (device) {\n          return device.spec.Class === 'nutrient-supply';\n        });\n\n        var _iterator5 = _createForOfIteratorHelper(item),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var device = _step5.value;\n            this.$set(device, 'roll', true);\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n\n      if (item.length > 0) {\n        this.historyDataMaker(item);\n        this.controlDataMaker(item);\n        this.getAllDeviceHistory();\n      }\n\n      return item;\n    },\n    getRetractable: function getRetractable() {\n      if (this.getCurrentDevice) {\n        return this.getCurrentDevice.filter(function (device) {\n          return device.spec.Class === 'actuator' && device.spec.Type.startsWith('retractable');\n        });\n      }\n\n      return [];\n    },\n    getSwitch: function getSwitch() {\n      if (this.getCurrentDevice) {\n        return this.getCurrentDevice.filter(function (device) {\n          return device.spec.Class === 'actuator' && device.spec.Type.startsWith('switch');\n        });\n      }\n\n      return [];\n    },\n    getField: function getField() {\n      var _this = this;\n\n      return this.getFields.filter(function (field) {\n        return field.id === Number(_this.id);\n      })[0];\n    }\n  }),\n  mounted: function mounted() {// this.getAllDeviceHistory()\n  },\n  methods: {\n    getFieldName: function getFieldName(index, id) {\n      var _iterator6 = _createForOfIteratorHelper(this.getFields),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var field = _step6.value;\n\n          if (field.id === id) {\n            return \"\".concat(index + 1, \" - \").concat(field.name);\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    },\n    historyDataMaker: function historyDataMaker(devices) {\n      var _iterator7 = _createForOfIteratorHelper(devices),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var device = _step7.value;\n\n          if (!this.history.hasOwnProperty(device.id)) {\n            this.$set(this.history, device.id, {\n              requests: [],\n              states: [],\n              date: this.$date().format(new Date(), 'YYYY-MM-DD')\n            });\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n    },\n    historyDateChg: function historyDateChg(deviceId, type) {\n      var date = new Date(this.history[deviceId].date);\n\n      if (type === 'prev') {\n        this.history[deviceId].date = this.$date().format(date.setDate(date.getDate() - 1), 'YYYY-MM-DD');\n      } else {\n        this.history[deviceId].date = this.$date().format(date.setDate(date.getDate() + 1), 'YYYY-MM-DD');\n      }\n\n      this.getDeviceHistory(deviceId, this.history[deviceId].date);\n    },\n    getAllDeviceHistory: function () {\n      var _getAllDeviceHistory = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var key;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = regeneratorRuntime.keys(this.history);\n\n              case 1:\n                if ((_context.t1 = _context.t0()).done) {\n                  _context.next = 7;\n                  break;\n                }\n\n                key = _context.t1.value;\n                _context.next = 5;\n                return this.getDeviceHistory(key, this.history[key].date);\n\n              case 5:\n                _context.next = 1;\n                break;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAllDeviceHistory() {\n        return _getAllDeviceHistory.apply(this, arguments);\n      }\n\n      return getAllDeviceHistory;\n    }(),\n    getDeviceHistory: function () {\n      var _getDeviceHistory = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(deivceId, date) {\n        var _yield$this$axios$get, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.axios.get(\"device/history/\".concat(deivceId), {\n                  params: {\n                    date: this.$date().format(date, 'YYYY-MM-DD')\n                  }\n                });\n\n              case 2:\n                _yield$this$axios$get = _context2.sent;\n                data = _yield$this$axios$get.data;\n                this.$set(this.history[deivceId], 'requests', data.requests);\n                this.$set(this.history[deivceId], 'states', data.states);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getDeviceHistory(_x, _x2) {\n        return _getDeviceHistory.apply(this, arguments);\n      }\n\n      return getDeviceHistory;\n    }(),\n    getObsData: function getObsData(data) {\n      if (data) {\n        if (data.unit === '상태') {\n          return this.statusCode[data.nvalue];\n        } else {\n          return \"\".concat(data.nvalue, \" \").concat(data.unit);\n        }\n      } else {\n        return '---';\n      }\n    },\n    controlDataMaker: function controlDataMaker(devices) {\n      var _this2 = this;\n\n      devices.forEach(function (device) {\n        if (!_this2.controlData[device.id]) {\n          var data = {\n            level0: {},\n            level1: {},\n            level2: {}\n          };\n\n          if (device.spec.Class === 'actuator' && device.spec.Type.startsWith('retractable')) {\n            if (device.spec.Type.split('/')[1] !== 'level0') {\n              data.level1.opentime = 0;\n              data.level1.closetime = 0;\n            }\n\n            if (device.spec.Type.split('/')[1] === 'level2') {\n              data.level2.position = 0;\n              data.level2.opentime = 0;\n              data.level2.closetime = 0;\n            }\n          } else if (device.spec.Class === 'actuator' && device.spec.Type.startsWith('switch')) {\n            if (device.spec.Type.split('/')[1] !== 'level0') {\n              data.level1.holdtime = 0;\n            }\n\n            if (device.spec.Type.split('/')[1] === 'level2') {\n              data.level2.holdtime = 0;\n              data.level2.ratio = 0;\n            }\n          } else if (device.spec.Class === 'nutrient-supply') {\n            data.level0.control = 1;\n\n            if (device.spec.Type.split('/')[1] === 'level1') {\n              data.level1.ec = 0;\n              data.level1.ph = 0;\n              data.level1.sec = 0;\n              data.level1.startarea = '';\n              data.level1.stoparea = '';\n            }\n          }\n\n          _this2.$set(_this2.controlData, device.id, data);\n        }\n      });\n    },\n    controlChange: function controlChange(device, value) {\n      var result = this.mqtt.deivceControl(device, this.cmdCode.nutrient.control, {\n        control: value\n      });\n\n      if (!result) {\n        this.$notify({\n          title: '실패',\n          message: '제어 명령은 5초에 한번씩 전송 가능 합니다',\n          type: 'error'\n        });\n      }\n    },\n    controlClick: function controlClick(device, type, control, level) {\n      if (type === 'nutrient-supply' && level !== undefined) {\n        if (device.place.indexOf(this.controlData[device.id][level].startarea) === -1 || device.place.indexOf(this.controlData[device.id][level].stoparea) === -1) {\n          this.$notify({\n            title: '실패',\n            message: '관수 구역을 설정해 주세요',\n            type: 'error'\n          });\n          return;\n        }\n\n        if (Number(device.place.indexOf(this.controlData[device.id][level].startarea)) + 1 > Number(device.place.indexOf(this.controlData[device.id][level].stoparea)) + 1) {\n          this.$notify({\n            title: '실패',\n            message: '관수 시작 구역을 낮은 번호로 입력 하세요',\n            type: 'error'\n          });\n          return;\n        }\n      }\n\n      var result = this.mqtt.deivceControl(device, control, this.controlData[device.id][level]);\n\n      if (!result) {\n        this.$notify({\n          title: '실패',\n          message: '제어 명령은 5초에 한번씩 전송 가능 합니다',\n          type: 'error'\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["manual.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"col-xxs-12 mx-auto my-auto\" style=\"padding:15px\">\r\n    <h4 class=\"c-grey-900\" v-if=\"getField && type === 'base'\">{{getField.name}} 장비제어</h4>\r\n    <h4 class=\"c-grey-900\" v-if=\"type === 'nutrient-supply'\">양액기 제어</h4>\r\n\r\n    <template v-if=\"type === 'base'\">\r\n      <div>\r\n        <b-row class=\"mt-4 mb-2\">\r\n          <b-col xxs=\"12\">\r\n            <div>\r\n              <div class=\"float-left\">\r\n                <div class=\"d-inline-block\">\r\n                  <h5 class>개폐기</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n\r\n        <b-row v-for=\"device in getRetractable\" :key=\"device.id\" class=\"mb-4\">\r\n          <b-col md=\"12\">\r\n            <b-card>\r\n              <b-row>\r\n                <b-col md=\"4\">\r\n                  <div v-if=\"controlData[device.id]\">\r\n                    <h3>{{device.name}}</h3>\r\n                    <p>타입 : {{device.spec.Type}}</p>\r\n                    <h5>\r\n                      <DeviceState\r\n                        :value=\"getObsData(getObservations['1'+device.id.toString().padStart(5,0)+'00'])\"\r\n                        :sub=\"getObservations['1'+device.id.toString().padStart(5,0)+'04'] ?\r\n                getObservations['1'+device.id.toString().padStart(5,0)+'04'].nvalue : 0\"\r\n                        text=\"초 남음\"\r\n                      />\r\n                    </h5>\r\n                    <div style=\"text-align:center\" class=\"mb-3\">\r\n                      <el-popover\r\n                        trigger=\"hover\"\r\n                        placement=\"top-start\"\r\n                        v-if=\"device.spec.Type.split('/')[1] === 'level2'\"\r\n                      >\r\n                        <template>\r\n                          <el-divider content-position=\"left\">열기 시간</el-divider>\r\n                          <div v-if=\"controlData[device.id]\">\r\n                            <el-input-number\r\n                              v-model=\"controlData[device.id].level2.opentime\"\r\n                              :min=\"10\"\r\n                            ></el-input-number>\r\n                          </div>\r\n                          <el-divider content-position=\"left\">닫기 시간</el-divider>\r\n                          <div>\r\n                            <el-input-number\r\n                              v-model=\"controlData[device.id].level2.closetime\"\r\n                              :min=\"10\"\r\n                            ></el-input-number>\r\n                          </div>\r\n                          <div class=\"mt-3\">\r\n                            <el-button\r\n                              style=\"width:40%;float: right;\"\r\n                              @click=\"controlClick(device,'retractable',cmdCode.retractable.config,'level2')\"\r\n                            >설정</el-button>\r\n                          </div>\r\n                        </template>\r\n                        <el-button slot=\"reference\" style=\"width:100%\" plain>개폐 초기값 설정</el-button>\r\n                      </el-popover>\r\n                    </div>\r\n                    <el-divider content-position=\"left\">기본 제어</el-divider>\r\n                    <div style=\"text-align:center\">\r\n                      <el-button\r\n                        style=\"width:42%\"\r\n                        type=\"info\"\r\n                        slot=\"reference\"\r\n                        plain\r\n                        @click=\"controlClick(device,'retractable',cmdCode.retractable.stop)\"\r\n                      >중지</el-button>\r\n                      <el-button\r\n                        class=\"ml-4\"\r\n                        style=\"width:22%\"\r\n                        type=\"primary\"\r\n                        plain\r\n                        @click=\"controlClick(device,'retractable',cmdCode.retractable.open)\"\r\n                      >열기</el-button>\r\n                      <el-button\r\n                        style=\"width:22%\"\r\n                        type=\"danger\"\r\n                        plain\r\n                        @click=\"controlClick(device,'retractable',cmdCode.retractable.close)\"\r\n                      >닫기</el-button>\r\n                    </div>\r\n                    <div class=\"mt-3\" style=\"text-align:center\">\r\n                      <template v-if=\"device.spec.Type.split('/')[1] !== 'level0'\">\r\n                        <el-divider content-position=\"left\">시간 지정</el-divider>\r\n                        <b-row>\r\n                          <b-col md=\"6\">\r\n                            <el-input-number\r\n                              style=\"width:100%\"\r\n                              :min=\"10\"\r\n                              v-model=\"controlData[device.id].level1.opentime\"\r\n                            ></el-input-number>\r\n                            <el-button\r\n                              class=\"mt-2\"\r\n                              style=\"width:100%\"\r\n                              type=\"primary\"\r\n                              plain\r\n                              @click=\"controlClick(device,'retractable',cmdCode.retractable.timedopen,'level1')\"\r\n                            >열기</el-button>\r\n                          </b-col>\r\n                          <b-col md=\"6\">\r\n                            <el-input-number\r\n                              style=\"width:100%\"\r\n                              :min=\"10\"\r\n                              v-model=\"controlData[device.id].level1.closetime\"\r\n                            ></el-input-number>\r\n                            <el-button\r\n                              class=\"mt-2\"\r\n                              style=\"width:100%\"\r\n                              type=\"danger\"\r\n                              plain\r\n                              @click=\"controlClick(device,'retractable',cmdCode.retractable.timedclose,'level1')\"\r\n                            >닫기</el-button>\r\n                          </b-col>\r\n                        </b-row>\r\n                      </template>\r\n\r\n                      <template v-if=\"device.spec.Type.split('/')[1] === 'level2'\">\r\n                        <el-divider content-position=\"left\">개방도 지정</el-divider>\r\n                        <div class=\"ml-4 mr-1\">\r\n                          <el-slider\r\n                            :min=\"0\"\r\n                            :max=\"100\"\r\n                            v-model=\"controlData[device.id].level2.position\"\r\n                          ></el-slider>\r\n                          <el-button\r\n                            style=\"width:48%;float: right;\"\r\n                            type=\"warning\"\r\n                            plain\r\n                            @click=\"controlClick(device,'retractable',cmdCode.retractable.position,'level2')\"\r\n                          >시작</el-button>\r\n                        </div>\r\n                      </template>\r\n                    </div>\r\n                  </div>\r\n                </b-col>\r\n                <b-col md=\"8\">\r\n                  <div class=\"mb-2\">\r\n                    <el-button @click=\"historyDateChg(device.id,'prev')\">전일</el-button>\r\n                    <el-button @click=\"historyDateChg(device.id,'next')\">다음일</el-button>\r\n                    <el-switch\r\n                      style=\"float:right\"\r\n                      v-model=\"device.roll\"\r\n                      active-text=\"사용\"\r\n                      inactive-text=\"롤링 중지\"\r\n                    ></el-switch>\r\n                  </div>\r\n                  <TimeLine\r\n                    ref=\"timeline\"\r\n                    type=\"switch\"\r\n                    :roll=\"device.roll\"\r\n                    :history=\"history[device.id]\"\r\n                    :currentState=\"getObservations[device.id * 100 + 10000000]\"\r\n                  />\r\n                </b-col>\r\n              </b-row>\r\n            </b-card>\r\n          </b-col>\r\n        </b-row>\r\n      </div>\r\n\r\n      <div>\r\n        <b-row class=\"mb-2\">\r\n          <b-col xxs=\"12\">\r\n            <div>\r\n              <div class=\"float-left\">\r\n                <div class=\"d-inline-block\">\r\n                  <h5 class>스위치</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n        <b-row v-for=\"device in getSwitch\" :key=\"device.id\" class=\"mb-4\">\r\n          <b-col md=\"12\">\r\n            <b-card>\r\n              <b-row>\r\n                <b-col md=\"4\">\r\n                  <div v-if=\"controlData[device.id]\">\r\n                    <h3>{{device.name}}</h3>\r\n                    <p>타입 : {{device.spec.Type}}</p>\r\n                    <h5>\r\n                      <DeviceState\r\n                        :value=\"getObsData(getObservations['1'+device.id.toString().padStart(5,0)+'00'])\"\r\n                        :sub=\"getObservations['1'+device.id.toString().padStart(5,0)+'04'] ?\r\n                getObservations['1'+device.id.toString().padStart(5,0)+'04'].nvalue : 0\"\r\n                        text=\"초 남음\"\r\n                      />\r\n                    </h5>\r\n\r\n                    <el-divider content-position=\"left\">기본 제어</el-divider>\r\n                    <div style=\"text-align:center\">\r\n                      <el-button\r\n                        style=\"width:45%;\"\r\n                        type=\"primary\"\r\n                        plain\r\n                        @click=\"controlClick(device,'switch',cmdCode.switch.on)\"\r\n                      >시작</el-button>\r\n                      <el-button\r\n                        slot=\"reference\"\r\n                        style=\"width:45%;float:right;\"\r\n                        type=\"info\"\r\n                        plain\r\n                        @click=\"controlClick(device,'switch',cmdCode.switch.off)\"\r\n                      >중지</el-button>\r\n                    </div>\r\n                    <div class=\"mt-3\" style=\"text-align:center\">\r\n                      <template v-if=\"device.spec.Type.split('/')[1]!=='level0'\">\r\n                        <el-divider content-position=\"left\">시간 지정</el-divider>\r\n                        <div>\r\n                          <el-input-number\r\n                            :min=\"10\"\r\n                            style=\"width:45%;\"\r\n                            v-model=\"controlData[device.id].level1.holdtime\"\r\n                          ></el-input-number>\r\n                          <el-button\r\n                            class=\"ml-2\"\r\n                            style=\"width:45%;float:right;\"\r\n                            type=\"primary\"\r\n                            plain\r\n                            @click=\"controlClick(device,'switch',cmdCode.switch.timedon,'level1')\"\r\n                          >시작</el-button>\r\n                        </div>\r\n                      </template>\r\n                      <template v-if=\"device.spec.Type.split('/')[1]==='level2'\">\r\n                        <el-divider content-position=\"left\">비율 시간 지정</el-divider>\r\n                        <div class=\"ml-4 mr-1\">\r\n                          <el-slider\r\n                            :min=\"0\"\r\n                            :max=\"100\"\r\n                            v-model=\"controlData[device.id].level2.ratio\"\r\n                          ></el-slider>\r\n                        </div>\r\n                        <div>\r\n                          <el-input-number\r\n                            style=\"width:45%\"\r\n                            v-model=\"controlData[device.id].level1.holdtime\"\r\n                          ></el-input-number>\r\n                          <el-button\r\n                            style=\"width:45%;float:right;\"\r\n                            type=\"primary\"\r\n                            plain\r\n                            @click=\"controlClick(device,'switch',cmdCode.switch.directionalon,'level2')\"\r\n                          >시작</el-button>\r\n                        </div>\r\n                      </template>\r\n                    </div>\r\n                  </div>\r\n                </b-col>\r\n                <b-col md=\"8\">\r\n                  <div class=\"mb-2\">\r\n                    <el-button @click=\"historyDateChg(device.id,'prev')\">전일</el-button>\r\n                    <el-button @click=\"historyDateChg(device.id,'next')\">다음일</el-button>\r\n                    <el-switch\r\n                      style=\"float:right\"\r\n                      v-model=\"device.roll\"\r\n                      active-text=\"사용\"\r\n                      inactive-text=\"롤링 중지\"\r\n                    ></el-switch>\r\n                  </div>\r\n                  <TimeLine\r\n                    ref=\"timeline\"\r\n                    type=\"switch\"\r\n                    :roll=\"device.roll\"\r\n                    :history=\"history[device.id]\"\r\n                    :currentState=\"getObservations[device.id * 100 + 10000000]\"\r\n                  />\r\n                </b-col>\r\n              </b-row>\r\n            </b-card>\r\n          </b-col>\r\n        </b-row>\r\n      </div>\r\n    </template>\r\n\r\n    <template v-else>\r\n      <div>\r\n        <b-row class=\"mb-2\">\r\n          <b-col xxs=\"12\">\r\n            <div>\r\n              <div class=\"float-left\">\r\n                <div class=\"d-inline-block\">\r\n                  <h5 class>양액기</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n        <b-row v-for=\"device in getNutrientSupply\" :key=\"device.id\">\r\n          <b-col md=\"12\">\r\n            <b-card>\r\n              <b-row>\r\n                <b-col md=\"4\">\r\n                  <div v-if=\"controlData[device.id]\">\r\n                    <h3>{{device.name}}</h3>\r\n                    <div class=\"mb-2\">타입 : {{device.spec.Type}}</div>\r\n                    <div\r\n                      class=\"mb-2\"\r\n                    >제어권 : {{getObservations['1'+device.id.toString().padStart(5,0)+'06'].nvalue === 1 ? '로컬' : '플랫폼'}}</div>\r\n                    <div>진행 구역</div>\r\n                    <div class=\"mt-1 mb-3\">\r\n                      <el-tag\r\n                        :key=\"place\"\r\n                        v-for=\"(place,index) in device.place\"\r\n                        size=\"small\"\r\n                        class=\"mr-1\"\r\n                        :type=\"getObservations['1'+device.id.toString().padStart(5,0)+'07'].nvalue === index+1 ? 'primary' : 'info'\"\r\n                        :effect=\"getObservations['1'+device.id.toString().padStart(5,0)+'07'].nvalue === index+1 ? 'dark' : 'plain'\"\r\n                      >{{getFieldName(index,place)}}</el-tag>\r\n                    </div>\r\n                    <h5>\r\n                      <DeviceState\r\n                        :value=\"getObsData(getObservations['1'+device.id.toString().padStart(5,0)+'00'])\"\r\n                      />\r\n                    </h5>\r\n                    <el-divider content-position=\"left\">기본 제어</el-divider>\r\n                    <div style=\"display: flex;align-items: center;\">\r\n                      제어권 변경\r\n                      <el-button-group class=\"ml-auto\">\r\n                        <el-button type size=\"mini\" @click=\"controlChange(device,1)\">로컬</el-button>\r\n                        <el-button type size=\"mini\" @click=\"controlChange(device,2)\">플랫폼</el-button>\r\n                      </el-button-group>\r\n                    </div>\r\n                    <div class=\"mt-3\" style=\"text-align:center\">\r\n                      <el-button\r\n                        style=\"width:48%;\"\r\n                        type=\"primary\"\r\n                        plain\r\n                        @click=\"controlClick(device,'nutrient-supply',cmdCode.nutrient.on)\"\r\n                      >시작</el-button>\r\n                      <el-button\r\n                        slot=\"reference\"\r\n                        style=\"width:48%\"\r\n                        type=\"info\"\r\n                        plain\r\n                        @click=\"controlClick(device,'nutrient-supply',cmdCode.nutrient.off)\"\r\n                      >중지</el-button>\r\n\r\n                      <template v-if=\"device.spec.Type.split('/')[1] !== 'level0'\">\r\n                        <el-divider content-position=\"left\">파라미터 제어</el-divider>\r\n\r\n                        <div class=\"mt-3\">\r\n                          <div class=\"ta-l\">시작 - 종료 구역 설정</div>\r\n                          <b-row class=\"mt-1\">\r\n                            <b-col md=\"6\" class=\"p-0\">\r\n                              <el-select\r\n                                placeholder=\"시작구역\"\r\n                                style=\"width:100%\"\r\n                                v-model=\"controlData[device.id].level1.startarea\"\r\n                              >\r\n                                <template v-for=\"(place,placeIndex) in device.place\">\r\n                                  <template v-for=\"field in getFields\">\r\n                                    <el-option\r\n                                      v-if=\"place === field.id\"\r\n                                      :key=\"place+field\"\r\n                                      :label=\"(placeIndex+1) +' - ' +field.name\"\r\n                                      :value=\"field.id\"\r\n                                    ></el-option>\r\n                                  </template>\r\n                                </template>\r\n                              </el-select>\r\n                            </b-col>\r\n                            <b-col md=\"6\" class=\"p-0\">\r\n                              <el-select\r\n                                placeholder=\"종료구역\"\r\n                                :style=\"{width:'97%' ,float:'right'}\"\r\n                                v-model=\"controlData[device.id].level1.stoparea\"\r\n                              >\r\n                                <template v-for=\"(place,placeIndex) in device.place\">\r\n                                  <template v-for=\"field in getFields\">\r\n                                    <el-option\r\n                                      v-if=\"place === field.id\"\r\n                                      :key=\"place+field\"\r\n                                      :label=\"(placeIndex+1) +' - ' +field.name\"\r\n                                      :value=\"field.id\"\r\n                                    ></el-option>\r\n                                  </template>\r\n                                </template>\r\n                              </el-select>\r\n                            </b-col>\r\n                          </b-row>\r\n                        </div>\r\n\r\n                        <div class=\"mt-3\">\r\n                          <div class=\"ta-l mb-1\">환경 설정</div>\r\n                          <el-input style=\"width:50%;\" v-model=\"controlData[device.id].level1.ec\">\r\n                            <template slot=\"prepend\">EC&nbsp;</template>\r\n                          </el-input>\r\n                          <el-input\r\n                            style=\"width:48%;\"\r\n                            class=\"ml-2\"\r\n                            v-model=\"controlData[device.id].level1.ph\"\r\n                          >\r\n                            <template slot=\"prepend\">pH&nbsp;</template>\r\n                          </el-input>\r\n                        </div>\r\n                        <div class=\"mt-2\">\r\n                          <el-input\r\n                            :style=\"{width:'50%' ,float:'left'}\"\r\n                            v-model=\"controlData[device.id].level1.sec\"\r\n                          >\r\n                            <template slot=\"prepend\" style=\"width:40px;\">시간</template>\r\n                          </el-input>\r\n                          <el-button\r\n                            :style=\"{width:'48%' ,float:'right'}\"\r\n                            type=\"primary\"\r\n                            plain\r\n                            @click=\"controlClick(device,'nutrient-supply',cmdCode.nutrient.param,'level1')\"\r\n                          >시작</el-button>\r\n                        </div>\r\n                      </template>\r\n                    </div>\r\n                  </div>\r\n                </b-col>\r\n                <b-col md=\"8\">\r\n                  <div class=\"mb-2\">\r\n                    <el-button @click=\"historyDateChg(device.id,'prev')\">전일</el-button>\r\n                    <el-button @click=\"historyDateChg(device.id,'next')\">다음일</el-button>\r\n                    <el-switch\r\n                      style=\"float:right\"\r\n                      v-model=\"device.roll\"\r\n                      active-text=\"사용\"\r\n                      inactive-text=\"롤링 중지\"\r\n                    ></el-switch>\r\n                  </div>\r\n                  <TimeLine\r\n                    ref=\"timeline\"\r\n                    type=\"switch\"\r\n                    :history=\"history[device.id]\"\r\n                    :currentState=\"getObservations[device.id * 100 + 10000000]\"\r\n                  />\r\n                </b-col>\r\n              </b-row>\r\n            </b-card>\r\n          </b-col>\r\n        </b-row>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TimeLine from '@/components/TimeLine'\r\nimport DeviceState from '@/components/DeviceState'\r\nimport { statusCode, cmdCode } from '@/constants/config'\r\nimport { mapGetters } from 'vuex'\r\nexport default {\r\n  props: {\r\n    id: String,\r\n    type: String\r\n  },\r\n  components: {\r\n    DeviceState,\r\n    TimeLine\r\n  },\r\n  data () {\r\n    return {\r\n      statusCode: statusCode,\r\n      cmdCode: cmdCode,\r\n      controlData: {},\r\n      history: {}\r\n    }\r\n  },\r\n  watch: {\r\n    getNotiLast (noti) {\r\n      let isDevice = false\r\n      for (const key in noti) {\r\n        if (key !== 'code' || key !== 'time') {\r\n          for (const sw of this.getSwitch) {\r\n            if (sw.id === Number(key)) {\r\n              isDevice = true\r\n              break\r\n            }\r\n          }\r\n          for (const ret of this.getRetractable) {\r\n            if (ret.id === Number(key)) {\r\n              isDevice = true\r\n              break\r\n            }\r\n          }\r\n          for (const ret of this.getNutrientSupply) {\r\n            if (ret.id === Number(key)) {\r\n              isDevice = true\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (isDevice) {\r\n        this.getAllDeviceHistory()\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getNotiLast: 'mqtt/getNotiMsgLast',\r\n      getFields: 'field/getFields',\r\n      getDevices: 'device/getDevices',\r\n      getAllFieldDevices: 'device/getAllFieldDevices',\r\n      getObservations: 'observation/getObservations'\r\n    }),\r\n    getCurrentDevice () {\r\n      let item = []\r\n      if (this.getAllFieldDevices && this.getAllFieldDevices[this.id]) {\r\n        item = this.getAllFieldDevices[this.id]\r\n      }\r\n\r\n      for (const device of item) {\r\n        this.$set(device, 'roll', true)\r\n      }\r\n\r\n      if (item.length > 0) {\r\n        this.historyDataMaker(item)\r\n        this.controlDataMaker(item)\r\n        this.getAllDeviceHistory()\r\n      }\r\n      return item\r\n    },\r\n\r\n    getNutrientSupply () {\r\n      let item = []\r\n      if (this.getDevices) {\r\n        item = this.getDevices.filter(device => {\r\n          return device.spec.Class === 'nutrient-supply'\r\n        })\r\n\r\n        for (const device of item) {\r\n          this.$set(device, 'roll', true)\r\n        }\r\n      }\r\n\r\n      if (item.length > 0) {\r\n        this.historyDataMaker(item)\r\n        this.controlDataMaker(item)\r\n        this.getAllDeviceHistory()\r\n      }\r\n      return item\r\n    },\r\n    getRetractable () {\r\n      if (this.getCurrentDevice) {\r\n        return this.getCurrentDevice.filter(device => {\r\n          return (\r\n            device.spec.Class === 'actuator' &&\r\n            device.spec.Type.startsWith('retractable')\r\n          )\r\n        })\r\n      }\r\n      return []\r\n    },\r\n    getSwitch () {\r\n      if (this.getCurrentDevice) {\r\n        return this.getCurrentDevice.filter(device => {\r\n          return (\r\n            device.spec.Class === 'actuator' &&\r\n            device.spec.Type.startsWith('switch')\r\n          )\r\n        })\r\n      }\r\n      return []\r\n    },\r\n    getField () {\r\n      return this.getFields.filter(field => field.id === Number(this.id))[0]\r\n    }\r\n  },\r\n  mounted () {\r\n    // this.getAllDeviceHistory()\r\n  },\r\n  methods: {\r\n    getFieldName (index, id) {\r\n      for (const field of this.getFields) {\r\n        if (field.id === id) {\r\n          return `${index + 1} - ${field.name}`\r\n        }\r\n      }\r\n    },\r\n    historyDataMaker (devices) {\r\n      for (const device of devices) {\r\n        if (!this.history.hasOwnProperty(device.id)) {\r\n          this.$set(this.history, device.id, {\r\n            requests: [],\r\n            states: [],\r\n            date: this.$date().format(new Date(), 'YYYY-MM-DD')\r\n          })\r\n        }\r\n      }\r\n    },\r\n    historyDateChg (deviceId, type) {\r\n      let date = new Date(this.history[deviceId].date)\r\n      if (type === 'prev') {\r\n        this.history[deviceId].date = this.$date().format(\r\n          date.setDate(date.getDate() - 1),\r\n          'YYYY-MM-DD'\r\n        )\r\n      } else {\r\n        this.history[deviceId].date = this.$date().format(\r\n          date.setDate(date.getDate() + 1),\r\n          'YYYY-MM-DD'\r\n        )\r\n      }\r\n      this.getDeviceHistory(deviceId, this.history[deviceId].date)\r\n    },\r\n    async getAllDeviceHistory () {\r\n      for (const key in this.history) {\r\n        await this.getDeviceHistory(key, this.history[key].date)\r\n      }\r\n    },\r\n    async getDeviceHistory (deivceId, date) {\r\n      const { data } = await this.axios.get(`device/history/${deivceId}`, {\r\n        params: {\r\n          date: this.$date().format(date, 'YYYY-MM-DD')\r\n        }\r\n      })\r\n\r\n      this.$set(this.history[deivceId], 'requests', data.requests)\r\n      this.$set(this.history[deivceId], 'states', data.states)\r\n    },\r\n    getObsData (data) {\r\n      if (data) {\r\n        if (data.unit === '상태') {\r\n          return this.statusCode[data.nvalue]\r\n        } else {\r\n          return `${data.nvalue} ${data.unit}`\r\n        }\r\n      } else {\r\n        return '---'\r\n      }\r\n    },\r\n    controlDataMaker (devices) {\r\n      devices.forEach(device => {\r\n        if (!this.controlData[device.id]) {\r\n          let data = {\r\n            level0: {},\r\n            level1: {},\r\n            level2: {}\r\n          }\r\n          if (\r\n            device.spec.Class === 'actuator' &&\r\n            device.spec.Type.startsWith('retractable')\r\n          ) {\r\n            if (device.spec.Type.split('/')[1] !== 'level0') {\r\n              data.level1.opentime = 0\r\n              data.level1.closetime = 0\r\n            }\r\n            if (device.spec.Type.split('/')[1] === 'level2') {\r\n              data.level2.position = 0\r\n              data.level2.opentime = 0\r\n              data.level2.closetime = 0\r\n            }\r\n          } else if (\r\n            device.spec.Class === 'actuator' &&\r\n            device.spec.Type.startsWith('switch')\r\n          ) {\r\n            if (device.spec.Type.split('/')[1] !== 'level0') {\r\n              data.level1.holdtime = 0\r\n            }\r\n            if (device.spec.Type.split('/')[1] === 'level2') {\r\n              data.level2.holdtime = 0\r\n              data.level2.ratio = 0\r\n            }\r\n          } else if (device.spec.Class === 'nutrient-supply') {\r\n            data.level0.control = 1\r\n            if (device.spec.Type.split('/')[1] === 'level1') {\r\n              data.level1.ec = 0\r\n              data.level1.ph = 0\r\n              data.level1.sec = 0\r\n              data.level1.startarea = ''\r\n              data.level1.stoparea = ''\r\n            }\r\n          }\r\n          this.$set(this.controlData, device.id, data)\r\n        }\r\n      })\r\n    },\r\n    controlChange (device, value) {\r\n      let result = this.mqtt.deivceControl(\r\n        device,\r\n        this.cmdCode.nutrient.control,\r\n        { control: value }\r\n      )\r\n\r\n      if (!result) {\r\n        this.$notify({\r\n          title: '실패',\r\n          message: '제어 명령은 5초에 한번씩 전송 가능 합니다',\r\n          type: 'error'\r\n        })\r\n      }\r\n    },\r\n    controlClick (device, type, control, level) {\r\n      if (type === 'nutrient-supply' && level !== undefined) {\r\n        if (\r\n          device.place.indexOf(this.controlData[device.id][level].startarea) ===\r\n            -1 ||\r\n          device.place.indexOf(this.controlData[device.id][level].stoparea) ===\r\n            -1\r\n        ) {\r\n          this.$notify({\r\n            title: '실패',\r\n            message: '관수 구역을 설정해 주세요',\r\n            type: 'error'\r\n          })\r\n          return\r\n        }\r\n        if (\r\n          Number(\r\n            device.place.indexOf(this.controlData[device.id][level].startarea)\r\n          ) +\r\n            1 >\r\n          Number(\r\n            device.place.indexOf(this.controlData[device.id][level].stoparea)\r\n          ) +\r\n            1\r\n        ) {\r\n          this.$notify({\r\n            title: '실패',\r\n            message: '관수 시작 구역을 낮은 번호로 입력 하세요',\r\n            type: 'error'\r\n          })\r\n          return\r\n        }\r\n      }\r\n\r\n      let result = this.mqtt.deivceControl(\r\n        device,\r\n        control,\r\n        this.controlData[device.id][level]\r\n      )\r\n      if (!result) {\r\n        this.$notify({\r\n          title: '실패',\r\n          message: '제어 명령은 5초에 한번씩 전송 가능 합니다',\r\n          type: 'error'\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n</style>\r\n"],"sourceRoot":"src/views/app/page/control"}]}