{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js!/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js!/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/Weather.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/Weather.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport day from '@/assets/img/weather/day.svg';\nimport night from '@/assets/img/weather/night.svg';\nimport cloudyDay from '@/assets/img/weather/cloudy-day-1.svg';\nimport cloudyNight from '@/assets/img/weather/cloudy-night-1.svg';\nimport cloudyDay3 from '@/assets/img/weather/cloudy-day-3.svg';\nimport cloudyNight3 from '@/assets/img/weather/cloudy-night-3.svg';\nimport cloudy from '@/assets/img/weather/cloudy.svg';\nimport rainy3 from '@/assets/img/weather/rainy-3.svg';\nimport rainy4 from '@/assets/img/weather/rainy-4.svg';\nimport snowy5 from '@/assets/img/weather/snowy-5.svg';\nimport thunder from '@/assets/img/weather/thunder.svg';\nimport { openweathermapKey } from '@/constants/config';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'Weather',\n  data: function data() {\n    return {\n      weatherForecast: null,\n      iconMap: {\n        '01d': day,\n        '01n': night,\n        '02d': cloudyDay,\n        '02n': cloudyNight,\n        '03d': cloudy,\n        '03n': cloudy,\n        '04d': cloudyDay3,\n        '04n': cloudyNight3,\n        '09d': rainy3,\n        '09n': rainy3,\n        '10d': rainy4,\n        '10n': rainy4,\n        '11d': thunder,\n        '11n': thunder,\n        '13d': snowy5,\n        '13n': snowy5,\n        '50d': cloudy,\n        '50n': cloudy\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    getFarm: 'farm/getFarm'\n  })),\n  watch: {\n    'getFarm.info.gps': function getFarmInfoGps(newValue, oldValue) {\n      this.getWeather(this.getFarm.info.gps);\n    }\n  },\n  mounted: function mounted() {\n    if (this.getFarm.info) {\n      this.getWeather(this.getFarm.info.gps);\n    }\n  },\n  methods: {\n    getIcon: function getIcon(icon) {\n      return this.iconMap[icon];\n    },\n    getWeather: function () {\n      var _getWeather = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(payload) {\n        var _yield$this$axios$get, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.axios.get(\"https://api.openweathermap.org/data/2.5/forecast\", {\n                  params: {\n                    lang: 'kr',\n                    lat: payload.split(',')[0],\n                    lon: payload.split(',')[1],\n                    cnt: 6,\n                    units: 'metric',\n                    appid: openweathermapKey\n                  }\n                });\n\n              case 3:\n                _yield$this$axios$get = _context.sent;\n                data = _yield$this$axios$get.data;\n                this.weatherForecast = data;\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      function getWeather(_x) {\n        return _getWeather.apply(this, arguments);\n      }\n\n      return getWeather;\n    }()\n  }\n};",{"version":3,"sources":["Weather.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,OAAA,GAAA,MAAA,8BAAA;AACA,OAAA,KAAA,MAAA,gCAAA;AACA,OAAA,SAAA,MAAA,uCAAA;AACA,OAAA,WAAA,MAAA,yCAAA;AACA,OAAA,UAAA,MAAA,uCAAA;AACA,OAAA,YAAA,MAAA,yCAAA;AACA,OAAA,MAAA,MAAA,iCAAA;AACA,OAAA,MAAA,MAAA,kCAAA;AACA,OAAA,MAAA,MAAA,kCAAA;AACA,OAAA,MAAA,MAAA,kCAAA;AACA,OAAA,OAAA,MAAA,kCAAA;AAEA,SAAA,iBAAA,QAAA,oBAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,eAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA;AACA,eAAA,GADA;AAEA,eAAA,KAFA;AAGA,eAAA,SAHA;AAIA,eAAA,WAJA;AAKA,eAAA,MALA;AAMA,eAAA,MANA;AAOA,eAAA,UAPA;AAQA,eAAA,YARA;AASA,eAAA,MATA;AAUA,eAAA,MAVA;AAWA,eAAA,MAXA;AAYA,eAAA,MAZA;AAaA,eAAA,OAbA;AAcA,eAAA,OAdA;AAeA,eAAA,MAfA;AAgBA,eAAA,MAhBA;AAiBA,eAAA,MAjBA;AAkBA,eAAA;AAlBA;AAFA,KAAA;AAuBA,GA1BA;AA2BA,EAAA,QAAA,oBACA,UAAA,CAAA;AACA,IAAA,OAAA,EAAA;AADA,GAAA,CADA,CA3BA;AAgCA,EAAA,KAAA,EAAA;AACA,sBADA,0BACA,QADA,EACA,QADA,EACA;AACA,WAAA,UAAA,CAAA,KAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA;AAHA,GAhCA;AAqCA,EAAA,OArCA,qBAqCA;AACA,QAAA,KAAA,OAAA,CAAA,IAAA,EAAA;AACA,WAAA,UAAA,CAAA,KAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA,GAzCA;AA0CA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,IADA,EACA;AACA,aAAA,KAAA,OAAA,CAAA,IAAA,CAAA;AACA,KAHA;AAIA,IAAA,UAJA;AAAA,iGAIA,OAJA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAMA,KAAA,KAAA,CAAA,GAAA,qDAEA;AACA,kBAAA,MAAA,EAAA;AACA,oBAAA,IAAA,EAAA,IADA;AAEA,oBAAA,GAAA,EAAA,OAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAFA;AAGA,oBAAA,GAAA,EAAA,OAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAHA;AAIA,oBAAA,GAAA,EAAA,CAJA;AAKA,oBAAA,KAAA,EAAA,QALA;AAMA,oBAAA,KAAA,EAAA;AANA;AADA,iBAFA,CANA;;AAAA;AAAA;AAMA,gBAAA,IANA,yBAMA,IANA;AAmBA,qBAAA,eAAA,GAAA,IAAA;AAnBA;AAAA;;AAAA;AAAA;AAAA;AAqBA,gBAAA,OAAA,CAAA,GAAA;;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA1CA,CAAA","sourcesContent":["<template>\n  <b-card>\n    <div v-if=\"weatherForecast\" class=\"mb-4 ta-r\">{{getFarm.info.address}}</div>\n    <transition name=\"slide-fade\">\n      <b-row v-if=\"weatherForecast\">\n        <b-col v-for=\"item in weatherForecast.list\" :key=\"item.id\" style=\"text-align: center;\">\n          <img :src=\"getIcon(item.weather[0].icon)\" style=\"width:80px\"/>\n          <div>{{$date().format(item.dt*1000, 'DD일 a h시',{locale: $date().ko})}}</div>\n          <div class=\"mt-1\">온도: {{item.main.temp}}°c</div>\n          <div>습도: {{item.main.humidity}}°c</div>\n          <div class=\"mt-1\">{{item.weather[0].description}}</div>\n        </b-col>\n      </b-row>\n    </transition>\n  </b-card>\n</template>\n\n<script>\nimport day from '@/assets/img/weather/day.svg'\nimport night from '@/assets/img/weather/night.svg'\nimport cloudyDay from '@/assets/img/weather/cloudy-day-1.svg'\nimport cloudyNight from '@/assets/img/weather/cloudy-night-1.svg'\nimport cloudyDay3 from '@/assets/img/weather/cloudy-day-3.svg'\nimport cloudyNight3 from '@/assets/img/weather/cloudy-night-3.svg'\nimport cloudy from '@/assets/img/weather/cloudy.svg'\nimport rainy3 from '@/assets/img/weather/rainy-3.svg'\nimport rainy4 from '@/assets/img/weather/rainy-4.svg'\nimport snowy5 from '@/assets/img/weather/snowy-5.svg'\nimport thunder from '@/assets/img/weather/thunder.svg'\n\nimport { openweathermapKey } from '@/constants/config'\nimport { mapGetters } from 'vuex'\nexport default {\n  name: 'Weather',\n  data () {\n    return {\n      weatherForecast: null,\n      iconMap: {\n        '01d': day,\n        '01n': night,\n        '02d': cloudyDay,\n        '02n': cloudyNight,\n        '03d': cloudy,\n        '03n': cloudy,\n        '04d': cloudyDay3,\n        '04n': cloudyNight3,\n        '09d': rainy3,\n        '09n': rainy3,\n        '10d': rainy4,\n        '10n': rainy4,\n        '11d': thunder,\n        '11n': thunder,\n        '13d': snowy5,\n        '13n': snowy5,\n        '50d': cloudy,\n        '50n': cloudy\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      getFarm: 'farm/getFarm'\n    })\n  },\n  watch: {\n    'getFarm.info.gps' (newValue, oldValue) {\n      this.getWeather(this.getFarm.info.gps)\n    }\n  },\n  mounted () {\n    if (this.getFarm.info) {\n      this.getWeather(this.getFarm.info.gps)\n    }\n  },\n  methods: {\n    getIcon (icon) {\n      return this.iconMap[icon]\n    },\n    async getWeather (payload) {\n      try {\n        const { data } = await this.axios.get(\n          `https://api.openweathermap.org/data/2.5/forecast`,\n          {\n            params: {\n              lang: 'kr',\n              lat: payload.split(',')[0],\n              lon: payload.split(',')[1],\n              cnt: 6,\n              units: 'metric',\n              appid: openweathermapKey\n            }\n          }\n        )\n        this.weatherForecast = data\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.currentWeatherIcon {\n  width: 10%;\n  height: 10%;\n}\n</style>\n"],"sourceRoot":"src/components"}]}