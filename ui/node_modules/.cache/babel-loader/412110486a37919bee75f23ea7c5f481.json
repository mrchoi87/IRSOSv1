{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js!/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js!/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/App.vue","mtime":1607499348977},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      notiDeviceTry: null\n    };\n  },\n  watch: {\n    getNotiLast: function getNotiLast(noti) {\n      if (noti.code === 102) {\n        this.$snotify.success('새 장비가 검색 되었습니다.');\n      } else if (noti.code === 108) {\n        if (this.notiDeviceTry !== null) {\n          this.$snotify.remove(this.notiDeviceTry.id);\n          this.notiDeviceTry = null;\n        }\n\n        this.deviceSearchNoti();\n      }\n    },\n    'getTryReq.deviceSearch': function getTryReqDeviceSearch(newValue, oldValue) {\n      this.deviceSearchNoti();\n    },\n    getOpidResLast: function getOpidResLast(opid) {\n      var msg = '';\n\n      switch (opid.res) {\n        case 0:\n          msg += '명령을 전송 완료 하였습니다.';\n          this.$snotify.success(msg, opid.msg);\n          break;\n\n        case 1:\n          msg += '명령이 실패 하였습니다.';\n          this.$snotify.error(msg);\n          break;\n\n        case 101:\n          msg += '장비가 없습니다.';\n          this.$snotify.warning(msg);\n          break;\n\n        case 102:\n          msg += '명령이 올바르지 않습니다';\n          this.$snotify.warning(msg);\n          break;\n\n        case 103:\n          msg += '키워드가 올바르지 않습니다.';\n          this.$snotify.warning(msg);\n          break;\n\n        case 104:\n          msg += '명령 전송 실패 하였습니다.';\n          this.$snotify.error(msg);\n          break;\n      }\n    },\n    $route: function $route(to, from) {\n      this.deviceSearchNoti();\n    }\n  },\n  computed: _objectSpread({}, mapGetters({\n    getNotiLast: 'mqtt/getNotiMsgLast',\n    getTryReq: 'mqtt/getTryReq',\n    getOpidResLast: 'mqtt/getOpidResLast'\n  })),\n  methods: {\n    deviceSearchNoti: function deviceSearchNoti() {\n      var _this = this;\n\n      if (this.getTryReq.deviceSearch) {\n        if (this.getTryReq.progress === 1) {\n          if (this.$route.path === '/device/search') {\n            if (this.notiDeviceTry !== null) {\n              this.$snotify.remove(this.notiDeviceTry.id);\n            }\n\n            this.notiDeviceTry = null;\n          } else if (this.$route.path !== '/device/search') {\n            if (this.notiDeviceTry === null) {\n              this.notiDeviceTry = this.$snotify.async('장비 검색중 입니다', 'Device', function () {\n                return new Promise(function (resolve, reject) {});\n              }, {\n                closeOnClick: true\n              });\n              this.notiDeviceTry.on('click', function (toast) {\n                _this.notiDeviceTry = null;\n\n                _this.$snotify.remove(toast.id);\n\n                _this.$router.push(\"/device/search\");\n              });\n            }\n          }\n        } else if (this.getTryReq.progress === 2) {\n          if (this.$route.path === '/device/search') {\n            if (this.notiDeviceTry !== null) {\n              this.$snotify.remove(this.notiDeviceTry.id);\n            }\n\n            this.notiDeviceTry = null;\n          } else if (this.$route.path !== '/device/search') {\n            if (this.notiDeviceTry === null) {\n              this.notiDeviceTry = this.$snotify.confirm('장비 검색이 완료 되었습니다', 'Device', {\n                closeOnClick: false,\n                buttons: [{\n                  text: '이동',\n                  action: function action(toast) {\n                    _this.$snotify.remove(toast.id);\n\n                    _this.$router.push(\"/device/search\");\n                  },\n                  bold: true\n                }]\n              });\n            }\n          }\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div style=\"height:100%\">\n    <vue-snotify></vue-snotify>\n    <router-view />\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nexport default {\n  data () {\n    return {\n      notiDeviceTry: null\n    }\n  },\n  watch: {\n    getNotiLast (noti) {\n      if (noti.code === 102) {\n        this.$snotify.success('새 장비가 검색 되었습니다.')\n      } else if (noti.code === 108) {\n        if (this.notiDeviceTry !== null) {\n          this.$snotify.remove(this.notiDeviceTry.id)\n          this.notiDeviceTry = null\n        }\n        this.deviceSearchNoti()\n      }\n    },\n    'getTryReq.deviceSearch' (newValue, oldValue) {\n      this.deviceSearchNoti()\n    },\n    getOpidResLast (opid) {\n      let msg = ''\n      switch (opid.res) {\n        case 0:\n          msg += '명령을 전송 완료 하였습니다.'\n          this.$snotify.success(msg, opid.msg)\n          break\n        case 1:\n          msg += '명령이 실패 하였습니다.'\n          this.$snotify.error(msg)\n          break\n        case 101:\n          msg += '장비가 없습니다.'\n          this.$snotify.warning(msg)\n          break\n        case 102:\n          msg += '명령이 올바르지 않습니다'\n          this.$snotify.warning(msg)\n          break\n        case 103:\n          msg += '키워드가 올바르지 않습니다.'\n          this.$snotify.warning(msg)\n          break\n        case 104:\n          msg += '명령 전송 실패 하였습니다.'\n          this.$snotify.error(msg)\n          break\n      }\n    },\n    $route (to, from) {\n      this.deviceSearchNoti()\n    }\n  },\n  computed: {\n    ...mapGetters({\n      getNotiLast: 'mqtt/getNotiMsgLast',\n      getTryReq: 'mqtt/getTryReq',\n      getOpidResLast: 'mqtt/getOpidResLast'\n    })\n  },\n  methods: {\n    deviceSearchNoti () {\n      if (this.getTryReq.deviceSearch) {\n        if (this.getTryReq.progress === 1) {\n          if (this.$route.path === '/device/search') {\n            if (this.notiDeviceTry !== null) {\n              this.$snotify.remove(this.notiDeviceTry.id)\n            }\n            this.notiDeviceTry = null\n          } else if (this.$route.path !== '/device/search') {\n            if (this.notiDeviceTry === null) {\n              this.notiDeviceTry = this.$snotify.async(\n                '장비 검색중 입니다',\n                'Device',\n                () => new Promise((resolve, reject) => {}),\n                {\n                  closeOnClick: true\n                }\n              )\n              this.notiDeviceTry.on('click', toast => {\n                this.notiDeviceTry = null\n                this.$snotify.remove(toast.id)\n                this.$router.push(`/device/search`)\n              })\n            }\n          }\n        } else if (this.getTryReq.progress === 2) {\n          if (this.$route.path === '/device/search') {\n            if (this.notiDeviceTry !== null) {\n              this.$snotify.remove(this.notiDeviceTry.id)\n            }\n            this.notiDeviceTry = null\n          } else if (this.$route.path !== '/device/search') {\n            if (this.notiDeviceTry === null) {\n              this.notiDeviceTry = this.$snotify.confirm(\n                '장비 검색이 완료 되었습니다',\n                'Device',\n                {\n                  closeOnClick: false,\n                  buttons: [\n                    {\n                      text: '이동',\n                      action: toast => {\n                        this.$snotify.remove(toast.id)\n                        this.$router.push(`/device/search`)\n                      },\n                      bold: true\n                    }\n                  ]\n                }\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n}\n</script>\n<style>\n.row {\n  margin-right: 0px !important;\n  margin-left: 0px !important;\n}\n/* 애니메이션 진입 및 진출은 다른 지속 시간 및  */\n/* 타이밍 기능을 사용할 수 있습니다. */\n.slide-fade-enter-active {\n  transition: all 0.5s ease;\n}\n.slide-fade-leave-active {\n  transition: all 0.3s cubic-bezier(1, 0.5, 0.8, 1);\n}\n.slide-fade-enter, .slide-fade-leave-to\n/* .slide-fade-leave-active below version 2.1.8 */ {\n  transform: translateX(100px);\n  opacity: 0;\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.5s;\n}\n.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\n  opacity: 0;\n}\n</style>\n"],"sourceRoot":"src"}]}