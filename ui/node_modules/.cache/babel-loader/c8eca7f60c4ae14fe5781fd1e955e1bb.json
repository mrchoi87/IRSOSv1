{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js!/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js!/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/node_modules/vue-daum-map/src/VueDaumMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-daum-map/src/VueDaumMap.vue","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\nimport loadScriptOnce from 'load-script-once';\nvar MapTypeId = {\n  \"ROADMAP\": 1,\n  \"NORMAL\": 1,\n  \"SKYVIEW\": 2,\n  \"HYBRID\": 3,\n  \"OVERLAY\": 4,\n  \"ROADVIEW\": 5,\n  \"TRAFFIC\": 6,\n  \"TERRAIN\": 7,\n  \"BICYCLE\": 8,\n  \"BICYCLE_HYBRID\": 9,\n  \"USE_DISTRICT\": 10\n};\nvar EVENTS = ['center_changed', 'zoom_start', 'zoom_changed', 'bounds_changed', 'click', 'dblclick', 'rightclick', 'mousemove', 'dragstart', 'drag', 'dragend', 'idle', 'tilesloaded', 'maptypeid_changed'];\nexport default {\n  name: \"VueDaumMap\",\n  props: {\n    appKey: {\n      type: String,\n      required: true\n    },\n    libraries: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    center: {\n      type: Object,\n      required: true\n    },\n    level: {\n      type: Number,\n      default: undefined\n    },\n    mapTypeId: {\n      type: Number,\n      default: undefined\n    },\n    draggable: {\n      type: Boolean,\n      default: undefined\n    },\n    scrollwheel: {\n      type: Boolean,\n      default: undefined\n    },\n    disableDoubleClick: {\n      type: Boolean,\n      default: undefined\n    },\n    disableDoubleClickZoom: {\n      type: Boolean,\n      default: undefined\n    },\n    projectionId: {\n      type: String,\n      default: undefined\n    },\n    tileAnimation: {\n      type: Boolean,\n      default: undefined\n    },\n    keyboardShortcuts: {\n      type: [Boolean, Object],\n      default: undefined\n    }\n  },\n  data: function data() {\n    return {\n      map: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    loadScriptOnce(\"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=\".concat(this.appKey, \"&libraries=\").concat(this.libraries.join(','))).then(function () {\n      daum.maps.load(function () {\n        _this.render();\n\n        _this.bindEvents();\n\n        _this.$emit('load', _this.map);\n      });\n    }).catch(function (err) {\n      console.error(err);\n    });\n  },\n  watch: {\n    level: function level() {\n      if (!this.map) {\n        return;\n      }\n\n      this.map.setLevel(this.level);\n    },\n    center: {\n      handler: function handler() {\n        if (!this.map) {\n          return;\n        }\n\n        this.map.setCenter(new daum.maps.LatLng(this.center.lat, this.center.lng));\n      },\n      deep: true\n    }\n  },\n  methods: {\n    render: function render() {\n      var options = {\n        //지도를 생성할 때 필요한 기본 옵션\n        center: new daum.maps.LatLng(this.center.lat, this.center.lng),\n        //지도의 중심좌표.\n        level: this.level,\n        //지도의 레벨(확대, 축소 정도)\n        mapTypeId: this.mapTypeId,\n        //지도 타입\n        draggable: this.draggable,\n        scrollwheel: this.scrollwheel,\n        disableDoubleClick: this.disableDoubleClick,\n        disableDoubleClickZoom: this.disableDoubleClickZoom,\n        projectionId: this.projectionId,\n        tileAnimation: this.tileAnimation,\n        keyboardShortcuts: this.keyboardShortcuts\n      };\n      this.map = new daum.maps.Map(this.$el, options); //지도 생성 및 객체 리턴\n    },\n    bindEvents: function bindEvents() {\n      var handlers = {\n        bounds_changed: this.onChange,\n        idle: this.onChange\n      };\n\n      var _iterator = _createForOfIteratorHelper(EVENTS),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var event = _step.value;\n          this.bindEvent(event, handlers[event]);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    },\n    bindEvent: function bindEvent(event, handler) {\n      var _this2 = this;\n\n      daum.maps.event.addListener(this.map, event, function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this2.$emit(event, args);\n\n        if (typeof handler === 'function') {\n          handler();\n        }\n      });\n    },\n    onChange: function onChange() {\n      var level = this.map.getLevel();\n      var latlng = this.map.getCenter();\n      this.$emit('update:level', level);\n      this.$emit('update:center', {\n        lat: latlng.getLat(),\n        lng: latlng.getLng()\n      });\n    }\n  },\n  MapTypeId: MapTypeId\n};",{"version":3,"sources":["VueDaumMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div></div>\n</template>\n\n<script>\n  import loadScriptOnce from 'load-script-once';\n\n  const MapTypeId = {\n    \"ROADMAP\": 1,\n    \"NORMAL\": 1,\n    \"SKYVIEW\": 2,\n    \"HYBRID\": 3,\n    \"OVERLAY\": 4,\n    \"ROADVIEW\": 5,\n    \"TRAFFIC\": 6,\n    \"TERRAIN\": 7,\n    \"BICYCLE\": 8,\n    \"BICYCLE_HYBRID\": 9,\n    \"USE_DISTRICT\": 10\n  };\n\n  const EVENTS = [\n    'center_changed',\n    'zoom_start',\n    'zoom_changed',\n    'bounds_changed',\n    'click',\n    'dblclick',\n    'rightclick',\n    'mousemove',\n    'dragstart',\n    'drag',\n    'dragend',\n    'idle',\n    'tilesloaded',\n    'maptypeid_changed'\n  ];\n\n  export default {\n    name: \"VueDaumMap\",\n    props: {\n      appKey: {\n        type: String,\n        required: true\n      },\n      libraries: {\n        type: Array,\n        default: () => []\n      },\n      center: {\n        type: Object,\n        required: true\n      },\n      level: {\n        type: Number,\n        default: undefined\n      },\n      mapTypeId: {\n        type: Number,\n        default: undefined\n      },\n      draggable: {\n        type: Boolean,\n        default: undefined\n      },\n      scrollwheel: {\n        type: Boolean,\n        default: undefined\n      },\n      disableDoubleClick: {\n        type: Boolean,\n        default: undefined\n      },\n      disableDoubleClickZoom: {\n        type: Boolean,\n        default: undefined\n      },\n      projectionId: {\n        type: String,\n        default: undefined\n      },\n      tileAnimation: {\n        type: Boolean,\n        default: undefined\n      },\n      keyboardShortcuts: {\n        type: [Boolean, Object],\n        default: undefined\n      }\n    },\n    data: () => ({\n      map: null\n    }),\n    mounted () {\n      loadScriptOnce(`//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=${this.appKey}&libraries=${this.libraries.join(',')}`)\n        .then(() => {\n          daum.maps.load(() => {\n            this.render();\n            this.bindEvents();\n            this.$emit('load', this.map);\n          });\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    },\n    watch: {\n      level () {\n        if (!this.map) {\n          return;\n        }\n\n        this.map.setLevel(this.level);\n      },\n      center : {\n        handler () {\n          if (!this.map) {\n            return;\n          }\n\n          this.map.setCenter(new daum.maps.LatLng(this.center.lat, this.center.lng));\n        },\n        deep: true\n      }\n    },\n    methods: {\n      render () {\n        const options = { //지도를 생성할 때 필요한 기본 옵션\n          center: new daum.maps.LatLng(this.center.lat, this.center.lng), //지도의 중심좌표.\n          level: this.level, //지도의 레벨(확대, 축소 정도)\n          mapTypeId: this.mapTypeId, //지도 타입\n          draggable: this.draggable,\n          scrollwheel: this.scrollwheel,\n          disableDoubleClick: this.disableDoubleClick,\n          disableDoubleClickZoom: this.disableDoubleClickZoom,\n          projectionId: this.projectionId,\n          tileAnimation: this.tileAnimation,\n          keyboardShortcuts: this.keyboardShortcuts\n        };\n\n        this.map = new daum.maps.Map(this.$el, options); //지도 생성 및 객체 리턴\n      },\n      bindEvents () {\n        const handlers = {\n          bounds_changed: this.onChange,\n          idle: this.onChange\n        };\n\n        for (let event of EVENTS) {\n          this.bindEvent(event, handlers[event]);\n        }\n      },\n      bindEvent (event, handler) {\n        daum.maps.event.addListener(this.map, event, (...args) => {\n          this.$emit(event, args);\n\n          if (typeof handler === 'function') {\n            handler();\n          }\n        });\n      },\n      onChange () {\n        const level = this.map.getLevel();\n        const latlng = this.map.getCenter();\n\n        this.$emit('update:level', level);\n        this.$emit('update:center', {\n          lat: latlng.getLat(),\n          lng: latlng.getLng()\n        });\n      }\n    },\n    MapTypeId: MapTypeId\n  }\n</script>\n\n<style scoped>\n</style>"],"sourceRoot":"node_modules/vue-daum-map/src"}]}