{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js!/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js!/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/FarmInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/FarmInfo.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/mrchoi87/farmosV2/ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nexport default {\n  components: {},\n  data: function data() {\n    return {\n      viewDaumPost: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    getFarm: 'farm/getFarm'\n  })),\n  methods: {\n    postResult: function postResult(addressResult) {\n      // eslint-disable-next-line no-undef\n      var geocoder = new daum.maps.services.Geocoder();\n      var self = this;\n      geocoder.addressSearch(addressResult.address, function (gpsResult, status) {\n        if (status === 'OK') {\n          self.getFarm.info.address = addressResult.address;\n          self.getFarm.info.postcode = addressResult.zonecode;\n          self.getFarm.info.gps = \"\".concat(gpsResult[0].y, \",\").concat(gpsResult[0].x);\n          self.viewDaumPost = false;\n        } else {\n          self.$notify({\n            title: '실패',\n            message: '좌표 변환을 실패 하였습니다 주소 검색을 다시 해 주세요',\n            type: 'error'\n          });\n        }\n      });\n    },\n    handlePost: function handlePost() {\n      this.viewDaumPost = true;\n    },\n    formSubmit: function () {\n      var _formSubmit = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.axios.put('farm', this.getFarm);\n\n              case 3:\n                this.$emit('done');\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 6]]);\n      }));\n\n      function formSubmit() {\n        return _formSubmit.apply(this, arguments);\n      }\n\n      return formSubmit;\n    }()\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }()\n};",{"version":3,"sources":["FarmInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA,EADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,YAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,QAAA,oBACA,UAAA,CAAA;AACA,IAAA,OAAA,EAAA;AADA,GAAA,CADA,CAPA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,aADA,EACA;AACA;AACA,UAAA,QAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,QAAA,EAAA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,MAAA,QAAA,CAAA,aAAA,CAAA,aAAA,CAAA,OAAA,EAAA,UACA,SADA,EAEA,MAFA,EAGA;AACA,YAAA,MAAA,KAAA,IAAA,EAAA;AACA,UAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,OAAA,GAAA,aAAA,CAAA,OAAA;AACA,UAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,QAAA,GAAA,aAAA,CAAA,QAAA;AACA,UAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,aAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,cAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,IAAA,CAAA,YAAA,GAAA,KAAA;AACA,SALA,MAKA;AACA,UAAA,IAAA,CAAA,OAAA,CAAA;AACA,YAAA,KAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,iCAFA;AAGA,YAAA,IAAA,EAAA;AAHA,WAAA;AAKA;AACA,OAhBA;AAiBA,KAtBA;AAuBA,IAAA,UAvBA,wBAuBA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,KAzBA;AA0BA,IAAA,UA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA4BA,KAAA,KAAA,CAAA,GAAA,CAAA,MAAA,EAAA,KAAA,OAAA,CA5BA;;AAAA;AA6BA,qBAAA,KAAA,CAAA,MAAA;AA7BA;AAAA;;AAAA;AAAA;AAAA;AA+BA,gBAAA,OAAA,CAAA,GAAA;;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAZA;AA+CA,EAAA,OA/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAA","sourcesContent":["<template>\r\n  <b-card no-body class=\"p-20\">\r\n    <div class=\"mb-5\">\r\n      <div class=\"float-left\">\r\n        <div class=\"d-inline-block\">\r\n          <h5 class=\"d-inline\">농장 정보</h5>\r\n        </div>\r\n      </div>\r\n      <el-button class=\"float-right\" type=\"primary\" @click=\"formSubmit\">변경</el-button>\r\n    </div>\r\n\r\n    <el-form label-position=\"left\" label-width=\"80px\" v-if=\"getFarm.info\">\r\n      <el-form-item label=\"농장주\" class=\"mb-1\">\r\n        <el-input v-model=\"getFarm.name\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"연락처\" class=\"mb-0\">\r\n        <el-input v-model=\"getFarm.info.telephone\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"주소\" class=\"mb-0\">{{getFarm.info.address}}</el-form-item>\r\n      <el-button @click=\"handlePost\" class=\"w-100\">주소 검색</el-button>\r\n\r\n      <transition name=\"slide-fade\">\r\n        <VueDaumPostcode\r\n          v-if=\"viewDaumPost\"\r\n          @complete=\"postResult\"\r\n          :animation=\"false\"\r\n          :hide-eng-btn=\"false\"\r\n        />\r\n      </transition>\r\n    </el-form>\r\n  </b-card>\r\n</template>\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nexport default {\r\n  components: {},\r\n  data () {\r\n    return {\r\n      viewDaumPost: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getFarm: 'farm/getFarm'\r\n    })\r\n  },\r\n  methods: {\r\n    postResult (addressResult) {\r\n      // eslint-disable-next-line no-undef\r\n      var geocoder = new daum.maps.services.Geocoder()\r\n      let self = this\r\n      geocoder.addressSearch(addressResult.address, function (\r\n        gpsResult,\r\n        status\r\n      ) {\r\n        if (status === 'OK') {\r\n          self.getFarm.info.address = addressResult.address\r\n          self.getFarm.info.postcode = addressResult.zonecode\r\n          self.getFarm.info.gps = `${gpsResult[0].y},${gpsResult[0].x}`\r\n          self.viewDaumPost = false\r\n        } else {\r\n          self.$notify({\r\n            title: '실패',\r\n            message: '좌표 변환을 실패 하였습니다 주소 검색을 다시 해 주세요',\r\n            type: 'error'\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handlePost () {\r\n      this.viewDaumPost = true\r\n    },\r\n    async formSubmit () {\r\n      try {\r\n        await this.axios.put('farm', this.getFarm)\r\n        this.$emit('done')\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  },\r\n  async mounted () {\r\n\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components"}]}