{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/views/app/page/timespan/detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/views/app/page/timespan/detail.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport JsonEditor from '@/components/JsonEditor'\nexport default {\n  props: ['id'],\n  components: {\n    JsonEditor\n  },\n  data () {\n    return {\n      section: 0,\n      titles: [\n        '기본정보',\n        '타임스팬'\n      ],\n      jsonEditorOptions: {\n        mode: 'code'\n      },\n      item: {\n        name: '',\n        timespan: {}\n      }\n    }\n  },\n  methods: {\n    async del () {\n      this.$confirm('타임스팬을 템플릿을 삭제 하시겠습니까?', '확인', {\n        type: 'info'\n      })\n        .then(async _ => {\n          try {\n            await this.axios.delete(`/rule/timespan/${this.id}`)\n            this.$notify({\n              title: '성공',\n              message: '타임스팬 템플릿을 삭제 하였습니다.',\n              type: 'success'\n            })\n            this.$router.replace(`/timespan`)\n          } catch (error) {\n            this.$notify({\n              title: '실패',\n              message: '삭제에 실패 하였습니다',\n              type: 'error'\n            })\n          }\n        })\n        .catch(_ => {})\n    },\n    async save () {\n      let isError = false\n      try {\n        this.item.timespan = this.$refs.jsonEditor1.editorJsonRetrun()\n\n        if (this.item.name.replace(/(^\\s*)|(\\s*$)/g, '').length === 0) {\n          this.$notify({\n            title: '실패',\n            message: '이름을 입력 해 주세요.',\n            type: 'error'\n          })\n          return\n        }\n      } catch (error) {\n        this.$notify({\n          title: '실패',\n          message: '데이터에 오류가 있습니다.',\n          type: 'error'\n        })\n        isError = true\n      }\n      if (isError) {\n        return\n      }\n      try {\n        if (this.id !== 'new') {\n          await this.axios.put(`/rule/timespan/${this.id}`, this.item)\n        } else {\n          const { data } = await this.axios.post(`/rule/timespan`, this.item)\n          this.$router.replace(`/timespan/${data.id}`)\n        }\n        this.$notify({\n          title: '성공',\n          message: '타임스팬 템플릿을 저장 하였습니다.',\n          type: 'success'\n        })\n      } catch (error) {\n        this.$notify({\n          title: '실패',\n          message: '저장에 실패 하였습니다',\n          type: 'error'\n        })\n      }\n    },\n    async getTimespanTemplate () {\n      try {\n        const { data } = await this.axios.get(`/rule/timespan/${this.id}/field/-1`)\n        this.item = data\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  },\n  async mounted () {\n    if (this.id !== 'new') {\n      this.getTimespanTemplate()\n    }\n  }\n}\n",{"version":3,"sources":["detail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"detail.vue","sourceRoot":"src/views/app/page/timespan","sourcesContent":["<template>\n  <div class=\"col-xxs-12 mx-auto my-auto\" style=\"padding:15px\">\n    <h4 class=\"c-grey-900 mB-30\">{{id === 'new' ? '타임스팬 추가' : '타임스팬 수정'}}</h4>\n\n    <div style=\"display: flex;\">\n      <div class=\"scollSideBar\" style=\"position:fixed\">\n        <ul class=\"menu\" v-scroll-spy-active=\"{class: 'customActive'}\" v-scroll-spy-link>\n          <li :key=\"item\" v-for=\"item in titles\" class=\"menu-item\">\n            <a>{{item}}</a>\n          </li>\n        </ul>\n        <el-button type=\"primary\" class=\"mt-5\" @click=\"save\">{{id === 'new' ? '타임스팬 추가' : '타임스팬 수정'}}</el-button>\n        <el-button type=\"info\" class=\"mt-3 ml-0\" @click=\"del\" v-if=\"id !== 'new'\">타임스팬 삭제</el-button>\n      </div>\n\n      <div class=\"main w-100\" v-scroll-spy=\"{data: 'section',offset: 146}\">\n        <div>\n          <el-card class=\"box-card mb-5\" shadow=\"al\" style=\"cursor: pointer;\">\n            <div slot=\"header\" class=\"clearfix\">{{titles[0]}}</div>\n            <div>\n              <div class=\"mt-2\">타임스팬 이름</div>\n              <el-input class=\"mt-2\" placeholder=\"타임스팬 이름을 입력 하세요\" v-model=\"item.name\">\n                <template slot=\"prepend\">이름</template>\n              </el-input>\n            </div>\n          </el-card>\n        </div>\n        <div>\n          <el-card\n            class=\"box-card mb-5\"\n            shadow=\"al\"\n            style=\"cursor: pointer;\"\n            body-style=\"padding-top: 0px;padding-bottom: 0px;padding-right: 0px;padding-left: 0px;\"\n          >\n            <div slot=\"header\" class=\"clearfix\">{{titles[1]}}</div>\n            <jsonEditor ref=\"jsonEditor1\" :json=\"item.timespan\" :options=\"jsonEditorOptions\" />\n          </el-card>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport JsonEditor from '@/components/JsonEditor'\nexport default {\n  props: ['id'],\n  components: {\n    JsonEditor\n  },\n  data () {\n    return {\n      section: 0,\n      titles: [\n        '기본정보',\n        '타임스팬'\n      ],\n      jsonEditorOptions: {\n        mode: 'code'\n      },\n      item: {\n        name: '',\n        timespan: {}\n      }\n    }\n  },\n  methods: {\n    async del () {\n      this.$confirm('타임스팬을 템플릿을 삭제 하시겠습니까?', '확인', {\n        type: 'info'\n      })\n        .then(async _ => {\n          try {\n            await this.axios.delete(`/rule/timespan/${this.id}`)\n            this.$notify({\n              title: '성공',\n              message: '타임스팬 템플릿을 삭제 하였습니다.',\n              type: 'success'\n            })\n            this.$router.replace(`/timespan`)\n          } catch (error) {\n            this.$notify({\n              title: '실패',\n              message: '삭제에 실패 하였습니다',\n              type: 'error'\n            })\n          }\n        })\n        .catch(_ => {})\n    },\n    async save () {\n      let isError = false\n      try {\n        this.item.timespan = this.$refs.jsonEditor1.editorJsonRetrun()\n\n        if (this.item.name.replace(/(^\\s*)|(\\s*$)/g, '').length === 0) {\n          this.$notify({\n            title: '실패',\n            message: '이름을 입력 해 주세요.',\n            type: 'error'\n          })\n          return\n        }\n      } catch (error) {\n        this.$notify({\n          title: '실패',\n          message: '데이터에 오류가 있습니다.',\n          type: 'error'\n        })\n        isError = true\n      }\n      if (isError) {\n        return\n      }\n      try {\n        if (this.id !== 'new') {\n          await this.axios.put(`/rule/timespan/${this.id}`, this.item)\n        } else {\n          const { data } = await this.axios.post(`/rule/timespan`, this.item)\n          this.$router.replace(`/timespan/${data.id}`)\n        }\n        this.$notify({\n          title: '성공',\n          message: '타임스팬 템플릿을 저장 하였습니다.',\n          type: 'success'\n        })\n      } catch (error) {\n        this.$notify({\n          title: '실패',\n          message: '저장에 실패 하였습니다',\n          type: 'error'\n        })\n      }\n    },\n    async getTimespanTemplate () {\n      try {\n        const { data } = await this.axios.get(`/rule/timespan/${this.id}/field/-1`)\n        this.item = data\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  },\n  async mounted () {\n    if (this.id !== 'new') {\n      this.getTimespanTemplate()\n    }\n  }\n}\n</script>\n\n<style scoped>\ndiv >>> .el-input-group__prepend {\n  background-color: #fff;\n}\n\ndiv >>> .el-input__inner {\n  padding-left: 8px;\n  padding-right: 0px;\n  /* text-align: center; */\n}\n\ndiv >>> .el-input__suffix {\n  right: -2px;\n}\n\n.scollSideBar {\n  /* top: 30px;\n  left: 10px; */\n  max-width: 150px;\n  font-size: 18px;\n}\n.menu {\n  padding: 0;\n  list-style: none;\n}\n.current-section {\n  padding-top: 50px;\n}\n.current-section input {\n  max-width: 3em;\n}\n.menu-item {\n  margin-bottom: 20px;\n}\n.menu-item a {\n  cursor: pointer;\n}\n.main {\n  margin-left: 180px;\n}\n.customActive {\n  color: #178ce6;\n  border-left: 1px solid #178ce6;\n  padding-left: 5px;\n  transition: all 0.5s;\n}\n</style>\n"]}]}