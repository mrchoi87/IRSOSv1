{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/SensorCard.vue?vue&type=style&index=0&id=07100dd7&scoped=true&lang=css&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/SensorCard.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.textTitle {\n  font-size: 1.1rem;\n  font-weight: 500;\n  margin-bottom: 0;\n  color: #595d6e;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.el-dialog__wrapper >>> .el-dialog__body {\n  padding-top: 10px;\n}\n\n.box {\n  z-index: 0;\n}\n\n.box::before {\n  content: \"\";\n  position: absolute;\n  z-index: -1;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgb(0, 255, 85);\n  opacity: 0;\n  transition: opacity 0.2s linear;\n}\n\n.box:hover::before {\n  opacity: 0.2;\n}\n",{"version":3,"sources":["SensorCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"SensorCard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <b-card header-tag=\"header\">\n    <div slot=\"header\" class=\"mb-0\">\n      <div style=\"display: flex;align-items: center;\">\n        {{field.name}}\n        <div class=\"ml-auto\">\n          <span\n            v-if=\"getAllDevices.length > 0 && uiInfo.isFull\"\n          >출력 데이터를 선택 하세요&nbsp;&nbsp;&nbsp;&nbsp;</span>\n          <el-button size=\"mini\" icon=\"ti-settings\" @click=\"showDialog = true\" circle></el-button>\n        </div>\n      </div>\n    </div>\n    <b-row>\n      <div v-if=\"getAllDevices.length === 0\" class=\"ml-3\">No Data</div>\n      <template v-for=\"(device,idx) in getShowObservations\">\n        <b-col :lg=\"12/count\" md=\"4\" sm=\"4\" cols=\"6\" :key=\"idx\" class=\"whs-nw mt-3 mb-3\">\n          <el-tooltip\n            effect=\"light\"\n            v-if=\"differenceInSeconds(new Date(),$date().parse(getObservations[(1 * 10000000) + (device.id * 100)].obs_time)) > 300\"\n            :content=\"$date().format($date().parse(getObservations[(1 * 10000000) + (device.id * 100)].obs_time),'YY-MM-DD HH:MM') + '  5분 이전 데이터 입니다'\"\n            placement=\"top-start\"\n          >\n            <el-badge value=\"!\" class=\"item w-100\" type=\"warning\">\n              <div\n                class=\"textTitle ta-c\"\n              >{{device.name && device.name.length>0 ? device.name : device.spec.Name}}</div>\n            </el-badge>\n          </el-tooltip>\n          <div\n            v-else\n            class=\"textTitle ta-c\"\n          >{{device.name && device.name.length>0 ? device.name : device.spec.Name}}</div>\n          <div\n            style=\"margin-top:10px;margin-bottom:10px;height: 1px;width: 100%;background-color: #DCDFE6;\"\n          ></div>\n          <div v-for=\"(data,dataIdx) in device.datas\" :key=\"dataIdx\">\n            <div\n              v-if=\"uiInfo.isFull || (uiInfo.device[device.id] && uiInfo.device[device.id].includes(Number(data.id)))\"\n            >\n              <div class=\"ml-2 mr-2 mb-1\">\n                <template v-if=\"data.unit === '상태'\">\n                  <DeviceState class=\"mb-2\" :value=\"getObsData(getObservations[Number(data.id)])\" />\n                </template>\n                <template v-else>\n                  <colorTemplate :value=\"getObsData(getObservations[Number(data.id)])\">\n                    <div class=\"ml-2 mr-2 mb-1\" style=\"display: flex;align-items: center;\">\n                      {{data.name}}\n                      <div\n                        class=\"ml-auto\"\n                        style=\"color:#595d6e;\"\n                      >{{getObsData(getObservations[Number(data.id)])}}</div>\n                    </div>\n                  </colorTemplate>\n                </template>\n              </div>\n            </div>\n          </div>\n        </b-col>\n      </template>\n      <template v-for=\"data in uiInfo.data\">\n        <b-col :lg=\"12/count\" md=\"4\" sm=\"4\" cols=\"6\" :key=\"data\" class=\"whs-nw mt-3 mb-3\">\n          <div\n            class=\"textTitle ta-c\"\n            v-if=\"getObservations[Number(data)]\"\n          >{{getObservations[Number(data)].name}}</div>\n          <div\n            style=\"margin-top:10px;margin-bottom:10px;height: 1px;width: 100%;background-color: #DCDFE6;\"\n          ></div>\n          <div class=\"ml-2 mr-2 mb-1\" style=\"display: flex;align-items: center;\">\n            <div\n              class=\"ml-auto\"\n              style=\"color:#595d6e;\"\n            >{{getObsData(getObservations[Number(data)])}}</div>\n          </div>\n        </b-col>\n      </template>\n    </b-row>\n    <Transfer\n      :fieldId=\"field.id\"\n      :path=\"path\"\n      :uiInfo=\"uiInfo\"\n      :devices=\"getAllDevices\"\n      :dataIndexs=\"getDataIndex\"\n      :showDialog=\"showDialog\"\n      :closeDialog=\"()=>showDialog = false\"\n      :refresh=\"useDeviceMake\"\n    />\n  </b-card>\n</template>\n\n<script>\nimport { differenceInSeconds } from 'date-fns'\nimport colorTemplate from '@/components/colorTemplate'\nimport Transfer from '@/components/Transfer'\nimport DeviceState from '@/components/DeviceState'\nimport { statusCode } from '@/constants/config'\nimport { mapGetters } from 'vuex'\nexport default {\n  props: ['field', 'path', 'count'],\n  components: {\n    colorTemplate,\n    DeviceState,\n    Transfer\n  },\n  data () {\n    return {\n      differenceInSeconds: differenceInSeconds,\n      statusCode: statusCode,\n      toggleWait: false,\n      showDialog: false,\n      uiInfo: {}\n    }\n  },\n  mounted () {\n    this.useDeviceMake()\n  },\n  methods: {\n    useDeviceMake () {\n      const pathResult = this.path.reduce((object, currentValue) => {\n        return object[currentValue]\n      }, this._.cloneDeep(this.field.uiinfo))\n      this.uiInfo = pathResult\n    },\n    getObsData (data) {\n      if (data) {\n        if (data.unit === '상태') {\n          return this.statusCode[data.nvalue]\n        } else {\n          const value = Math.pow(10, data.sigdigit)\n          return `${Math.floor(data.nvalue * value) / value} ${\n            data.unit ? data.unit : ''\n          }`\n        }\n      } else {\n        return '---'\n      }\n    },\n    checkType (type, device) {\n      if (type === 'greenhouse') {\n        if (device.spec.Class === 'sensor') {\n          return true\n        }\n        return false\n      } else if (type === 'actuator') {\n        if (\n          device.spec.Class === 'actuator' ||\n          device.spec.Class === 'nutrient-supply'\n        ) {\n          return true\n        }\n        return false\n      } else {\n        return true\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      getAllFieldDevices: 'device/getAllFieldDevices',\n      getObservations: 'observation/getObservations',\n      getDataIndexList: 'dataIndex/getDataIndexList'\n    }),\n    getDataIndex () {\n      let items = []\n      for (const dataIndex of this.getDataIndexList) {\n        // eslint-disable-next-line eqeqeq\n        if (dataIndex.field_id == this.field.id) {\n          items.push(dataIndex)\n        }\n      }\n      return items\n    },\n    getShowObservations () {\n      const devices = this.getAllFieldDevices[this.field.id]\n      let showObservations = []\n      if (!devices) return []\n\n      if (!this.uiInfo.isFull) {\n        for (const sensorId in this.uiInfo.device) {\n          for (const device of devices) {\n            if (device.id === Number(sensorId)) {\n              showObservations.push(device)\n            }\n          }\n        }\n        return showObservations\n      } else {\n        for (const device of devices) {\n          if (this.checkType(this.path[1], device)) {\n            showObservations.push(device)\n          }\n        }\n        return showObservations\n      }\n    },\n    getAllDevices () {\n      let item = this.getAllFieldDevices[this.field.id]\n\n      if (item === undefined) {\n        return []\n      }\n\n      const newItem = []\n      item.forEach(device => {\n        if (this.checkType(this.path[1], device)) {\n          newItem.push(device)\n        }\n      })\n      return newItem\n    }\n  }\n}\n</script>\n\n<style scoped>\n.textTitle {\n  font-size: 1.1rem;\n  font-weight: 500;\n  margin-bottom: 0;\n  color: #595d6e;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.el-dialog__wrapper >>> .el-dialog__body {\n  padding-top: 10px;\n}\n\n.box {\n  z-index: 0;\n}\n\n.box::before {\n  content: \"\";\n  position: absolute;\n  z-index: -1;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgb(0, 255, 85);\n  opacity: 0;\n  transition: opacity 0.2s linear;\n}\n\n.box:hover::before {\n  opacity: 0.2;\n}\n</style>\n"]}]}