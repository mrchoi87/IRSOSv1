{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/DeviceState.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/DeviceState.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: ['value', 'sub', 'text', 'wrap'],\n  data () {\n    return {\n      valueTimer: Function,\n      currentTime: 0\n    }\n  },\n  watch: {\n    sub (newValue, oldValue) {\n      this.currentTime = this._.cloneDeep(Math.floor(newValue))\n      if (this.currentTime <= 0) {\n        clearInterval(this.valueTimer)\n      } else {\n        this.countDown()\n      }\n    }\n  },\n  mounted () {\n    this.currentTime = Math.floor(this.sub)\n    this.countDown()\n  },\n  methods: {\n    countDown () {\n      clearInterval(this.valueTimer)\n      if (this.currentTime && this.currentTime > 0) {\n        this.valueTimer = setInterval(() => {\n          this.currentTime -= 1\n          if (this.currentTime <= 0) {\n            clearInterval(this.valueTimer)\n          }\n        }, 1000)\n      }\n    }\n  },\n  computed: {\n    variant () {\n      switch (this.value) {\n        case '대기':\n          return 'light'\n        case '에러':\n          return 'danger'\n        case '교체 필요':\n          return 'warning'\n        case '교정 필요':\n          return 'warning'\n        case '작동중':\n          return 'primary'\n        case '여는중':\n          return 'success'\n        case '닫는중':\n          return 'info'\n        case '준비중':\n          return 'secondary'\n        case '공급중':\n          return 'success'\n        case '정지중':\n          return 'info'\n        default:\n          return 'light'\n      }\n    }\n  }\n}\n",{"version":3,"sources":["DeviceState.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DeviceState.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <b-badge\n    :class=\"{'w-100' : !wrap}\"\n    :variant=\"variant\"\n  >{{value}} {{currentTime > 0 ? ' ( '+currentTime + text + ' )' : ''}}</b-badge>\n</template>\n\n<script>\nexport default {\n  props: ['value', 'sub', 'text', 'wrap'],\n  data () {\n    return {\n      valueTimer: Function,\n      currentTime: 0\n    }\n  },\n  watch: {\n    sub (newValue, oldValue) {\n      this.currentTime = this._.cloneDeep(Math.floor(newValue))\n      if (this.currentTime <= 0) {\n        clearInterval(this.valueTimer)\n      } else {\n        this.countDown()\n      }\n    }\n  },\n  mounted () {\n    this.currentTime = Math.floor(this.sub)\n    this.countDown()\n  },\n  methods: {\n    countDown () {\n      clearInterval(this.valueTimer)\n      if (this.currentTime && this.currentTime > 0) {\n        this.valueTimer = setInterval(() => {\n          this.currentTime -= 1\n          if (this.currentTime <= 0) {\n            clearInterval(this.valueTimer)\n          }\n        }, 1000)\n      }\n    }\n  },\n  computed: {\n    variant () {\n      switch (this.value) {\n        case '대기':\n          return 'light'\n        case '에러':\n          return 'danger'\n        case '교체 필요':\n          return 'warning'\n        case '교정 필요':\n          return 'warning'\n        case '작동중':\n          return 'primary'\n        case '여는중':\n          return 'success'\n        case '닫는중':\n          return 'info'\n        case '준비중':\n          return 'secondary'\n        case '공급중':\n          return 'success'\n        case '정지중':\n          return 'info'\n        default:\n          return 'light'\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n"]}]}