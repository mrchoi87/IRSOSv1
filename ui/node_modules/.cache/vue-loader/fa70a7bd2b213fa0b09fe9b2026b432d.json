{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/views/app/page/control/manual.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/views/app/page/control/manual.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport TimeLine from '@/components/TimeLine'\r\nimport DeviceState from '@/components/DeviceState'\r\nimport { statusCode, cmdCode } from '@/constants/config'\r\nimport { mapGetters } from 'vuex'\r\nexport default {\r\n  props: {\r\n    id: String,\r\n    type: String\r\n  },\r\n  components: {\r\n    DeviceState,\r\n    TimeLine\r\n  },\r\n  data () {\r\n    return {\r\n      statusCode: statusCode,\r\n      cmdCode: cmdCode,\r\n      controlData: {},\r\n      history: {}\r\n    }\r\n  },\r\n  watch: {\r\n    getNotiLast (noti) {\r\n      let isDevice = false\r\n      for (const key in noti) {\r\n        if (key !== 'code' || key !== 'time') {\r\n          for (const sw of this.getSwitch) {\r\n            if (sw.id === Number(key)) {\r\n              isDevice = true\r\n              break\r\n            }\r\n          }\r\n          for (const ret of this.getRetractable) {\r\n            if (ret.id === Number(key)) {\r\n              isDevice = true\r\n              break\r\n            }\r\n          }\r\n          for (const ret of this.getNutrientSupply) {\r\n            if (ret.id === Number(key)) {\r\n              isDevice = true\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (isDevice) {\r\n        this.getAllDeviceHistory()\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getNotiLast: 'mqtt/getNotiMsgLast',\r\n      getFields: 'field/getFields',\r\n      getDevices: 'device/getDevices',\r\n      getAllFieldDevices: 'device/getAllFieldDevices',\r\n      getObservations: 'observation/getObservations'\r\n    }),\r\n    getCurrentDevice () {\r\n      let item = []\r\n      if (this.getAllFieldDevices && this.getAllFieldDevices[this.id]) {\r\n        item = this.getAllFieldDevices[this.id]\r\n      }\r\n\r\n      for (const device of item) {\r\n        this.$set(device, 'roll', true)\r\n      }\r\n\r\n      if (item.length > 0) {\r\n        this.historyDataMaker(item)\r\n        this.controlDataMaker(item)\r\n        this.getAllDeviceHistory()\r\n      }\r\n      return item\r\n    },\r\n\r\n    getNutrientSupply () {\r\n      let item = []\r\n      if (this.getDevices) {\r\n        item = this.getDevices.filter(device => {\r\n          return device.spec.Class === 'nutrient-supply'\r\n        })\r\n\r\n        for (const device of item) {\r\n          this.$set(device, 'roll', true)\r\n        }\r\n      }\r\n\r\n      if (item.length > 0) {\r\n        this.historyDataMaker(item)\r\n        this.controlDataMaker(item)\r\n        this.getAllDeviceHistory()\r\n      }\r\n      return item\r\n    },\r\n    getRetractable () {\r\n      if (this.getCurrentDevice) {\r\n        return this.getCurrentDevice.filter(device => {\r\n          return (\r\n            device.spec.Class === 'actuator' &&\r\n            device.spec.Type.startsWith('retractable')\r\n          )\r\n        })\r\n      }\r\n      return []\r\n    },\r\n    getSwitch () {\r\n      if (this.getCurrentDevice) {\r\n        return this.getCurrentDevice.filter(device => {\r\n          return (\r\n            device.spec.Class === 'actuator' &&\r\n            device.spec.Type.startsWith('switch')\r\n          )\r\n        })\r\n      }\r\n      return []\r\n    },\r\n    getField () {\r\n      return this.getFields.filter(field => field.id === Number(this.id))[0]\r\n    }\r\n  },\r\n  mounted () {\r\n    // this.getAllDeviceHistory()\r\n  },\r\n  methods: {\r\n    getFieldName (index, id) {\r\n      for (const field of this.getFields) {\r\n        if (field.id === id) {\r\n          return `${index + 1} - ${field.name}`\r\n        }\r\n      }\r\n    },\r\n    historyDataMaker (devices) {\r\n      for (const device of devices) {\r\n        if (!this.history.hasOwnProperty(device.id)) {\r\n          this.$set(this.history, device.id, {\r\n            requests: [],\r\n            states: [],\r\n            date: this.$date().format(new Date(), 'YYYY-MM-DD')\r\n          })\r\n        }\r\n      }\r\n    },\r\n    historyDateChg (deviceId, type) {\r\n      let date = new Date(this.history[deviceId].date)\r\n      if (type === 'prev') {\r\n        this.history[deviceId].date = this.$date().format(\r\n          date.setDate(date.getDate() - 1),\r\n          'YYYY-MM-DD'\r\n        )\r\n      } else {\r\n        this.history[deviceId].date = this.$date().format(\r\n          date.setDate(date.getDate() + 1),\r\n          'YYYY-MM-DD'\r\n        )\r\n      }\r\n      this.getDeviceHistory(deviceId, this.history[deviceId].date)\r\n    },\r\n    async getAllDeviceHistory () {\r\n      for (const key in this.history) {\r\n        await this.getDeviceHistory(key, this.history[key].date)\r\n      }\r\n    },\r\n    async getDeviceHistory (deivceId, date) {\r\n      const { data } = await this.axios.get(`device/history/${deivceId}`, {\r\n        params: {\r\n          date: this.$date().format(date, 'YYYY-MM-DD')\r\n        }\r\n      })\r\n\r\n      this.$set(this.history[deivceId], 'requests', data.requests)\r\n      this.$set(this.history[deivceId], 'states', data.states)\r\n    },\r\n    getObsData (data) {\r\n      if (data) {\r\n        if (data.unit === '상태') {\r\n          return this.statusCode[data.nvalue]\r\n        } else {\r\n          return `${data.nvalue} ${data.unit}`\r\n        }\r\n      } else {\r\n        return '---'\r\n      }\r\n    },\r\n    controlDataMaker (devices) {\r\n      devices.forEach(device => {\r\n        if (!this.controlData[device.id]) {\r\n          let data = {\r\n            level0: {},\r\n            level1: {},\r\n            level2: {}\r\n          }\r\n          if (\r\n            device.spec.Class === 'actuator' &&\r\n            device.spec.Type.startsWith('retractable')\r\n          ) {\r\n            if (device.spec.Type.split('/')[1] !== 'level0') {\r\n              data.level1.opentime = 0\r\n              data.level1.closetime = 0\r\n            }\r\n            if (device.spec.Type.split('/')[1] === 'level2') {\r\n              data.level2.position = 0\r\n              data.level2.opentime = 0\r\n              data.level2.closetime = 0\r\n            }\r\n          } else if (\r\n            device.spec.Class === 'actuator' &&\r\n            device.spec.Type.startsWith('switch')\r\n          ) {\r\n            if (device.spec.Type.split('/')[1] !== 'level0') {\r\n              data.level1.holdtime = 0\r\n            }\r\n            if (device.spec.Type.split('/')[1] === 'level2') {\r\n              data.level2.holdtime = 0\r\n              data.level2.ratio = 0\r\n            }\r\n          } else if (device.spec.Class === 'nutrient-supply') {\r\n            data.level0.control = 1\r\n            if (device.spec.Type.split('/')[1] === 'level1') {\r\n              data.level1.ec = 0\r\n              data.level1.ph = 0\r\n              data.level1.sec = 0\r\n              data.level1.startarea = ''\r\n              data.level1.stoparea = ''\r\n            }\r\n          }\r\n          this.$set(this.controlData, device.id, data)\r\n        }\r\n      })\r\n    },\r\n    controlChange (device, value) {\r\n      let result = this.mqtt.deivceControl(\r\n        device,\r\n        this.cmdCode.nutrient.control,\r\n        { control: value }\r\n      )\r\n\r\n      if (!result) {\r\n        this.$notify({\r\n          title: '실패',\r\n          message: '제어 명령은 5초에 한번씩 전송 가능 합니다',\r\n          type: 'error'\r\n        })\r\n      }\r\n    },\r\n    controlClick (device, type, control, level) {\r\n      if (type === 'nutrient-supply' && level !== undefined) {\r\n        if (\r\n          device.place.indexOf(this.controlData[device.id][level].startarea) ===\r\n            -1 ||\r\n          device.place.indexOf(this.controlData[device.id][level].stoparea) ===\r\n            -1\r\n        ) {\r\n          this.$notify({\r\n            title: '실패',\r\n            message: '관수 구역을 설정해 주세요',\r\n            type: 'error'\r\n          })\r\n          return\r\n        }\r\n        if (\r\n          Number(\r\n            device.place.indexOf(this.controlData[device.id][level].startarea)\r\n          ) +\r\n            1 >\r\n          Number(\r\n            device.place.indexOf(this.controlData[device.id][level].stoparea)\r\n          ) +\r\n            1\r\n        ) {\r\n          this.$notify({\r\n            title: '실패',\r\n            message: '관수 시작 구역을 낮은 번호로 입력 하세요',\r\n            type: 'error'\r\n          })\r\n          return\r\n        }\r\n      }\r\n\r\n      let result = this.mqtt.deivceControl(\r\n        device,\r\n        control,\r\n        this.controlData[device.id][level]\r\n      )\r\n      if (!result) {\r\n        this.$notify({\r\n          title: '실패',\r\n          message: '제어 명령은 5초에 한번씩 전송 가능 합니다',\r\n          type: 'error'\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["manual.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAicfile":"manual.vue","sourceRoot":"src/views/app/page/control","sourcesContent":["<template>\r\n  <div class=\"col-xxs-12 mx-auto my-auto\" style=\"padding:15px\">\r\n    <h4 class=\"c-grey-900\" v-if=\"getField && type === 'base'\">{{getField.name}} 장비제어</h4>\r\n    <h4 class=\"c-grey-900\" v-if=\"type === 'nutrient-supply'\">양액기 제어</h4>\r\n\r\n    <template v-if=\"type === 'base'\">\r\n      <div>\r\n        <b-row class=\"mt-4 mb-2\">\r\n          <b-col xxs=\"12\">\r\n            <div>\r\n              <div class=\"float-left\">\r\n                <div class=\"d-inline-block\">\r\n                  <h5 class>개폐기</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n\r\n        <b-row v-for=\"device in getRetractable\" :key=\"device.id\" class=\"mb-4\">\r\n          <b-col md=\"12\">\r\n            <b-card>\r\n              <b-row>\r\n                <b-col md=\"4\">\r\n                  <div v-if=\"controlData[device.id]\">\r\n                    <h3>{{device.name}}</h3>\r\n                    <p>타입 : {{device.spec.Type}}</p>\r\n                    <h5>\r\n                      <DeviceState\r\n                        :value=\"getObsData(getObservations['1'+device.id.toString().padStart(5,0)+'00'])\"\r\n                        :sub=\"getObservations['1'+device.id.toString().padStart(5,0)+'04'] ?\r\n                getObservations['1'+device.id.toString().padStart(5,0)+'04'].nvalue : 0\"\r\n                        text=\"초 남음\"\r\n                      />\r\n                    </h5>\r\n                    <div style=\"text-align:center\" class=\"mb-3\">\r\n                      <el-popover\r\n                        trigger=\"hover\"\r\n                        placement=\"top-start\"\r\n                        v-if=\"device.spec.Type.split('/')[1] === 'level2'\"\r\n                      >\r\n                        <template>\r\n                          <el-divider content-position=\"left\">열기 시간</el-divider>\r\n                          <div v-if=\"controlData[device.id]\">\r\n                            <el-input-number\r\n                              v-model=\"controlData[device.id].level2.opentime\"\r\n                              :min=\"10\"\r\n                            ></el-input-number>\r\n                          </div>\r\n                          <el-divider content-position=\"left\">닫기 시간</el-divider>\r\n                          <div>\r\n                            <el-input-number\r\n                              v-model=\"controlData[device.id].level2.closetime\"\r\n                              :min=\"10\"\r\n                            ></el-input-number>\r\n                          </div>\r\n                          <div class=\"mt-3\">\r\n                            <el-button\r\n                              style=\"width:40%;float: right;\"\r\n                              @click=\"controlClick(device,'retractable',cmdCode.retractable.config,'level2')\"\r\n                            >설정</el-button>\r\n                          </div>\r\n                        </template>\r\n                        <el-button slot=\"reference\" style=\"width:100%\" plain>개폐 초기값 설정</el-button>\r\n                      </el-popover>\r\n                    </div>\r\n                    <el-divider content-position=\"left\">기본 제어</el-divider>\r\n                    <div style=\"text-align:center\">\r\n                      <el-button\r\n                        style=\"width:42%\"\r\n                        type=\"info\"\r\n                        slot=\"reference\"\r\n                        plain\r\n                        @click=\"controlClick(device,'retractable',cmdCode.retractable.stop)\"\r\n                      >중지</el-button>\r\n                      <el-button\r\n                        class=\"ml-4\"\r\n                        style=\"width:22%\"\r\n                        type=\"primary\"\r\n                        plain\r\n                        @click=\"controlClick(device,'retractable',cmdCode.retractable.open)\"\r\n                      >열기</el-button>\r\n                      <el-button\r\n                        style=\"width:22%\"\r\n                        type=\"danger\"\r\n                        plain\r\n                        @click=\"controlClick(device,'retractable',cmdCode.retractable.close)\"\r\n                      >닫기</el-button>\r\n                    </div>\r\n                    <div class=\"mt-3\" style=\"text-align:center\">\r\n                      <template v-if=\"device.spec.Type.split('/')[1] !== 'level0'\">\r\n                        <el-divider content-position=\"left\">시간 지정</el-divider>\r\n                        <b-row>\r\n                          <b-col md=\"6\">\r\n                            <el-input-number\r\n                              style=\"width:100%\"\r\n                              :min=\"10\"\r\n                              v-model=\"controlData[device.id].level1.opentime\"\r\n                            ></el-input-number>\r\n                            <el-button\r\n                              class=\"mt-2\"\r\n                              style=\"width:100%\"\r\n                              type=\"primary\"\r\n                              plain\r\n                              @click=\"controlClick(device,'retractable',cmdCode.retractable.timedopen,'level1')\"\r\n                            >열기</el-button>\r\n                          </b-col>\r\n                          <b-col md=\"6\">\r\n                            <el-input-number\r\n                              style=\"width:100%\"\r\n                              :min=\"10\"\r\n                              v-model=\"controlData[device.id].level1.closetime\"\r\n                            ></el-input-number>\r\n                            <el-button\r\n                              class=\"mt-2\"\r\n                              style=\"width:100%\"\r\n                              type=\"danger\"\r\n                              plain\r\n                              @click=\"controlClick(device,'retractable',cmdCode.retractable.timedclose,'level1')\"\r\n                            >닫기</el-button>\r\n                          </b-col>\r\n                        </b-row>\r\n                      </template>\r\n\r\n                      <template v-if=\"device.spec.Type.split('/')[1] === 'level2'\">\r\n                        <el-divider content-position=\"left\">개방도 지정</el-divider>\r\n                        <div class=\"ml-4 mr-1\">\r\n                          <el-slider\r\n                            :min=\"0\"\r\n                            :max=\"100\"\r\n                            v-model=\"controlData[device.id].level2.position\"\r\n                          ></el-slider>\r\n                          <el-button\r\n                            style=\"width:48%;float: right;\"\r\n                            type=\"warning\"\r\n                            plain\r\n                            @click=\"controlClick(device,'retractable',cmdCode.retractable.position,'level2')\"\r\n                          >시작</el-button>\r\n                        </div>\r\n                      </template>\r\n                    </div>\r\n                  </div>\r\n                </b-col>\r\n                <b-col md=\"8\">\r\n                  <div class=\"mb-2\">\r\n                    <el-button @click=\"historyDateChg(device.id,'prev')\">전일</el-button>\r\n                    <el-button @click=\"historyDateChg(device.id,'next')\">다음일</el-button>\r\n                    <el-switch\r\n                      style=\"float:right\"\r\n                      v-model=\"device.roll\"\r\n                      active-text=\"사용\"\r\n                      inactive-text=\"롤링 중지\"\r\n                    ></el-switch>\r\n                  </div>\r\n                  <TimeLine\r\n                    ref=\"timeline\"\r\n                    type=\"switch\"\r\n                    :roll=\"device.roll\"\r\n                    :history=\"history[device.id]\"\r\n                    :currentState=\"getObservations[device.id * 100 + 10000000]\"\r\n                  />\r\n                </b-col>\r\n              </b-row>\r\n            </b-card>\r\n          </b-col>\r\n        </b-row>\r\n      </div>\r\n\r\n      <div>\r\n        <b-row class=\"mb-2\">\r\n          <b-col xxs=\"12\">\r\n            <div>\r\n              <div class=\"float-left\">\r\n                <div class=\"d-inline-block\">\r\n                  <h5 class>스위치</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n        <b-row v-for=\"device in getSwitch\" :key=\"device.id\" class=\"mb-4\">\r\n          <b-col md=\"12\">\r\n            <b-card>\r\n              <b-row>\r\n                <b-col md=\"4\">\r\n                  <div v-if=\"controlData[device.id]\">\r\n                    <h3>{{device.name}}</h3>\r\n                    <p>타입 : {{device.spec.Type}}</p>\r\n                    <h5>\r\n                      <DeviceState\r\n                        :value=\"getObsData(getObservations['1'+device.id.toString().padStart(5,0)+'00'])\"\r\n                        :sub=\"getObservations['1'+device.id.toString().padStart(5,0)+'04'] ?\r\n                getObservations['1'+device.id.toString().padStart(5,0)+'04'].nvalue : 0\"\r\n                        text=\"초 남음\"\r\n                      />\r\n                    </h5>\r\n\r\n                    <el-divider content-position=\"left\">기본 제어</el-divider>\r\n                    <div style=\"text-align:center\">\r\n                      <el-button\r\n                        style=\"width:45%;\"\r\n                        type=\"primary\"\r\n                        plain\r\n                        @click=\"controlClick(device,'switch',cmdCode.switch.on)\"\r\n                      >시작</el-button>\r\n                      <el-button\r\n                        slot=\"reference\"\r\n                        style=\"width:45%;float:right;\"\r\n                        type=\"info\"\r\n                        plain\r\n                        @click=\"controlClick(device,'switch',cmdCode.switch.off)\"\r\n                      >중지</el-button>\r\n                    </div>\r\n                    <div class=\"mt-3\" style=\"text-align:center\">\r\n                      <template v-if=\"device.spec.Type.split('/')[1]!=='level0'\">\r\n                        <el-divider content-position=\"left\">시간 지정</el-divider>\r\n                        <div>\r\n                          <el-input-number\r\n                            :min=\"10\"\r\n                            style=\"width:45%;\"\r\n                            v-model=\"controlData[device.id].level1.holdtime\"\r\n                          ></el-input-number>\r\n                          <el-button\r\n                            class=\"ml-2\"\r\n                            style=\"width:45%;float:right;\"\r\n                            type=\"primary\"\r\n                            plain\r\n                            @click=\"controlClick(device,'switch',cmdCode.switch.timedon,'level1')\"\r\n                          >시작</el-button>\r\n                        </div>\r\n                      </template>\r\n                      <template v-if=\"device.spec.Type.split('/')[1]==='level2'\">\r\n                        <el-divider content-position=\"left\">비율 시간 지정</el-divider>\r\n                        <div class=\"ml-4 mr-1\">\r\n                          <el-slider\r\n                            :min=\"0\"\r\n                            :max=\"100\"\r\n                            v-model=\"controlData[device.id].level2.ratio\"\r\n                          ></el-slider>\r\n                        </div>\r\n                        <div>\r\n                          <el-input-number\r\n                            style=\"width:45%\"\r\n                            v-model=\"controlData[device.id].level1.holdtime\"\r\n                          ></el-input-number>\r\n                          <el-button\r\n                            style=\"width:45%;float:right;\"\r\n                            type=\"primary\"\r\n                            plain\r\n                            @click=\"controlClick(device,'switch',cmdCode.switch.directionalon,'level2')\"\r\n                          >시작</el-button>\r\n                        </div>\r\n                      </template>\r\n                    </div>\r\n                  </div>\r\n                </b-col>\r\n                <b-col md=\"8\">\r\n                  <div class=\"mb-2\">\r\n                    <el-button @click=\"historyDateChg(device.id,'prev')\">전일</el-button>\r\n                    <el-button @click=\"historyDateChg(device.id,'next')\">다음일</el-button>\r\n                    <el-switch\r\n                      style=\"float:right\"\r\n                      v-model=\"device.roll\"\r\n                      active-text=\"사용\"\r\n                      inactive-text=\"롤링 중지\"\r\n                    ></el-switch>\r\n                  </div>\r\n                  <TimeLine\r\n                    ref=\"timeline\"\r\n                    type=\"switch\"\r\n                    :roll=\"device.roll\"\r\n                    :history=\"history[device.id]\"\r\n                    :currentState=\"getObservations[device.id * 100 + 10000000]\"\r\n                  />\r\n                </b-col>\r\n              </b-row>\r\n            </b-card>\r\n          </b-col>\r\n        </b-row>\r\n      </div>\r\n    </template>\r\n\r\n    <template v-else>\r\n      <div>\r\n        <b-row class=\"mb-2\">\r\n          <b-col xxs=\"12\">\r\n            <div>\r\n              <div class=\"float-left\">\r\n                <div class=\"d-inline-block\">\r\n                  <h5 class>양액기</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n        <b-row v-for=\"device in getNutrientSupply\" :key=\"device.id\">\r\n          <b-col md=\"12\">\r\n            <b-card>\r\n              <b-row>\r\n                <b-col md=\"4\">\r\n                  <div v-if=\"controlData[device.id]\">\r\n                    <h3>{{device.name}}</h3>\r\n                    <div class=\"mb-2\">타입 : {{device.spec.Type}}</div>\r\n                    <div\r\n                      class=\"mb-2\"\r\n                    >제어권 : {{getObservations['1'+device.id.toString().padStart(5,0)+'06'].nvalue === 1 ? '로컬' : '플랫폼'}}</div>\r\n                    <div>진행 구역</div>\r\n                    <div class=\"mt-1 mb-3\">\r\n                      <el-tag\r\n                        :key=\"place\"\r\n                        v-for=\"(place,index) in device.place\"\r\n                        size=\"small\"\r\n                        class=\"mr-1\"\r\n                        :type=\"getObservations['1'+device.id.toString().padStart(5,0)+'07'].nvalue === index+1 ? 'primary' : 'info'\"\r\n                        :effect=\"getObservations['1'+device.id.toString().padStart(5,0)+'07'].nvalue === index+1 ? 'dark' : 'plain'\"\r\n                      >{{getFieldName(index,place)}}</el-tag>\r\n                    </div>\r\n                    <h5>\r\n                      <DeviceState\r\n                        :value=\"getObsData(getObservations['1'+device.id.toString().padStart(5,0)+'00'])\"\r\n                      />\r\n                    </h5>\r\n                    <el-divider content-position=\"left\">기본 제어</el-divider>\r\n                    <div style=\"display: flex;align-items: center;\">\r\n                      제어권 변경\r\n                      <el-button-group class=\"ml-auto\">\r\n                        <el-button type size=\"mini\" @click=\"controlChange(device,1)\">로컬</el-button>\r\n                        <el-button type size=\"mini\" @click=\"controlChange(device,2)\">플랫폼</el-button>\r\n                      </el-button-group>\r\n                    </div>\r\n                    <div class=\"mt-3\" style=\"text-align:center\">\r\n                      <el-button\r\n                        style=\"width:48%;\"\r\n                        type=\"primary\"\r\n                        plain\r\n                        @click=\"controlClick(device,'nutrient-supply',cmdCode.nutrient.on)\"\r\n                      >시작</el-button>\r\n                      <el-button\r\n                        slot=\"reference\"\r\n                        style=\"width:48%\"\r\n                        type=\"info\"\r\n                        plain\r\n                        @click=\"controlClick(device,'nutrient-supply',cmdCode.nutrient.off)\"\r\n                      >중지</el-button>\r\n\r\n                      <template v-if=\"device.spec.Type.split('/')[1] !== 'level0'\">\r\n                        <el-divider content-position=\"left\">파라미터 제어</el-divider>\r\n\r\n                        <div class=\"mt-3\">\r\n                          <div class=\"ta-l\">시작 - 종료 구역 설정</div>\r\n                          <b-row class=\"mt-1\">\r\n                            <b-col md=\"6\" class=\"p-0\">\r\n                              <el-select\r\n                                placeholder=\"시작구역\"\r\n                                style=\"width:100%\"\r\n                                v-model=\"controlData[device.id].level1.startarea\"\r\n                              >\r\n                                <template v-for=\"(place,placeIndex) in device.place\">\r\n                                  <template v-for=\"field in getFields\">\r\n                                    <el-option\r\n                                      v-if=\"place === field.id\"\r\n                                      :key=\"place+field\"\r\n                                      :label=\"(placeIndex+1) +' - ' +field.name\"\r\n                                      :value=\"field.id\"\r\n                                    ></el-option>\r\n                                  </template>\r\n                                </template>\r\n                              </el-select>\r\n                            </b-col>\r\n                            <b-col md=\"6\" class=\"p-0\">\r\n                              <el-select\r\n                                placeholder=\"종료구역\"\r\n                                :style=\"{width:'97%' ,float:'right'}\"\r\n                                v-model=\"controlData[device.id].level1.stoparea\"\r\n                              >\r\n                                <template v-for=\"(place,placeIndex) in device.place\">\r\n                                  <template v-for=\"field in getFields\">\r\n                                    <el-option\r\n                                      v-if=\"place === field.id\"\r\n                                      :key=\"place+field\"\r\n                                      :label=\"(placeIndex+1) +' - ' +field.name\"\r\n                                      :value=\"field.id\"\r\n                                    ></el-option>\r\n                                  </template>\r\n                                </template>\r\n                              </el-select>\r\n                            </b-col>\r\n                          </b-row>\r\n                        </div>\r\n\r\n                        <div class=\"mt-3\">\r\n                          <div class=\"ta-l mb-1\">환경 설정</div>\r\n                          <el-input style=\"width:50%;\" v-model=\"controlData[device.id].level1.ec\">\r\n                            <template slot=\"prepend\">EC&nbsp;</template>\r\n                          </el-input>\r\n                          <el-input\r\n                            style=\"width:48%;\"\r\n                            class=\"ml-2\"\r\n                            v-model=\"controlData[device.id].level1.ph\"\r\n                          >\r\n                            <template slot=\"prepend\">pH&nbsp;</template>\r\n                          </el-input>\r\n                        </div>\r\n                        <div class=\"mt-2\">\r\n                          <el-input\r\n                            :style=\"{width:'50%' ,float:'left'}\"\r\n                            v-model=\"controlData[device.id].level1.sec\"\r\n                          >\r\n                            <template slot=\"prepend\" style=\"width:40px;\">시간</template>\r\n                          </el-input>\r\n                          <el-button\r\n                            :style=\"{width:'48%' ,float:'right'}\"\r\n                            type=\"primary\"\r\n                            plain\r\n                            @click=\"controlClick(device,'nutrient-supply',cmdCode.nutrient.param,'level1')\"\r\n                          >시작</el-button>\r\n                        </div>\r\n                      </template>\r\n                    </div>\r\n                  </div>\r\n                </b-col>\r\n                <b-col md=\"8\">\r\n                  <div class=\"mb-2\">\r\n                    <el-button @click=\"historyDateChg(device.id,'prev')\">전일</el-button>\r\n                    <el-button @click=\"historyDateChg(device.id,'next')\">다음일</el-button>\r\n                    <el-switch\r\n                      style=\"float:right\"\r\n                      v-model=\"device.roll\"\r\n                      active-text=\"사용\"\r\n                      inactive-text=\"롤링 중지\"\r\n                    ></el-switch>\r\n                  </div>\r\n                  <TimeLine\r\n                    ref=\"timeline\"\r\n                    type=\"switch\"\r\n                    :history=\"history[device.id]\"\r\n                    :currentState=\"getObservations[device.id * 100 + 10000000]\"\r\n                  />\r\n                </b-col>\r\n              </b-row>\r\n            </b-card>\r\n          </b-col>\r\n        </b-row>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TimeLine from '@/components/TimeLine'\r\nimport DeviceState from '@/components/DeviceState'\r\nimport { statusCode, cmdCode } from '@/constants/config'\r\nimport { mapGetters } from 'vuex'\r\nexport default {\r\n  props: {\r\n    id: String,\r\n    type: String\r\n  },\r\n  components: {\r\n    DeviceState,\r\n    TimeLine\r\n  },\r\n  data () {\r\n    return {\r\n      statusCode: statusCode,\r\n      cmdCode: cmdCode,\r\n      controlData: {},\r\n      history: {}\r\n    }\r\n  },\r\n  watch: {\r\n    getNotiLast (noti) {\r\n      let isDevice = false\r\n      for (const key in noti) {\r\n        if (key !== 'code' || key !== 'time') {\r\n          for (const sw of this.getSwitch) {\r\n            if (sw.id === Number(key)) {\r\n              isDevice = true\r\n              break\r\n            }\r\n          }\r\n          for (const ret of this.getRetractable) {\r\n            if (ret.id === Number(key)) {\r\n              isDevice = true\r\n              break\r\n            }\r\n          }\r\n          for (const ret of this.getNutrientSupply) {\r\n            if (ret.id === Number(key)) {\r\n              isDevice = true\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (isDevice) {\r\n        this.getAllDeviceHistory()\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getNotiLast: 'mqtt/getNotiMsgLast',\r\n      getFields: 'field/getFields',\r\n      getDevices: 'device/getDevices',\r\n      getAllFieldDevices: 'device/getAllFieldDevices',\r\n      getObservations: 'observation/getObservations'\r\n    }),\r\n    getCurrentDevice () {\r\n      let item = []\r\n      if (this.getAllFieldDevices && this.getAllFieldDevices[this.id]) {\r\n        item = this.getAllFieldDevices[this.id]\r\n      }\r\n\r\n      for (const device of item) {\r\n        this.$set(device, 'roll', true)\r\n      }\r\n\r\n      if (item.length > 0) {\r\n        this.historyDataMaker(item)\r\n        this.controlDataMaker(item)\r\n        this.getAllDeviceHistory()\r\n      }\r\n      return item\r\n    },\r\n\r\n    getNutrientSupply () {\r\n      let item = []\r\n      if (this.getDevices) {\r\n        item = this.getDevices.filter(device => {\r\n          return device.spec.Class === 'nutrient-supply'\r\n        })\r\n\r\n        for (const device of item) {\r\n          this.$set(device, 'roll', true)\r\n        }\r\n      }\r\n\r\n      if (item.length > 0) {\r\n        this.historyDataMaker(item)\r\n        this.controlDataMaker(item)\r\n        this.getAllDeviceHistory()\r\n      }\r\n      return item\r\n    },\r\n    getRetractable () {\r\n      if (this.getCurrentDevice) {\r\n        return this.getCurrentDevice.filter(device => {\r\n          return (\r\n            device.spec.Class === 'actuator' &&\r\n            device.spec.Type.startsWith('retractable')\r\n          )\r\n        })\r\n      }\r\n      return []\r\n    },\r\n    getSwitch () {\r\n      if (this.getCurrentDevice) {\r\n        return this.getCurrentDevice.filter(device => {\r\n          return (\r\n            device.spec.Class === 'actuator' &&\r\n            device.spec.Type.startsWith('switch')\r\n          )\r\n        })\r\n      }\r\n      return []\r\n    },\r\n    getField () {\r\n      return this.getFields.filter(field => field.id === Number(this.id))[0]\r\n    }\r\n  },\r\n  mounted () {\r\n    // this.getAllDeviceHistory()\r\n  },\r\n  methods: {\r\n    getFieldName (index, id) {\r\n      for (const field of this.getFields) {\r\n        if (field.id === id) {\r\n          return `${index + 1} - ${field.name}`\r\n        }\r\n      }\r\n    },\r\n    historyDataMaker (devices) {\r\n      for (const device of devices) {\r\n        if (!this.history.hasOwnProperty(device.id)) {\r\n          this.$set(this.history, device.id, {\r\n            requests: [],\r\n            states: [],\r\n            date: this.$date().format(new Date(), 'YYYY-MM-DD')\r\n          })\r\n        }\r\n      }\r\n    },\r\n    historyDateChg (deviceId, type) {\r\n      let date = new Date(this.history[deviceId].date)\r\n      if (type === 'prev') {\r\n        this.history[deviceId].date = this.$date().format(\r\n          date.setDate(date.getDate() - 1),\r\n          'YYYY-MM-DD'\r\n        )\r\n      } else {\r\n        this.history[deviceId].date = this.$date().format(\r\n          date.setDate(date.getDate() + 1),\r\n          'YYYY-MM-DD'\r\n        )\r\n      }\r\n      this.getDeviceHistory(deviceId, this.history[deviceId].date)\r\n    },\r\n    async getAllDeviceHistory () {\r\n      for (const key in this.history) {\r\n        await this.getDeviceHistory(key, this.history[key].date)\r\n      }\r\n    },\r\n    async getDeviceHistory (deivceId, date) {\r\n      const { data } = await this.axios.get(`device/history/${deivceId}`, {\r\n        params: {\r\n          date: this.$date().format(date, 'YYYY-MM-DD')\r\n        }\r\n      })\r\n\r\n      this.$set(this.history[deivceId], 'requests', data.requests)\r\n      this.$set(this.history[deivceId], 'states', data.states)\r\n    },\r\n    getObsData (data) {\r\n      if (data) {\r\n        if (data.unit === '상태') {\r\n          return this.statusCode[data.nvalue]\r\n        } else {\r\n          return `${data.nvalue} ${data.unit}`\r\n        }\r\n      } else {\r\n        return '---'\r\n      }\r\n    },\r\n    controlDataMaker (devices) {\r\n      devices.forEach(device => {\r\n        if (!this.controlData[device.id]) {\r\n          let data = {\r\n            level0: {},\r\n            level1: {},\r\n            level2: {}\r\n          }\r\n          if (\r\n            device.spec.Class === 'actuator' &&\r\n            device.spec.Type.startsWith('retractable')\r\n          ) {\r\n            if (device.spec.Type.split('/')[1] !== 'level0') {\r\n              data.level1.opentime = 0\r\n              data.level1.closetime = 0\r\n            }\r\n            if (device.spec.Type.split('/')[1] === 'level2') {\r\n              data.level2.position = 0\r\n              data.level2.opentime = 0\r\n              data.level2.closetime = 0\r\n            }\r\n          } else if (\r\n            device.spec.Class === 'actuator' &&\r\n            device.spec.Type.startsWith('switch')\r\n          ) {\r\n            if (device.spec.Type.split('/')[1] !== 'level0') {\r\n              data.level1.holdtime = 0\r\n            }\r\n            if (device.spec.Type.split('/')[1] === 'level2') {\r\n              data.level2.holdtime = 0\r\n              data.level2.ratio = 0\r\n            }\r\n          } else if (device.spec.Class === 'nutrient-supply') {\r\n            data.level0.control = 1\r\n            if (device.spec.Type.split('/')[1] === 'level1') {\r\n              data.level1.ec = 0\r\n              data.level1.ph = 0\r\n              data.level1.sec = 0\r\n              data.level1.startarea = ''\r\n              data.level1.stoparea = ''\r\n            }\r\n          }\r\n          this.$set(this.controlData, device.id, data)\r\n        }\r\n      })\r\n    },\r\n    controlChange (device, value) {\r\n      let result = this.mqtt.deivceControl(\r\n        device,\r\n        this.cmdCode.nutrient.control,\r\n        { control: value }\r\n      )\r\n\r\n      if (!result) {\r\n        this.$notify({\r\n          title: '실패',\r\n          message: '제어 명령은 5초에 한번씩 전송 가능 합니다',\r\n          type: 'error'\r\n        })\r\n      }\r\n    },\r\n    controlClick (device, type, control, level) {\r\n      if (type === 'nutrient-supply' && level !== undefined) {\r\n        if (\r\n          device.place.indexOf(this.controlData[device.id][level].startarea) ===\r\n            -1 ||\r\n          device.place.indexOf(this.controlData[device.id][level].stoparea) ===\r\n            -1\r\n        ) {\r\n          this.$notify({\r\n            title: '실패',\r\n            message: '관수 구역을 설정해 주세요',\r\n            type: 'error'\r\n          })\r\n          return\r\n        }\r\n        if (\r\n          Number(\r\n            device.place.indexOf(this.controlData[device.id][level].startarea)\r\n          ) +\r\n            1 >\r\n          Number(\r\n            device.place.indexOf(this.controlData[device.id][level].stoparea)\r\n          ) +\r\n            1\r\n        ) {\r\n          this.$notify({\r\n            title: '실패',\r\n            message: '관수 시작 구역을 낮은 번호로 입력 하세요',\r\n            type: 'error'\r\n          })\r\n          return\r\n        }\r\n      }\r\n\r\n      let result = this.mqtt.deivceControl(\r\n        device,\r\n        control,\r\n        this.controlData[device.id][level]\r\n      )\r\n      if (!result) {\r\n        this.$notify({\r\n          title: '실패',\r\n          message: '제어 명령은 5초에 한번씩 전송 가능 합니다',\r\n          type: 'error'\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n</style>\r\n"]}]}