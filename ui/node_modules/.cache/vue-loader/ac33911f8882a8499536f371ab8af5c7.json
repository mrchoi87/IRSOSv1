{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/chart/hgridVue.vue?vue&type=style&index=0&id=05b9663b&scoped=true&lang=css&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/chart/hgridVue.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nline {\n  stroke: lightgrey;\n  stroke-opacity: 0.2;\n  stroke-width: 1px;\n  shape-rendering: crispEdges;\n}\n",{"version":3,"sources":["hgridVue.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuHA;AACA;AACA;AACA;AACA;AACA","file":"hgridVue.vue","sourceRoot":"src/components/chart","sourcesContent":["<template>\n  <g id=\"grid-y\">\n    <template v-if=\"isGrid\">\n      <line\n        v-for=\"y in yTicks\"\n        :key=\"y\"\n        :x1=\"0\"\n        :y1=\"yValue(y)\"\n        :x2=\"width\"\n        :y2=\"yValue(y)\"\n        class=\"grid\"/>\n    </template>\n  </g>\n</template>\n<script>\nimport * as d3 from 'd3'\nexport default {\n  props: {\n    width: {\n      required: false,\n      type: Number,\n      default: 0\n    },\n    yScales: {\n      required: false,\n      type: Object,\n      default: Object\n    },\n    yAxisData: {\n      required: false,\n      type: Object,\n      default: Object\n    },\n    tickCount: {\n      required: false,\n      type: Number,\n      default: 5\n    },\n    marginAxis: {\n      required: false,\n      type: Number,\n      default: 40\n    },\n    isGrid: {\n      required: false,\n      type: Boolean,\n      default: true\n    }\n  },\n  data () {\n    return {}\n  },\n  computed: {\n    yTicks: function () {\n      if (this.yScale !== undefined) {\n        return this.yScale.ticks(this.tickCount)\n      }\n      return null\n    }\n  },\n  watch: {\n    yAxisData: function (val) {\n      this.refresh()\n    }\n  },\n  mounted () {\n    this.refresh()\n    window.addEventListener('resize', this.handleWindowResize)\n  },\n  beforeDestroy: function () {\n    window.removeEventListener('resize', this.handleWindowResize)\n  },\n  methods: {\n    handleWindowResize () {\n      var self = this\n      setTimeout(function () {\n        var index = 0\n        d3.select(self.$el).html('')\n        for (var id in self.yAxisData) {\n          d3\n            .select(self.$el)\n            .append('g')\n            .attr('class', 'axis axis--y')\n            .attr('id', id)\n            .attr('transform', 'translate(' + index * -self.marginAxis + ',0)')\n            .append('text')\n            .attr('transform', 'rotate(-90)')\n            .attr('x', -5)\n            .attr('y', 5)\n            .attr('dy', '0.71em')\n            .attr('fill', '#000')\n            .text(id)\n          index++\n        }\n        d3\n          .select(self.$el)\n          .selectAll('.axis--y')\n          .each(function () {\n            d3\n              .select(this)\n              .call(\n                d3.axisLeft(\n                  self.yAxisData[d3.select(this).attr('id')]['yScale']\n                )\n              )\n          })\n      }, 2)\n    },\n    yValue: function (y) {\n      return this.yScale(y)\n    },\n    refresh () {\n      this.handleWindowResize()\n    }\n  }\n}\n</script>\n\n<style scoped>\nline {\n  stroke: lightgrey;\n  stroke-opacity: 0.2;\n  stroke-width: 1px;\n  shape-rendering: crispEdges;\n}\n</style>\n"]}]}