{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/DaumPost.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/DaumPost.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nlet isLoading = false\nconst loadedResolves = []\nconst loadedRejects = []\n\nfunction loadScript () {\n  return new Promise((resolve, reject) => {\n    if (window.daum && window.daum.postcode) {\n      return resolve()\n    }\n    loadedResolves.push(resolve)\n    loadedRejects.push(reject)\n    if (isLoading) {\n      return\n    }\n    isLoading = true\n\n    const script = document.createElement('script')\n\n    if (location.protocol === 'https:') {\n      script.src =\n        'https://ssl.daumcdn.net/dmaps/map_js_init/postcode.v2.js?autoload=false'\n    } else {\n      script.src =\n        'http://dmaps.daum.net/map_js_init/postcode.v2.js?autoload=false'\n    }\n\n    script.async = true\n    script.charset = 'utf8'\n\n    const dom =\n      document.head ||\n      document.getElementsByTagName('head')[0] ||\n      document.body ||\n      document.getElementsByTagName('body')[0]\n\n    dom.appendChild(script)\n\n    script.onload = () => {\n      isLoading = false\n      loadedResolves.forEach(cb => cb())\n    }\n    script.onerror = () => {\n      isLoading = false\n      loadedRejects.forEach(cb => cb())\n    }\n  })\n}\nexport default {\n  props: {\n    q: {\n      type: String,\n      default: ''\n    },\n    animation: {\n      type: Boolean,\n      default: false\n    },\n    noAutoMapping: {\n      type: Boolean,\n      default: false\n    },\n    noShorthand: {\n      type: Boolean,\n      default: false\n    },\n    pleaseReadGuide: {\n      type: Number,\n      default: 0\n    },\n    pleaseReadGuideTimer: {\n      type: Number,\n      default: 1.5\n    },\n    maxSuggestItems: {\n      type: Number,\n      default: 10\n    },\n    showMoreHName: {\n      type: Boolean,\n      default: false\n    },\n    hideMapBtn: {\n      type: Boolean,\n      default: false\n    },\n    hideEngBtn: {\n      type: Boolean,\n      default: false\n    },\n    alwaysShowEngAddr: {\n      type: Boolean,\n      default: false\n    },\n    zonecodeOnly: {\n      type: Boolean,\n      default: false\n    },\n    theme: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      styleHeight: 0\n    }\n  },\n  mounted () {\n    loadScript()\n      .then(() => {\n        return new Promise(resolve => window.daum.postcode.load(resolve))\n      })\n      .then(() => {\n        new window.daum.Postcode({\n          width: '100%',\n          height: '100%',\n          animation: this.animation,\n          autoMapping: !this.noAutoMapping,\n          shorthand: !this.noShorthand,\n          pleaseReadGuide: this.pleaseReadGuide,\n          pleaseReadGuideTimer: this.pleaseReadGuideTimer,\n          maxSuggestItems: this.maxSuggestItems,\n          showMoreHName: this.showMoreHName,\n          hideMapBtn: this.hideMapBtn,\n          hideEngBtn: this.hideEngBtn,\n          alwaysShowEngAddr: this.alwaysShowEngAddr,\n          zonecodeOnly: this.zonecodeOnly,\n          theme: this.theme,\n          oncomplete: data => {\n            this.$emit('complete', data)\n          },\n          onresize: size => {\n            this.styleHeight = `${size.height}px`\n          }\n        }).embed(this.$refs.container, {\n          q: this.q,\n          autoClose: false\n        })\n      })\n  },\n  computed: {\n    styles () {\n      const styles = {}\n      styles.height = this.styleHeight\n      return styles\n    }\n  },\n  render (h) {\n    return h('div', { class: ['vue-daum-postcode'] }, [\n      h('div', {\n        class: ['vue-daum-postcode-container'],\n        ref: 'container',\n        style: this.styles\n      })\n    ])\n  }\n}\n",{"version":3,"sources":["DaumPost.vue"],"names":[],"mappingsfile":"DaumPost.vue","sourceRoot":"src/components","sourcesContent":["<script>\nlet isLoading = false\nconst loadedResolves = []\nconst loadedRejects = []\n\nfunction loadScript () {\n  return new Promise((resolve, reject) => {\n    if (window.daum && window.daum.postcode) {\n      return resolve()\n    }\n    loadedResolves.push(resolve)\n    loadedRejects.push(reject)\n    if (isLoading) {\n      return\n    }\n    isLoading = true\n\n    const script = document.createElement('script')\n\n    if (location.protocol === 'https:') {\n      script.src =\n        'https://ssl.daumcdn.net/dmaps/map_js_init/postcode.v2.js?autoload=false'\n    } else {\n      script.src =\n        'http://dmaps.daum.net/map_js_init/postcode.v2.js?autoload=false'\n    }\n\n    script.async = true\n    script.charset = 'utf8'\n\n    const dom =\n      document.head ||\n      document.getElementsByTagName('head')[0] ||\n      document.body ||\n      document.getElementsByTagName('body')[0]\n\n    dom.appendChild(script)\n\n    script.onload = () => {\n      isLoading = false\n      loadedResolves.forEach(cb => cb())\n    }\n    script.onerror = () => {\n      isLoading = false\n      loadedRejects.forEach(cb => cb())\n    }\n  })\n}\nexport default {\n  props: {\n    q: {\n      type: String,\n      default: ''\n    },\n    animation: {\n      type: Boolean,\n      default: false\n    },\n    noAutoMapping: {\n      type: Boolean,\n      default: false\n    },\n    noShorthand: {\n      type: Boolean,\n      default: false\n    },\n    pleaseReadGuide: {\n      type: Number,\n      default: 0\n    },\n    pleaseReadGuideTimer: {\n      type: Number,\n      default: 1.5\n    },\n    maxSuggestItems: {\n      type: Number,\n      default: 10\n    },\n    showMoreHName: {\n      type: Boolean,\n      default: false\n    },\n    hideMapBtn: {\n      type: Boolean,\n      default: false\n    },\n    hideEngBtn: {\n      type: Boolean,\n      default: false\n    },\n    alwaysShowEngAddr: {\n      type: Boolean,\n      default: false\n    },\n    zonecodeOnly: {\n      type: Boolean,\n      default: false\n    },\n    theme: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      styleHeight: 0\n    }\n  },\n  mounted () {\n    loadScript()\n      .then(() => {\n        return new Promise(resolve => window.daum.postcode.load(resolve))\n      })\n      .then(() => {\n        new window.daum.Postcode({\n          width: '100%',\n          height: '100%',\n          animation: this.animation,\n          autoMapping: !this.noAutoMapping,\n          shorthand: !this.noShorthand,\n          pleaseReadGuide: this.pleaseReadGuide,\n          pleaseReadGuideTimer: this.pleaseReadGuideTimer,\n          maxSuggestItems: this.maxSuggestItems,\n          showMoreHName: this.showMoreHName,\n          hideMapBtn: this.hideMapBtn,\n          hideEngBtn: this.hideEngBtn,\n          alwaysShowEngAddr: this.alwaysShowEngAddr,\n          zonecodeOnly: this.zonecodeOnly,\n          theme: this.theme,\n          oncomplete: data => {\n            this.$emit('complete', data)\n          },\n          onresize: size => {\n            this.styleHeight = `${size.height}px`\n          }\n        }).embed(this.$refs.container, {\n          q: this.q,\n          autoClose: false\n        })\n      })\n  },\n  computed: {\n    styles () {\n      const styles = {}\n      styles.height = this.styleHeight\n      return styles\n    }\n  },\n  render (h) {\n    return h('div', { class: ['vue-daum-postcode'] }, [\n      h('div', {\n        class: ['vue-daum-postcode-container'],\n        ref: 'container',\n        style: this.styles\n      })\n    ])\n  }\n}\n</script>\n"]}]}