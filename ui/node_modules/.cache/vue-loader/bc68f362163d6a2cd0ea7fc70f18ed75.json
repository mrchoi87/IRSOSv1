{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/rule/select.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/rule/select.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nexport default {\n  props: ['complateFn', 'fieldId'],\n  data () {\n    return {\n      ruleList: [],\n      selectRule: {},\n      ruleDialogVisible: false,\n      confirmDialogVisible: false\n    }\n  },\n  computed: {\n    ...mapGetters({\n      getFields: 'field/getFields'\n    }),\n    getRule () {\n      if (Number(this.fieldId) === 0) {\n        return this.ruleList.filter(\n          item => item.constraints.target === 'farm' && item.autoapplying === 0\n        )\n      } else {\n        return this.ruleList.filter(\n          item => item.constraints.target === 'field' && item.autoapplying === 0\n        )\n      }\n    }\n  },\n  methods: {\n    async addRule () {\n      try {\n        if (this.selectRule.constraints.data) {\n          this.selectRule.constraints.data.forEach(element => {\n            element.dataid = ''\n          })\n        }\n\n        if (this.selectRule.constraints.devices) {\n          this.selectRule.constraints.devices.forEach(element => {\n            element.deviceid = ''\n          })\n        }\n\n        const { data } = await this.axios.post('rule/applied', {\n          rule: this.selectRule,\n          fieldId: this.fieldId\n        })\n        this.$notify({\n          title: '성공',\n          message: '룰을 추가 하였습니다.',\n          type: 'success'\n        })\n\n        this.selectRule = {}\n        this.confirmDialogVisible = false\n        this.ruleDialogVisible = false\n\n        this.complateFn(data.id)\n      } catch (error) {\n        console.log(error)\n      }\n    },\n    ruleSelect (rule) {\n      console.log(rule)\n      this.selectRule = this._.cloneDeep(rule)\n\n      if (this.selectRule.constraints.target === 'farm') {\n        this.selectField = 0\n      }\n\n      this.$confirm('선택하신 룰을 추가 하시겠습니까?', '확인', {\n        type: 'info'\n      })\n        .then(async _ => {\n          this.addRule()\n        })\n        .catch(_ => {})\n\n      // this.confirmDialogVisible = true\n    },\n    showRuleDialog () {\n      this.ruleDialogVisible = true\n    },\n    async getRuleTemplate () {\n      try {\n        const { data } = await this.axios.get('rule/template')\n        this.ruleList = data\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  },\n  mounted () {\n    this.getRuleTemplate()\n  }\n}\n",{"version":3,"sources":["select.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"select.vue","sourceRoot":"src/components/rule","sourcesContent":["<template>\n  <el-dialog title=\"작동규칙 추가\" :visible.sync=\"ruleDialogVisible\" width=\"40%\">\n    <h5>작동규칙 항목을 선택 하세요</h5>\n    <el-table\n      stripe\n      @row-click=\"ruleSelect\"\n      :data=\"getRule\"\n      style=\"width: 100%\"\n      :default-sort=\"{prop: 'groupname', order: 'ascending'}\"\n    >\n      <el-table-column prop=\"groupname\" label=\"그룹\" width=\"180\" sortable align=\"center\"></el-table-column>\n      <el-table-column prop=\"name\" label=\"이름\" align=\"center\"></el-table-column>\n    </el-table>\n\n    <!-- <el-row :gutter=\"20\" class=\"mt-4\">\n      <template v-for=\"rule in getRule\">\n        <el-col :span=\"8\" :key=\"rule.id\">\n          <el-card class=\"box-card\" shadow=\"hover\" style=\"cursor: pointer;\">\n            <div slot=\"header\" class=\"clearfix p-15\" @click=\"ruleSelect(rule)\">\n              <span>{{rule.name}}</span>\n            </div>\n            <div @click=\"ruleSelect(rule)\" class=\"w-100 h-100 p-15\">\n              <div>그룹 : {{rule.groupname}}</div>\n            </div>\n          </el-card>\n        </el-col>\n      </template>\n    </el-row> -->\n    <el-dialog title=\"확인\" :visible.sync=\"confirmDialogVisible\" width=\"30%\" append-to-body>\n      <span>선택하신 룰을 추가 하시겠습니까?</span>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"confirmDialogVisible = false\">취소</el-button>\n        <el-button type=\"primary\" @click=\"addRule\">추가</el-button>\n      </span>\n    </el-dialog>\n  </el-dialog>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nexport default {\n  props: ['complateFn', 'fieldId'],\n  data () {\n    return {\n      ruleList: [],\n      selectRule: {},\n      ruleDialogVisible: false,\n      confirmDialogVisible: false\n    }\n  },\n  computed: {\n    ...mapGetters({\n      getFields: 'field/getFields'\n    }),\n    getRule () {\n      if (Number(this.fieldId) === 0) {\n        return this.ruleList.filter(\n          item => item.constraints.target === 'farm' && item.autoapplying === 0\n        )\n      } else {\n        return this.ruleList.filter(\n          item => item.constraints.target === 'field' && item.autoapplying === 0\n        )\n      }\n    }\n  },\n  methods: {\n    async addRule () {\n      try {\n        if (this.selectRule.constraints.data) {\n          this.selectRule.constraints.data.forEach(element => {\n            element.dataid = ''\n          })\n        }\n\n        if (this.selectRule.constraints.devices) {\n          this.selectRule.constraints.devices.forEach(element => {\n            element.deviceid = ''\n          })\n        }\n\n        const { data } = await this.axios.post('rule/applied', {\n          rule: this.selectRule,\n          fieldId: this.fieldId\n        })\n        this.$notify({\n          title: '성공',\n          message: '룰을 추가 하였습니다.',\n          type: 'success'\n        })\n\n        this.selectRule = {}\n        this.confirmDialogVisible = false\n        this.ruleDialogVisible = false\n\n        this.complateFn(data.id)\n      } catch (error) {\n        console.log(error)\n      }\n    },\n    ruleSelect (rule) {\n      console.log(rule)\n      this.selectRule = this._.cloneDeep(rule)\n\n      if (this.selectRule.constraints.target === 'farm') {\n        this.selectField = 0\n      }\n\n      this.$confirm('선택하신 룰을 추가 하시겠습니까?', '확인', {\n        type: 'info'\n      })\n        .then(async _ => {\n          this.addRule()\n        })\n        .catch(_ => {})\n\n      // this.confirmDialogVisible = true\n    },\n    showRuleDialog () {\n      this.ruleDialogVisible = true\n    },\n    async getRuleTemplate () {\n      try {\n        const { data } = await this.axios.get('rule/template')\n        this.ruleList = data\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  },\n  mounted () {\n    this.getRuleTemplate()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-col {\n  margin-bottom: 20px;\n}\n</style>\n"]}]}