{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/chart/circleTextVue.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/chart/circleTextVue.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as d3 from 'd3'\nimport { statusCode } from '@/constants/config'\nexport default {\n  props: {\n    deviceId: Number,\n    index: {\n      required: false,\n      type: Number,\n      default: 0\n    },\n    xScale: {\n      required: false,\n      type: Function,\n      default: Function\n    },\n    yScale: {\n      required: false,\n      type: Function,\n      default: Function\n    },\n    xValue: {\n      required: false,\n      type: Number,\n      default: 0\n    },\n    yValue: {\n      required: false,\n      type: Number,\n      default: 0\n    },\n    opacity: {\n      required: false,\n      type: Number,\n      default: 0\n    },\n    unit: {\n      required: false,\n      type: String,\n      default: String\n    }\n  },\n  data () {\n    return {\n      statusCode: statusCode\n    }\n  },\n  methods: {\n    color () {\n      return d3.schemeCategory10[this.index % 10]\n    },\n    x (x) {\n      return x\n      /* return this.xScale(this.xScaleFunction(x)) */\n    },\n    y (y) {\n      return y\n      /* return this.yScale(y) */\n    }\n  }\n}\n",{"version":3,"sources":["circleTextVue.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"circleTextVue.vue","sourceRoot":"src/components/chart","sourcesContent":["<template>\n  <g>\n    <circle\n      :style=\"{opacity:opacity ,stroke:color()}\"\n      :cx=\"xValue\"\n      :cy=\"yValue\"\n      r=\"8\"\n      class=\"circle\"\n    />\n    <text\n      :style=\"{opacity:opacity, fill:color()}\"\n      :x=\"xValue+10\"\n      :y=\"yValue+4\"\n    >{{ deviceId ? deviceId.toString().endsWith('00') ? statusCode[yScale.invert(yValue).toFixed(0)]  : yScale.invert(yValue).toFixed(1) + unit : ''}}</text>\n\n    <!-- element.id.toString().endsWith('00') -->\n  </g>\n</template>\n<script>\nimport * as d3 from 'd3'\nimport { statusCode } from '@/constants/config'\nexport default {\n  props: {\n    deviceId: Number,\n    index: {\n      required: false,\n      type: Number,\n      default: 0\n    },\n    xScale: {\n      required: false,\n      type: Function,\n      default: Function\n    },\n    yScale: {\n      required: false,\n      type: Function,\n      default: Function\n    },\n    xValue: {\n      required: false,\n      type: Number,\n      default: 0\n    },\n    yValue: {\n      required: false,\n      type: Number,\n      default: 0\n    },\n    opacity: {\n      required: false,\n      type: Number,\n      default: 0\n    },\n    unit: {\n      required: false,\n      type: String,\n      default: String\n    }\n  },\n  data () {\n    return {\n      statusCode: statusCode\n    }\n  },\n  methods: {\n    color () {\n      return d3.schemeCategory10[this.index % 10]\n    },\n    x (x) {\n      return x\n      /* return this.xScale(this.xScaleFunction(x)) */\n    },\n    y (y) {\n      return y\n      /* return this.yScale(y) */\n    }\n  }\n}\n</script>\n\n<style scoped>\n.circle {\n  fill: none;\n  stroke-width: 1px;\n  stroke: rgb(0, 0, 0);\n}\n</style>\n"]}]}