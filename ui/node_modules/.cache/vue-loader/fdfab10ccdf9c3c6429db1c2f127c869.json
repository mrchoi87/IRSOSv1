{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/views/app/page/farmInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/views/app/page/farmInfo.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { daumMapApiKey } from '@/constants/config'\r\nimport VueDaumMap from 'vue-daum-map'\r\nimport { mapGetters } from 'vuex'\r\nimport FarmInfo from '@/components/FarmInfo'\r\n\r\nexport default {\r\n  components: {\r\n    FarmInfo,\r\n    VueDaumMap\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getFields: 'field/getFields'\r\n    })\r\n  },\r\n  data () {\r\n    return {\r\n      appKey: daumMapApiKey,\r\n      center: { lat: 33.450701, lng: 126.570667 },\r\n      level: 3,\r\n      mapTypeId: VueDaumMap.MapTypeId.NORMAL,\r\n      libraries: [],\r\n      mapObject: null,\r\n      mapPlace: null,\r\n      marker: null\r\n    }\r\n  },\r\n  mounted () {\r\n    window.addEventListener('resize', this.mapRelayout)\r\n  },\r\n  destroyed () {\r\n    window.removeEventListener('resize', this.mapRelayout)\r\n  },\r\n  methods: {\r\n    mapRelayout () {\r\n      this.mapObject.relayout()\r\n    },\r\n    onLoad (map) {\r\n      this.mapObject = map\r\n\r\n      // eslint-disable-next-line no-undef\r\n      this.mapPlace = new daum.maps.services.Places()\r\n\r\n      // eslint-disable-next-line no-undef\r\n      let bounds = new daum.maps.LatLngBounds()\r\n\r\n      this.getFields.forEach(element => {\r\n        if (element.fieldtype !== 'local') {\r\n          // eslint-disable-next-line\r\n          var latlng = new daum.maps.LatLng(\r\n            element.data.lat.value,\r\n            element.data.lng.value\r\n          )\r\n\r\n          if (latlng.getLat() && latlng.getLng()) {\r\n            // eslint-disable-next-line\r\n            this.marker = new daum.maps.Marker({\r\n              position: latlng\r\n            })\r\n            this.marker.setMap(this.mapObject)\r\n            this.marker.setDraggable(true)\r\n\r\n            let content = `<div class=\"el-card is-always-shadow mb-5 p-5\"> <span class=\"title\">${element.name}</span></div>`\r\n\r\n            // eslint-disable-next-line\r\n            new daum.maps.CustomOverlay({\r\n              map: this.mapObject,\r\n              position: latlng,\r\n              content: content,\r\n              yAnchor: 1\r\n            })\r\n\r\n            bounds.extend(latlng)\r\n            this.mapObject.setBounds(bounds)\r\n          }\r\n        }\r\n      })\r\n    },\r\n    done () {\r\n      this.$notify({\r\n        title: '성공',\r\n        message: '농장 정보 수정 하였습니다.',\r\n        type: 'success'\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["farmInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"farmInfo.vue","sourceRoot":"src/views/app/page","sourcesContent":["<template>\r\n  <div class=\"col-xxs-12 mx-auto my-auto\" style=\"padding:15px\">\r\n    <h4 class=\"c-grey-900 mB-30\">농장 정보</h4>\r\n    <el-card>\r\n      <el-row>\r\n        <el-col :span=\"16\">\r\n          <vue-daum-map\r\n            :appKey=\"appKey\"\r\n            :libraries=\"['services']\"\r\n            :center.sync=\"center\"\r\n            :level.sync=\"level\"\r\n            :mapTypeId=\"mapTypeId\"\r\n            @load=\"onLoad\"\r\n            style=\"height: 600px;\"\r\n          ></vue-daum-map>\r\n        </el-col>\r\n        <el-col :span=\"8\">\r\n          <div class=\"ta-r\">\r\n            <!-- <div class=\"invoice__invoice-detail mt-6\">\r\n              <h6 class=\"el-icon-user\">&nbsp;&nbsp;농장주</h6>\r\n              <h5 class=\"c-grey-600\">{{farmItem.name}}</h5>\r\n              <h6 class=\"el-icon-phone-outline\">&nbsp;&nbsp;연락처</h6>\r\n              <h5 class=\"c-grey-600\">{{farmItem.info.telephone}}</h5>\r\n              <h6 class=\"el-icon-map-location\">&nbsp;&nbsp;주소</h6>\r\n              <h5 class=\"c-grey-600\">{{farmItem.address}}</h5>\r\n            </div>-->\r\n          </div>\r\n          <FarmInfo class=\"ml-4\" style=\"height:600px;overflow-y: auto;\" @done=\"done\" />\r\n        </el-col>\r\n      </el-row>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { daumMapApiKey } from '@/constants/config'\r\nimport VueDaumMap from 'vue-daum-map'\r\nimport { mapGetters } from 'vuex'\r\nimport FarmInfo from '@/components/FarmInfo'\r\n\r\nexport default {\r\n  components: {\r\n    FarmInfo,\r\n    VueDaumMap\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getFields: 'field/getFields'\r\n    })\r\n  },\r\n  data () {\r\n    return {\r\n      appKey: daumMapApiKey,\r\n      center: { lat: 33.450701, lng: 126.570667 },\r\n      level: 3,\r\n      mapTypeId: VueDaumMap.MapTypeId.NORMAL,\r\n      libraries: [],\r\n      mapObject: null,\r\n      mapPlace: null,\r\n      marker: null\r\n    }\r\n  },\r\n  mounted () {\r\n    window.addEventListener('resize', this.mapRelayout)\r\n  },\r\n  destroyed () {\r\n    window.removeEventListener('resize', this.mapRelayout)\r\n  },\r\n  methods: {\r\n    mapRelayout () {\r\n      this.mapObject.relayout()\r\n    },\r\n    onLoad (map) {\r\n      this.mapObject = map\r\n\r\n      // eslint-disable-next-line no-undef\r\n      this.mapPlace = new daum.maps.services.Places()\r\n\r\n      // eslint-disable-next-line no-undef\r\n      let bounds = new daum.maps.LatLngBounds()\r\n\r\n      this.getFields.forEach(element => {\r\n        if (element.fieldtype !== 'local') {\r\n          // eslint-disable-next-line\r\n          var latlng = new daum.maps.LatLng(\r\n            element.data.lat.value,\r\n            element.data.lng.value\r\n          )\r\n\r\n          if (latlng.getLat() && latlng.getLng()) {\r\n            // eslint-disable-next-line\r\n            this.marker = new daum.maps.Marker({\r\n              position: latlng\r\n            })\r\n            this.marker.setMap(this.mapObject)\r\n            this.marker.setDraggable(true)\r\n\r\n            let content = `<div class=\"el-card is-always-shadow mb-5 p-5\"> <span class=\"title\">${element.name}</span></div>`\r\n\r\n            // eslint-disable-next-line\r\n            new daum.maps.CustomOverlay({\r\n              map: this.mapObject,\r\n              position: latlng,\r\n              content: content,\r\n              yAnchor: 1\r\n            })\r\n\r\n            bounds.extend(latlng)\r\n            this.mapObject.setBounds(bounds)\r\n          }\r\n        }\r\n      })\r\n    },\r\n    done () {\r\n      this.$notify({\r\n        title: '성공',\r\n        message: '농장 정보 수정 하였습니다.',\r\n        type: 'success'\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n</style>\r\n"]}]}