{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/App.vue","mtime":1607499348977},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nexport default {\n  data () {\n    return {\n      notiDeviceTry: null\n    }\n  },\n  watch: {\n    getNotiLast (noti) {\n      if (noti.code === 102) {\n        this.$snotify.success('새 장비가 검색 되었습니다.')\n      } else if (noti.code === 108) {\n        if (this.notiDeviceTry !== null) {\n          this.$snotify.remove(this.notiDeviceTry.id)\n          this.notiDeviceTry = null\n        }\n        this.deviceSearchNoti()\n      }\n    },\n    'getTryReq.deviceSearch' (newValue, oldValue) {\n      this.deviceSearchNoti()\n    },\n    getOpidResLast (opid) {\n      let msg = ''\n      switch (opid.res) {\n        case 0:\n          msg += '명령을 전송 완료 하였습니다.'\n          this.$snotify.success(msg, opid.msg)\n          break\n        case 1:\n          msg += '명령이 실패 하였습니다.'\n          this.$snotify.error(msg)\n          break\n        case 101:\n          msg += '장비가 없습니다.'\n          this.$snotify.warning(msg)\n          break\n        case 102:\n          msg += '명령이 올바르지 않습니다'\n          this.$snotify.warning(msg)\n          break\n        case 103:\n          msg += '키워드가 올바르지 않습니다.'\n          this.$snotify.warning(msg)\n          break\n        case 104:\n          msg += '명령 전송 실패 하였습니다.'\n          this.$snotify.error(msg)\n          break\n      }\n    },\n    $route (to, from) {\n      this.deviceSearchNoti()\n    }\n  },\n  computed: {\n    ...mapGetters({\n      getNotiLast: 'mqtt/getNotiMsgLast',\n      getTryReq: 'mqtt/getTryReq',\n      getOpidResLast: 'mqtt/getOpidResLast'\n    })\n  },\n  methods: {\n    deviceSearchNoti () {\n      if (this.getTryReq.deviceSearch) {\n        if (this.getTryReq.progress === 1) {\n          if (this.$route.path === '/device/search') {\n            if (this.notiDeviceTry !== null) {\n              this.$snotify.remove(this.notiDeviceTry.id)\n            }\n            this.notiDeviceTry = null\n          } else if (this.$route.path !== '/device/search') {\n            if (this.notiDeviceTry === null) {\n              this.notiDeviceTry = this.$snotify.async(\n                '장비 검색중 입니다',\n                'Device',\n                () => new Promise((resolve, reject) => {}),\n                {\n                  closeOnClick: true\n                }\n              )\n              this.notiDeviceTry.on('click', toast => {\n                this.notiDeviceTry = null\n                this.$snotify.remove(toast.id)\n                this.$router.push(`/device/search`)\n              })\n            }\n          }\n        } else if (this.getTryReq.progress === 2) {\n          if (this.$route.path === '/device/search') {\n            if (this.notiDeviceTry !== null) {\n              this.$snotify.remove(this.notiDeviceTry.id)\n            }\n            this.notiDeviceTry = null\n          } else if (this.$route.path !== '/device/search') {\n            if (this.notiDeviceTry === null) {\n              this.notiDeviceTry = this.$snotify.confirm(\n                '장비 검색이 완료 되었습니다',\n                'Device',\n                {\n                  closeOnClick: false,\n                  buttons: [\n                    {\n                      text: '이동',\n                      action: toast => {\n                        this.$snotify.remove(toast.id)\n                        this.$router.push(`/device/search`)\n                      },\n                      bold: true\n                    }\n                  ]\n                }\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappingsfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div style=\"height:100%\">\n    <vue-snotify></vue-snotify>\n    <router-view />\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nexport default {\n  data () {\n    return {\n      notiDeviceTry: null\n    }\n  },\n  watch: {\n    getNotiLast (noti) {\n      if (noti.code === 102) {\n        this.$snotify.success('새 장비가 검색 되었습니다.')\n      } else if (noti.code === 108) {\n        if (this.notiDeviceTry !== null) {\n          this.$snotify.remove(this.notiDeviceTry.id)\n          this.notiDeviceTry = null\n        }\n        this.deviceSearchNoti()\n      }\n    },\n    'getTryReq.deviceSearch' (newValue, oldValue) {\n      this.deviceSearchNoti()\n    },\n    getOpidResLast (opid) {\n      let msg = ''\n      switch (opid.res) {\n        case 0:\n          msg += '명령을 전송 완료 하였습니다.'\n          this.$snotify.success(msg, opid.msg)\n          break\n        case 1:\n          msg += '명령이 실패 하였습니다.'\n          this.$snotify.error(msg)\n          break\n        case 101:\n          msg += '장비가 없습니다.'\n          this.$snotify.warning(msg)\n          break\n        case 102:\n          msg += '명령이 올바르지 않습니다'\n          this.$snotify.warning(msg)\n          break\n        case 103:\n          msg += '키워드가 올바르지 않습니다.'\n          this.$snotify.warning(msg)\n          break\n        case 104:\n          msg += '명령 전송 실패 하였습니다.'\n          this.$snotify.error(msg)\n          break\n      }\n    },\n    $route (to, from) {\n      this.deviceSearchNoti()\n    }\n  },\n  computed: {\n    ...mapGetters({\n      getNotiLast: 'mqtt/getNotiMsgLast',\n      getTryReq: 'mqtt/getTryReq',\n      getOpidResLast: 'mqtt/getOpidResLast'\n    })\n  },\n  methods: {\n    deviceSearchNoti () {\n      if (this.getTryReq.deviceSearch) {\n        if (this.getTryReq.progress === 1) {\n          if (this.$route.path === '/device/search') {\n            if (this.notiDeviceTry !== null) {\n              this.$snotify.remove(this.notiDeviceTry.id)\n            }\n            this.notiDeviceTry = null\n          } else if (this.$route.path !== '/device/search') {\n            if (this.notiDeviceTry === null) {\n              this.notiDeviceTry = this.$snotify.async(\n                '장비 검색중 입니다',\n                'Device',\n                () => new Promise((resolve, reject) => {}),\n                {\n                  closeOnClick: true\n                }\n              )\n              this.notiDeviceTry.on('click', toast => {\n                this.notiDeviceTry = null\n                this.$snotify.remove(toast.id)\n                this.$router.push(`/device/search`)\n              })\n            }\n          }\n        } else if (this.getTryReq.progress === 2) {\n          if (this.$route.path === '/device/search') {\n            if (this.notiDeviceTry !== null) {\n              this.$snotify.remove(this.notiDeviceTry.id)\n            }\n            this.notiDeviceTry = null\n          } else if (this.$route.path !== '/device/search') {\n            if (this.notiDeviceTry === null) {\n              this.notiDeviceTry = this.$snotify.confirm(\n                '장비 검색이 완료 되었습니다',\n                'Device',\n                {\n                  closeOnClick: false,\n                  buttons: [\n                    {\n                      text: '이동',\n                      action: toast => {\n                        this.$snotify.remove(toast.id)\n                        this.$router.push(`/device/search`)\n                      },\n                      bold: true\n                    }\n                  ]\n                }\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n}\n</script>\n<style>\n.row {\n  margin-right: 0px !important;\n  margin-left: 0px !important;\n}\n/* 애니메이션 진입 및 진출은 다른 지속 시간 및  */\n/* 타이밍 기능을 사용할 수 있습니다. */\n.slide-fade-enter-active {\n  transition: all 0.5s ease;\n}\n.slide-fade-leave-active {\n  transition: all 0.3s cubic-bezier(1, 0.5, 0.8, 1);\n}\n.slide-fade-enter, .slide-fade-leave-to\n/* .slide-fade-leave-active below version 2.1.8 */ {\n  transform: translateX(100px);\n  opacity: 0;\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.5s;\n}\n.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\n  opacity: 0;\n}\n</style>\n"]}]}