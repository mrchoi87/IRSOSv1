{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/views/app/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/views/app/index.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapActions, mapGetters } from 'vuex'\r\nimport Sidebar from '@/components/layout/Sidebar'\r\nimport Top from '@/components/layout/Top'\r\nimport TopDashboard from '@/components/layout/TopDashboard'\r\nimport Footer from '@/components/layout/Footer'\r\nexport default {\r\n  components: {\r\n    Sidebar,\r\n    TopDashboard,\r\n    Top,\r\n    Footer\r\n  },\r\n  data () {\r\n    return {}\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getCvtgate: 'cvtgate/getCvtgate',\r\n      getDeviceCouple: 'cvtgate/getDeviceCouple'\r\n    }),\r\n    isDashboard () {\r\n      return this.$route.path === '/dashboard'\r\n    }\r\n  },\r\n  watch: {\r\n    getDeviceCouple (newValue, oldValue) {\r\n      if (this.mqtt.isConnected()) {\r\n        this.mqtt.mqttSubscribe()\r\n      } else {\r\n        this.mqtt.mqttRefresh(window.location.hostname)\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchDataField: 'field/fetchDataField',\r\n      fetchDataObservations: 'observation/fetchDataObservations',\r\n      fetchDataFarm: 'farm/fetchDataFarm',\r\n      fetchDataCvtgate: 'cvtgate/fetchDataCvtgate',\r\n      fetchDataCoupleList: 'cvtgate/fetchDataCoupleList',\r\n      fetchDataIndex: 'dataIndex/fetchDataIndex'\r\n    })\r\n  },\r\n  mounted () {\r\n    this.fetchDataCvtgate()\r\n    this.fetchDataCoupleList()\r\n    this.fetchDataFarm()\r\n    this.fetchDataField()\r\n    this.fetchDataObservations()\r\n    this.fetchDataIndex()\r\n  }\r\n}\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/app","sourcesContent":["<template>\r\n  <div style=\"height:100%\">\r\n    <template v-if=\"isDashboard\">\r\n      <Sidebar hidden/>\r\n      <TopDashboard style=\"width: 100%;top: 0px;\"/>\r\n      <transition name=\"slide-fade\">\r\n        <router-view />\r\n      </transition>\r\n    </template>\r\n    <template v-else>\r\n      <Sidebar />\r\n      <div class=\"page-container\">\r\n        <Top />\r\n        <main class=\"main-content bgc-grey-100\">\r\n          <div class=\"container-fluid\" style=\"padding-left: 0px;padding-right: 0px;\">\r\n            <transition name=\"slide-fade\">\r\n              <router-view />\r\n            </transition>\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex'\r\nimport Sidebar from '@/components/layout/Sidebar'\r\nimport Top from '@/components/layout/Top'\r\nimport TopDashboard from '@/components/layout/TopDashboard'\r\nimport Footer from '@/components/layout/Footer'\r\nexport default {\r\n  components: {\r\n    Sidebar,\r\n    TopDashboard,\r\n    Top,\r\n    Footer\r\n  },\r\n  data () {\r\n    return {}\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getCvtgate: 'cvtgate/getCvtgate',\r\n      getDeviceCouple: 'cvtgate/getDeviceCouple'\r\n    }),\r\n    isDashboard () {\r\n      return this.$route.path === '/dashboard'\r\n    }\r\n  },\r\n  watch: {\r\n    getDeviceCouple (newValue, oldValue) {\r\n      if (this.mqtt.isConnected()) {\r\n        this.mqtt.mqttSubscribe()\r\n      } else {\r\n        this.mqtt.mqttRefresh(window.location.hostname)\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchDataField: 'field/fetchDataField',\r\n      fetchDataObservations: 'observation/fetchDataObservations',\r\n      fetchDataFarm: 'farm/fetchDataFarm',\r\n      fetchDataCvtgate: 'cvtgate/fetchDataCvtgate',\r\n      fetchDataCoupleList: 'cvtgate/fetchDataCoupleList',\r\n      fetchDataIndex: 'dataIndex/fetchDataIndex'\r\n    })\r\n  },\r\n  mounted () {\r\n    this.fetchDataCvtgate()\r\n    this.fetchDataCoupleList()\r\n    this.fetchDataFarm()\r\n    this.fetchDataField()\r\n    this.fetchDataObservations()\r\n    this.fetchDataIndex()\r\n  }\r\n}\r\n</script>\r\n"]}]}