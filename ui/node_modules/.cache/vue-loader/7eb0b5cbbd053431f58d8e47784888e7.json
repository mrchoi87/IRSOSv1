{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/Weather.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/Weather.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport day from '@/assets/img/weather/day.svg'\nimport night from '@/assets/img/weather/night.svg'\nimport cloudyDay from '@/assets/img/weather/cloudy-day-1.svg'\nimport cloudyNight from '@/assets/img/weather/cloudy-night-1.svg'\nimport cloudyDay3 from '@/assets/img/weather/cloudy-day-3.svg'\nimport cloudyNight3 from '@/assets/img/weather/cloudy-night-3.svg'\nimport cloudy from '@/assets/img/weather/cloudy.svg'\nimport rainy3 from '@/assets/img/weather/rainy-3.svg'\nimport rainy4 from '@/assets/img/weather/rainy-4.svg'\nimport snowy5 from '@/assets/img/weather/snowy-5.svg'\nimport thunder from '@/assets/img/weather/thunder.svg'\n\nimport { openweathermapKey } from '@/constants/config'\nimport { mapGetters } from 'vuex'\nexport default {\n  name: 'Weather',\n  data () {\n    return {\n      weatherForecast: null,\n      iconMap: {\n        '01d': day,\n        '01n': night,\n        '02d': cloudyDay,\n        '02n': cloudyNight,\n        '03d': cloudy,\n        '03n': cloudy,\n        '04d': cloudyDay3,\n        '04n': cloudyNight3,\n        '09d': rainy3,\n        '09n': rainy3,\n        '10d': rainy4,\n        '10n': rainy4,\n        '11d': thunder,\n        '11n': thunder,\n        '13d': snowy5,\n        '13n': snowy5,\n        '50d': cloudy,\n        '50n': cloudy\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      getFarm: 'farm/getFarm'\n    })\n  },\n  watch: {\n    'getFarm.info.gps' (newValue, oldValue) {\n      this.getWeather(this.getFarm.info.gps)\n    }\n  },\n  mounted () {\n    if (this.getFarm.info) {\n      this.getWeather(this.getFarm.info.gps)\n    }\n  },\n  methods: {\n    getIcon (icon) {\n      return this.iconMap[icon]\n    },\n    async getWeather (payload) {\n      try {\n        const { data } = await this.axios.get(\n          `https://api.openweathermap.org/data/2.5/forecast`,\n          {\n            params: {\n              lang: 'kr',\n              lat: payload.split(',')[0],\n              lon: payload.split(',')[1],\n              cnt: 6,\n              units: 'metric',\n              appid: openweathermapKey\n            }\n          }\n        )\n        this.weatherForecast = data\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n}\n",{"version":3,"sources":["Weather.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Weather.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <b-card>\n    <div v-if=\"weatherForecast\" class=\"mb-4 ta-r\">{{getFarm.info.address}}</div>\n    <transition name=\"slide-fade\">\n      <b-row v-if=\"weatherForecast\">\n        <b-col v-for=\"item in weatherForecast.list\" :key=\"item.id\" style=\"text-align: center;\">\n          <img :src=\"getIcon(item.weather[0].icon)\" style=\"width:80px\"/>\n          <div>{{$date().format(item.dt*1000, 'DD일 a h시',{locale: $date().ko})}}</div>\n          <div class=\"mt-1\">온도: {{item.main.temp}}°c</div>\n          <div>습도: {{item.main.humidity}}°c</div>\n          <div class=\"mt-1\">{{item.weather[0].description}}</div>\n        </b-col>\n      </b-row>\n    </transition>\n  </b-card>\n</template>\n\n<script>\nimport day from '@/assets/img/weather/day.svg'\nimport night from '@/assets/img/weather/night.svg'\nimport cloudyDay from '@/assets/img/weather/cloudy-day-1.svg'\nimport cloudyNight from '@/assets/img/weather/cloudy-night-1.svg'\nimport cloudyDay3 from '@/assets/img/weather/cloudy-day-3.svg'\nimport cloudyNight3 from '@/assets/img/weather/cloudy-night-3.svg'\nimport cloudy from '@/assets/img/weather/cloudy.svg'\nimport rainy3 from '@/assets/img/weather/rainy-3.svg'\nimport rainy4 from '@/assets/img/weather/rainy-4.svg'\nimport snowy5 from '@/assets/img/weather/snowy-5.svg'\nimport thunder from '@/assets/img/weather/thunder.svg'\n\nimport { openweathermapKey } from '@/constants/config'\nimport { mapGetters } from 'vuex'\nexport default {\n  name: 'Weather',\n  data () {\n    return {\n      weatherForecast: null,\n      iconMap: {\n        '01d': day,\n        '01n': night,\n        '02d': cloudyDay,\n        '02n': cloudyNight,\n        '03d': cloudy,\n        '03n': cloudy,\n        '04d': cloudyDay3,\n        '04n': cloudyNight3,\n        '09d': rainy3,\n        '09n': rainy3,\n        '10d': rainy4,\n        '10n': rainy4,\n        '11d': thunder,\n        '11n': thunder,\n        '13d': snowy5,\n        '13n': snowy5,\n        '50d': cloudy,\n        '50n': cloudy\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      getFarm: 'farm/getFarm'\n    })\n  },\n  watch: {\n    'getFarm.info.gps' (newValue, oldValue) {\n      this.getWeather(this.getFarm.info.gps)\n    }\n  },\n  mounted () {\n    if (this.getFarm.info) {\n      this.getWeather(this.getFarm.info.gps)\n    }\n  },\n  methods: {\n    getIcon (icon) {\n      return this.iconMap[icon]\n    },\n    async getWeather (payload) {\n      try {\n        const { data } = await this.axios.get(\n          `https://api.openweathermap.org/data/2.5/forecast`,\n          {\n            params: {\n              lang: 'kr',\n              lat: payload.split(',')[0],\n              lon: payload.split(',')[1],\n              cnt: 6,\n              units: 'metric',\n              appid: openweathermapKey\n            }\n          }\n        )\n        this.weatherForecast = data\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.currentWeatherIcon {\n  width: 10%;\n  height: 10%;\n}\n</style>\n"]}]}