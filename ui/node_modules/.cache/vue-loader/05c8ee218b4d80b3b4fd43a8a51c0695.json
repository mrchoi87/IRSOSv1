{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/views/app/page/control/auto/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/views/app/page/control/auto/list.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport RuleSelect from '@/components/rule/select'\nimport { mapGetters } from 'vuex'\nexport default {\n  props: ['id'],\n  components: {\n    RuleSelect\n  },\n  computed: {\n    ...mapGetters({\n      getFields: 'field/getFields'\n    }),\n    getRuleNonAuto () {\n      let list = []\n      for (const rule of this.ruleList) {\n        if (rule.autoapplying === 0) {\n          list.push(rule)\n        }\n      }\n      return list\n    }\n  },\n  mounted () {\n    this.getRule(this.id)\n  },\n  data () {\n    return {\n      ruleList: []\n    }\n  },\n  methods: {\n    goRuleDetail (id) {\n      this.$router.push(`/control/auto/${this.id}/detail/${id}`)\n    },\n    ruleAddComplate () {\n      this.getRule(this.id)\n    },\n    getField (id) {\n      let name = ''\n      for (const field of this.getFields) {\n        if (field.id === Number(id)) {\n          name = field.name\n          break\n        }\n      }\n      return name\n    },\n    async getRule (id) {\n      try {\n        const { data } = await this.axios.get(`field/${id}/rule`)\n        this.ruleList = data\n      } catch (error) {\n        console.log(error)\n      }\n    },\n    showRuleDialog () {\n      this.$refs.ruleDialog.showRuleDialog()\n    }\n  },\n  beforeRouteUpdate (to, from, next) {\n    console.log()\n    this.getRule(to.params.id)\n    next()\n    // react to route changes...\n    // don't forget to call next()\n  }\n}\n",{"version":3,"sources":["list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/views/app/page/control/auto","sourcesContent":["<template>\n  <div class=\"col-xxs-12 mx-auto my-auto\" style=\"padding:15px\">\n    <h4 class=\"c-grey-900 mB-30\">{{getField(id)}} 작동규칙 리스트</h4>\n\n    <RuleSelect ref=\"ruleDialog\" :complateFn=\"goRuleDetail\" :fieldId=\"id\"></RuleSelect>\n\n    <b-row class>\n      <b-col lg=\"12\" class=\"mb-5\">\n        <el-card class=\"box-card\" shadow=\"hover\" :body-style=\"{ padding: '20px'}\">\n          <b-row>\n            <b-col lg=\"4\">\n              <el-card class=\"box-card new\" shadow=\"hover\" :body-style=\"{ padding: '0px'}\">\n                <div @click=\"showRuleDialog\" style=\"height:100%\">\n                  <i class=\"el-icon-circle-plus\"></i>\n                  <div class=\"el-upload__text\">작동규칙 추가</div>\n                </div>\n              </el-card>\n            </b-col>\n            <b-col lg=\"8\">\n              <b-row class=\"mt-4\">\n                <b-col lg=\"4\">\n                  <div>\n                    <font class=\"text-muted mb-0\">필터</font>\n                    <p class=\"pl-1\">센싱 값을 조작하는데 도움이 되는 룰</p>\n                  </div>\n                </b-col>\n                <b-col lg=\"8\">\n                  <div>\n                    <font class=\"text-muted mb-0\">기본지표</font>\n                    <p class=\"pl-1\">온실 기본 인자로 자동으로 추가되며, 사용자가 관리하지 않는 룰</p>\n                  </div>\n                </b-col>\n                <b-col lg=\"4\">\n                  <div>\n                    <font class=\"text-muted mb-0\">구동기(창,스위치,양액기)제어</font>\n                    <p class=\"pl-1\">기본적인 구동기 제어 룰</p>\n                  </div>\n                </b-col>\n                <b-col lg=\"8\">\n                  <div>\n                    <font class=\"text-muted mb-0\">주요지표</font>\n                    <p class=\"pl-1\">온실 내부의 주요한 인자를 확인할 수 있도록 하는 룰</p>\n                  </div>\n                </b-col>\n                <b-col lg=\"4\">\n                  <div>\n                    <font class=\"text-muted mb-0\">사용자정의</font>\n                    <p class=\"pl-1\">사용자가 정의하는 룰</p>\n                  </div>\n                </b-col>\n                <b-col lg=\"8\">\n                  <div>\n                    <font class=\"text-muted mb-0\">특수지표</font>\n                    <p class=\"pl-1\">특별한 의미를 갖는 값을 계산하기 위한 룰</p>\n                  </div>\n                </b-col>\n              </b-row>\n            </b-col>\n          </b-row>\n        </el-card>\n      </b-col>\n    </b-row>\n\n    <b-row>\n      <b-col lg=\"12\" class=\"mb-5\">\n        <el-card class=\"box-card\" shadow=\"hover\" :body-style=\"{ padding: '0px'}\">\n          <el-table\n            @row-click=\"(row)=>goRuleDetail(row.id)\"\n            :data=\"getRuleNonAuto\"\n            style=\"width: 100%\"\n            :default-sort=\"{prop: 'groupname', order: 'ascending'}\"\n          >\n            <el-table-column prop=\"groupname\" label=\"그룹\" width=\"180\" sortable align=\"center\"></el-table-column>\n            <el-table-column prop=\"name\" label=\"이름\" align=\"center\"></el-table-column>\n            <el-table-column label=\"사용여부\" prop=\"used\" sortable align=\"center\">\n              <template slot-scope=\"scope\">\n                <el-tag\n                  effect=\"dark\"\n                  :type=\"scope.row.used === 0 ? 'info' : 'success'\"\n                >{{scope.row.used === 0 ? '중지중' : '사용중'}}</el-tag>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-card>\n      </b-col>\n    </b-row>\n\n    <!-- <b-row class=\"pl-4 pr-4\">\n      <b-col sm=\"6\" lg=\"4\" xl=\"3\" class=\"mb-5\" v-for=\"(rule,index) in getRuleNonAuto\" :key=\"index\">\n        <el-card class=\"box-card\" style=\"height: 220px;cursor: pointer;\" shadow=\"hover\">\n          <div slot=\"header\" class=\"p-15\" @click=\"goRuleDetail(rule.id)\">\n            <span>{{rule.name}}</span>\n          </div>\n          <div @click=\"goRuleDetail(rule.id)\" class=\"w-100 h-100 p-15\">\n            <div>사용여부 : {{rule.used === 0 ? '중지' : '사용'}}</div>\n            <div>구역 : {{rule.field_id === 0 ? '농장' : getField(rule.field_id)}}</div>\n            <div>그룹 : {{rule.groupname}}</div>\n          </div>\n        </el-card>\n      </b-col>\n    </b-row>-->\n  </div>\n</template>\n<script>\nimport RuleSelect from '@/components/rule/select'\nimport { mapGetters } from 'vuex'\nexport default {\n  props: ['id'],\n  components: {\n    RuleSelect\n  },\n  computed: {\n    ...mapGetters({\n      getFields: 'field/getFields'\n    }),\n    getRuleNonAuto () {\n      let list = []\n      for (const rule of this.ruleList) {\n        if (rule.autoapplying === 0) {\n          list.push(rule)\n        }\n      }\n      return list\n    }\n  },\n  mounted () {\n    this.getRule(this.id)\n  },\n  data () {\n    return {\n      ruleList: []\n    }\n  },\n  methods: {\n    goRuleDetail (id) {\n      this.$router.push(`/control/auto/${this.id}/detail/${id}`)\n    },\n    ruleAddComplate () {\n      this.getRule(this.id)\n    },\n    getField (id) {\n      let name = ''\n      for (const field of this.getFields) {\n        if (field.id === Number(id)) {\n          name = field.name\n          break\n        }\n      }\n      return name\n    },\n    async getRule (id) {\n      try {\n        const { data } = await this.axios.get(`field/${id}/rule`)\n        this.ruleList = data\n      } catch (error) {\n        console.log(error)\n      }\n    },\n    showRuleDialog () {\n      this.$refs.ruleDialog.showRuleDialog()\n    }\n  },\n  beforeRouteUpdate (to, from, next) {\n    console.log()\n    this.getRule(to.params.id)\n    next()\n    // react to route changes...\n    // don't forget to call next()\n  }\n}\n</script>\n\n<style  scoped>\ndiv >>> .el-card__header {\n  background-color: #f8f8f8;\n  padding: 0px;\n}\ndiv >>> .el-card__body {\n  padding: 0px;\n  width: 100%;\n  height: 100%;\n}\n\n.new {\n  background-color: #fff;\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  height: 220px;\n  text-align: center;\n  position: relative;\n  overflow: hidden;\n  cursor: pointer;\n}\n.new:hover {\n  border-color: #409eff;\n}\n\n.new .el-icon-circle-plus {\n  font-size: 67px;\n  color: #c0c4cc;\n  margin: 70px 0 16px;\n  line-height: 50px;\n}\n\n.new .el-upload__text {\n  color: #606266;\n  font-size: 14px;\n  text-align: center;\n}\n</style>\n"]}]}