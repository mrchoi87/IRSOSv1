{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/FarmInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/FarmInfo.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from 'vuex'\r\nexport default {\r\n  components: {},\r\n  data () {\r\n    return {\r\n      viewDaumPost: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getFarm: 'farm/getFarm'\r\n    })\r\n  },\r\n  methods: {\r\n    postResult (addressResult) {\r\n      // eslint-disable-next-line no-undef\r\n      var geocoder = new daum.maps.services.Geocoder()\r\n      let self = this\r\n      geocoder.addressSearch(addressResult.address, function (\r\n        gpsResult,\r\n        status\r\n      ) {\r\n        if (status === 'OK') {\r\n          self.getFarm.info.address = addressResult.address\r\n          self.getFarm.info.postcode = addressResult.zonecode\r\n          self.getFarm.info.gps = `${gpsResult[0].y},${gpsResult[0].x}`\r\n          self.viewDaumPost = false\r\n        } else {\r\n          self.$notify({\r\n            title: '실패',\r\n            message: '좌표 변환을 실패 하였습니다 주소 검색을 다시 해 주세요',\r\n            type: 'error'\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handlePost () {\r\n      this.viewDaumPost = true\r\n    },\r\n    async formSubmit () {\r\n      try {\r\n        await this.axios.put('farm', this.getFarm)\r\n        this.$emit('done')\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  },\r\n  async mounted () {\r\n\r\n  }\r\n}\r\n",{"version":3,"sources":["FarmInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"FarmInfo.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <b-card no-body class=\"p-20\">\r\n    <div class=\"mb-5\">\r\n      <div class=\"float-left\">\r\n        <div class=\"d-inline-block\">\r\n          <h5 class=\"d-inline\">농장 정보</h5>\r\n        </div>\r\n      </div>\r\n      <el-button class=\"float-right\" type=\"primary\" @click=\"formSubmit\">변경</el-button>\r\n    </div>\r\n\r\n    <el-form label-position=\"left\" label-width=\"80px\" v-if=\"getFarm.info\">\r\n      <el-form-item label=\"농장주\" class=\"mb-1\">\r\n        <el-input v-model=\"getFarm.name\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"연락처\" class=\"mb-0\">\r\n        <el-input v-model=\"getFarm.info.telephone\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"주소\" class=\"mb-0\">{{getFarm.info.address}}</el-form-item>\r\n      <el-button @click=\"handlePost\" class=\"w-100\">주소 검색</el-button>\r\n\r\n      <transition name=\"slide-fade\">\r\n        <VueDaumPostcode\r\n          v-if=\"viewDaumPost\"\r\n          @complete=\"postResult\"\r\n          :animation=\"false\"\r\n          :hide-eng-btn=\"false\"\r\n        />\r\n      </transition>\r\n    </el-form>\r\n  </b-card>\r\n</template>\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nexport default {\r\n  components: {},\r\n  data () {\r\n    return {\r\n      viewDaumPost: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getFarm: 'farm/getFarm'\r\n    })\r\n  },\r\n  methods: {\r\n    postResult (addressResult) {\r\n      // eslint-disable-next-line no-undef\r\n      var geocoder = new daum.maps.services.Geocoder()\r\n      let self = this\r\n      geocoder.addressSearch(addressResult.address, function (\r\n        gpsResult,\r\n        status\r\n      ) {\r\n        if (status === 'OK') {\r\n          self.getFarm.info.address = addressResult.address\r\n          self.getFarm.info.postcode = addressResult.zonecode\r\n          self.getFarm.info.gps = `${gpsResult[0].y},${gpsResult[0].x}`\r\n          self.viewDaumPost = false\r\n        } else {\r\n          self.$notify({\r\n            title: '실패',\r\n            message: '좌표 변환을 실패 하였습니다 주소 검색을 다시 해 주세요',\r\n            type: 'error'\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handlePost () {\r\n      this.viewDaumPost = true\r\n    },\r\n    async formSubmit () {\r\n      try {\r\n        await this.axios.put('farm', this.getFarm)\r\n        this.$emit('done')\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  },\r\n  async mounted () {\r\n\r\n  }\r\n}\r\n</script>\r\n"]}]}