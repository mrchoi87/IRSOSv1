{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/components/Place.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/components/Place.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { cropCode } from '@/constants/config'\r\nimport MapSearch from '@/components/MapSearch'\r\nimport { mapGetters, mapActions } from 'vuex'\r\nexport default {\r\n  components: {\r\n    MapSearch\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getFields: 'field/getFields'\r\n    })\r\n  },\r\n  watch: {\r\n    getFields (n) {\r\n      this.fields = this._.cloneDeep(n)\r\n    }\r\n  },\r\n  mounted () {\r\n    this.fetchDataField()\r\n    // this.fields = this._.cloneDeep(this.getFields)\r\n  },\r\n  data () {\r\n    return {\r\n      dialogVisible: false,\r\n      cropCode: cropCode,\r\n      fields: [],\r\n      selectData: [\r\n        { label: '외부', value: 'local' },\r\n        { label: '온실', value: 'greenhouse' }\r\n      ],\r\n      newPlace: {\r\n        tempMode: 'new',\r\n        address: '',\r\n        name: '',\r\n        fieldtype: 'greenhouse',\r\n        latitude: 33.450701,\r\n        longitude: 126.570667,\r\n        cropinfo: {\r\n          crop: '',\r\n          plantdate: ''\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchDataField: 'field/fetchDataField'\r\n    }),\r\n    mapNewResult (data) {\r\n      this.newPlace.address = data.address\r\n      this.newPlace.latitude = data.latlng.getLat()\r\n      this.newPlace.longitude = data.latlng.getLng()\r\n    },\r\n    mapResult (data) {\r\n      this.fields[data.index].address = data.address\r\n      this.fields[data.index].data.lat.value = data.latlng.getLat()\r\n      this.fields[data.index].data.lng.value = data.latlng.getLng()\r\n    },\r\n    mapRelayout (index) {\r\n      this.$refs.map[index].mapRelayout()\r\n    },\r\n    getCrop (id) {\r\n      let crop = this.cropCode.filter(item => item.id === id)\r\n      if (crop[0] === undefined) {\r\n        return ''\r\n      }\r\n      return crop[0].name\r\n    },\r\n    newPlaceClear () {\r\n      this.dialogVisible = false\r\n      this.newPlace = {\r\n        tempMode: 'new',\r\n        address: '',\r\n        name: '',\r\n        fieldtype: 'greenhouse',\r\n        latitude: 33.450701,\r\n        longitude: 126.570667,\r\n        cropinfo: {\r\n          crop: '',\r\n          plantdate: ''\r\n        }\r\n      }\r\n    },\r\n    async newPlaceSave () {\r\n      try {\r\n        await this.axios.post('field', this.newPlace)\r\n        this.newPlaceClear()\r\n        try {\r\n          this.$refs.mapNew.clear()\r\n        } catch (error) {\r\n\r\n        }\r\n        this.$notify({\r\n          title: '성공',\r\n          message: '구역 정보 추가 하였습니다.',\r\n          type: 'success'\r\n        })\r\n        this.fetchDataField()\r\n      } catch (error) {\r\n        console.log(error)\r\n        this.$notify({\r\n          title: '실패',\r\n          message: '구역 정보 추가 실패 하였습니다.',\r\n          type: 'error'\r\n        })\r\n      }\r\n    },\r\n    async placeDelete (index) {\r\n      try {\r\n        const item = this.fields[index]\r\n        const { data } = await this.axios.delete(`field/${item.id}`, item)\r\n\r\n        if (data) {\r\n          this.$notify({\r\n            title: '성공',\r\n            message: '온실을 삭제 하였습니다.',\r\n            type: 'success'\r\n          })\r\n          this.fetchDataField()\r\n        } else {\r\n          this.$notify({\r\n            title: '실패',\r\n            message: '온실에 장비가 설정 되어 있습니다. 장비를 제거 해 주세요',\r\n            type: 'error'\r\n          })\r\n        }\r\n      } catch (error) {\r\n        this.$notify({\r\n          title: '성공',\r\n          message: '온실 삭제를 실패 하였습니다.',\r\n          type: 'error'\r\n        })\r\n        console.log(error)\r\n      }\r\n    },\r\n    async placeModify (index) {\r\n      try {\r\n        const item = this.fields[index]\r\n        if (item.plantdate && item.plantdate.length > 0) {\r\n          item.plantdate = this.$date().format(item.plantdate, 'YYYY-MM-DD')\r\n        } else {\r\n          delete item.plantdate\r\n        }\r\n        await this.axios.put(`field/${item.id}`, item)\r\n\r\n        this.$notify({\r\n          title: '성공',\r\n          message: '구역 정보 수정 하였습니다.',\r\n          type: 'success'\r\n        })\r\n        this.fetchDataField()\r\n        this.$emit('nextBtn')\r\n      } catch (error) {\r\n        this.$notify({\r\n          title: '실패',\r\n          message: '온실 정보 수정 실패 하였습니다.',\r\n          type: 'error'\r\n        })\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Place.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"Place.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog\r\n      title=\"온실 추가\"\r\n      :visible.sync=\"dialogVisible\"\r\n      width=\"40%\"\r\n      top=\"2vh\"\r\n      :before-close=\"()=>dialogVisible=false\"\r\n    >\r\n      <div class=\"p-10\">\r\n        <h5 class=\"d-inline\">온실 정보를 입력 하세요</h5>\r\n        <el-form class=\"mt-4\" label-position=\"left\" label-width=\"100px\">\r\n          <el-form-item label=\"이름\">\r\n            <el-input v-model=\"newPlace.name\" placeholder=\"온실 이름을 입력 하세요\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"온실 작물\">\r\n            <el-select\r\n              v-model=\"newPlace.cropinfo.crop\"\r\n              placeholder=\"재배하는 작물을 선택 하세요\"\r\n              style=\"width:100%\"\r\n            >\r\n              <el-option\r\n                v-for=\"item in cropCode\"\r\n                :key=\"item.id\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"재배일\">\r\n            <el-date-picker\r\n              style=\"width:100%\"\r\n              v-model=\"newPlace.cropinfo.plantdate\"\r\n              type=\"date\"\r\n              value-format=\"yyyy-MM-dd\"\r\n              placeholder=\"재배 시작일을 선택 하세요\"\r\n            ></el-date-picker>\r\n          </el-form-item>\r\n          <el-form-item label=\"주소\">\r\n            <MapSearch\r\n              ref=\"mapNew\"\r\n              :lat=\"newPlace.latitude\"\r\n              :lng=\"newPlace.longitude\"\r\n              @mapResult=\"mapNewResult\"\r\n            />\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"newPlaceClear\">취소</el-button>\r\n        <el-button type=\"primary\" @click=\"newPlaceSave\">저장</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <b-row class=\"pl-4 pr-4\">\r\n      <b-col sm=\"6\" lg=\"4\" xl=\"3\" class=\"mb-5\">\r\n        <div class=\"new\" @click=\"dialogVisible = true\">\r\n          <i class=\"el-icon-circle-plus\"></i>\r\n          <div class=\"el-upload__text\">온실 추가</div>\r\n        </div>\r\n      </b-col>\r\n      <b-col sm=\"6\" lg=\"4\" xl=\"3\" class=\"mb-5\" v-for=\"(item,index) in fields\" :key=\"index\">\r\n        <b-card class no-body style=\"height: 320px;\">\r\n          <div class=\"position-absolute card-top-buttons\">\r\n            <el-popover\r\n              placement=\"right\"\r\n              width=\"500\"\r\n              trigger=\"click\"\r\n              @after-enter=\"mapRelayout(index)\"\r\n            >\r\n              <div class=\"p-10\">\r\n                <h5 class=\"d-inline\">온실 정보 수정</h5>\r\n                <el-form class=\"mt-4\" label-position=\"left\" label-width=\"100px\">\r\n                  <el-form-item label=\"이름\">\r\n                    <el-input v-model=\"item.name\"></el-input>\r\n                  </el-form-item>\r\n                  <template v-if=\"item.fieldtype === 'greenhouse'\">\r\n                    <el-form-item label=\"온실 작물\">\r\n                      <el-select v-model=\"item.data.crop.value\" placeholder=\"Select\">\r\n                        <el-option\r\n                          v-for=\"item in cropCode\"\r\n                          :key=\"item.id\"\r\n                          :label=\"item.name\"\r\n                          :value=\"item.id\"\r\n                        ></el-option>\r\n                      </el-select>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"재배일\">\r\n                      <el-date-picker\r\n                        v-model=\"item.data.plantdate.value\"\r\n                        type=\"date\"\r\n                        value-format=\"yyyy-MM-dd\"\r\n                        placeholder=\"Pick a day\"\r\n                      ></el-date-picker>\r\n                    </el-form-item>\r\n                  </template>\r\n                  <el-form-item label=\"주소\" v-if=\"item.data.lat\">\r\n                    <MapSearch\r\n                      ref=\"map\"\r\n                      :index=\"index\"\r\n                      :lat=\"item.data.lat.value\"\r\n                      :lng=\"item.data.lng.value\"\r\n                      @mapResult=\"mapResult\"\r\n                    />\r\n                  </el-form-item>\r\n                </el-form>\r\n                <el-button class=\"float-right mb-2 ml-4\" @click=\"placeDelete(index)\" type=\"primary\">삭제</el-button>\r\n                <el-button class=\"float-right mb-2\" @click=\"placeModify(index)\" type=\"primary\">변경</el-button>\r\n              </div>\r\n              <el-button slot=\"reference\" icon=\"el-icon-edit\" circle></el-button>\r\n            </el-popover>\r\n          </div>\r\n          <img\r\n            :src=\"item.fieldtype === 'local' ? '/assets/img/local.jpg' : '/assets/img/greenhouse.jpg'\"\r\n            alt=\"Detail\"\r\n            class=\"card-img-top\"\r\n          />\r\n          <b-badge variant=\"primary\" pill class=\"position-absolute badge-top-left\">{{item.tempMode}}</b-badge>\r\n          <b-card-body>\r\n            <p class=\"text-muted mb-0\">이름</p>\r\n            <div class=\"mb-2 ml-3\">{{item.name ? item.name : '&nbsp;' }}</div>\r\n            <p class=\"text-muted mb-0\">작물</p>\r\n            <div class=\"mb-2 ml-3\">{{item.data.crop ? getCrop(item.data.crop.value) : '&nbsp;'}}</div>\r\n            <p class=\"text-muted mb-0\">재배일</p>\r\n            <div class=\"mb-3 ml-3\">{{item.data.plantdate ? item.data.plantdate.value : '&nbsp;'}}</div>\r\n          </b-card-body>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { cropCode } from '@/constants/config'\r\nimport MapSearch from '@/components/MapSearch'\r\nimport { mapGetters, mapActions } from 'vuex'\r\nexport default {\r\n  components: {\r\n    MapSearch\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getFields: 'field/getFields'\r\n    })\r\n  },\r\n  watch: {\r\n    getFields (n) {\r\n      this.fields = this._.cloneDeep(n)\r\n    }\r\n  },\r\n  mounted () {\r\n    this.fetchDataField()\r\n    // this.fields = this._.cloneDeep(this.getFields)\r\n  },\r\n  data () {\r\n    return {\r\n      dialogVisible: false,\r\n      cropCode: cropCode,\r\n      fields: [],\r\n      selectData: [\r\n        { label: '외부', value: 'local' },\r\n        { label: '온실', value: 'greenhouse' }\r\n      ],\r\n      newPlace: {\r\n        tempMode: 'new',\r\n        address: '',\r\n        name: '',\r\n        fieldtype: 'greenhouse',\r\n        latitude: 33.450701,\r\n        longitude: 126.570667,\r\n        cropinfo: {\r\n          crop: '',\r\n          plantdate: ''\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchDataField: 'field/fetchDataField'\r\n    }),\r\n    mapNewResult (data) {\r\n      this.newPlace.address = data.address\r\n      this.newPlace.latitude = data.latlng.getLat()\r\n      this.newPlace.longitude = data.latlng.getLng()\r\n    },\r\n    mapResult (data) {\r\n      this.fields[data.index].address = data.address\r\n      this.fields[data.index].data.lat.value = data.latlng.getLat()\r\n      this.fields[data.index].data.lng.value = data.latlng.getLng()\r\n    },\r\n    mapRelayout (index) {\r\n      this.$refs.map[index].mapRelayout()\r\n    },\r\n    getCrop (id) {\r\n      let crop = this.cropCode.filter(item => item.id === id)\r\n      if (crop[0] === undefined) {\r\n        return ''\r\n      }\r\n      return crop[0].name\r\n    },\r\n    newPlaceClear () {\r\n      this.dialogVisible = false\r\n      this.newPlace = {\r\n        tempMode: 'new',\r\n        address: '',\r\n        name: '',\r\n        fieldtype: 'greenhouse',\r\n        latitude: 33.450701,\r\n        longitude: 126.570667,\r\n        cropinfo: {\r\n          crop: '',\r\n          plantdate: ''\r\n        }\r\n      }\r\n    },\r\n    async newPlaceSave () {\r\n      try {\r\n        await this.axios.post('field', this.newPlace)\r\n        this.newPlaceClear()\r\n        try {\r\n          this.$refs.mapNew.clear()\r\n        } catch (error) {\r\n\r\n        }\r\n        this.$notify({\r\n          title: '성공',\r\n          message: '구역 정보 추가 하였습니다.',\r\n          type: 'success'\r\n        })\r\n        this.fetchDataField()\r\n      } catch (error) {\r\n        console.log(error)\r\n        this.$notify({\r\n          title: '실패',\r\n          message: '구역 정보 추가 실패 하였습니다.',\r\n          type: 'error'\r\n        })\r\n      }\r\n    },\r\n    async placeDelete (index) {\r\n      try {\r\n        const item = this.fields[index]\r\n        const { data } = await this.axios.delete(`field/${item.id}`, item)\r\n\r\n        if (data) {\r\n          this.$notify({\r\n            title: '성공',\r\n            message: '온실을 삭제 하였습니다.',\r\n            type: 'success'\r\n          })\r\n          this.fetchDataField()\r\n        } else {\r\n          this.$notify({\r\n            title: '실패',\r\n            message: '온실에 장비가 설정 되어 있습니다. 장비를 제거 해 주세요',\r\n            type: 'error'\r\n          })\r\n        }\r\n      } catch (error) {\r\n        this.$notify({\r\n          title: '성공',\r\n          message: '온실 삭제를 실패 하였습니다.',\r\n          type: 'error'\r\n        })\r\n        console.log(error)\r\n      }\r\n    },\r\n    async placeModify (index) {\r\n      try {\r\n        const item = this.fields[index]\r\n        if (item.plantdate && item.plantdate.length > 0) {\r\n          item.plantdate = this.$date().format(item.plantdate, 'YYYY-MM-DD')\r\n        } else {\r\n          delete item.plantdate\r\n        }\r\n        await this.axios.put(`field/${item.id}`, item)\r\n\r\n        this.$notify({\r\n          title: '성공',\r\n          message: '구역 정보 수정 하였습니다.',\r\n          type: 'success'\r\n        })\r\n        this.fetchDataField()\r\n        this.$emit('nextBtn')\r\n      } catch (error) {\r\n        this.$notify({\r\n          title: '실패',\r\n          message: '온실 정보 수정 실패 하였습니다.',\r\n          type: 'error'\r\n        })\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style  scoped>\r\n.new {\r\n  background-color: #fff;\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  -webkit-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n  height: 320px;\r\n  text-align: center;\r\n  position: relative;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n}\r\n.new:hover {\r\n  border-color: #409eff;\r\n}\r\n\r\n.new .el-icon-circle-plus {\r\n  font-size: 67px;\r\n  color: #c0c4cc;\r\n  margin: 100px 0 16px;\r\n  line-height: 50px;\r\n}\r\n\r\n.new .el-upload__text {\r\n  color: #606266;\r\n  font-size: 14px;\r\n  text-align: center;\r\n}\r\n</style>\r\n"]}]}