{"remainingRequest":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mrchoi87/farmosV2/ui/src/views/app/page/device/modify.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mrchoi87/farmosV2/ui/src/views/app/page/device/modify.vue","mtime":1607499348989},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mrchoi87/farmosV2/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport modifyDeviceTree from '@/components/modifyDeviceTree'\r\nimport { mapGetters } from 'vuex'\r\nexport default {\r\n  components: {\r\n    modifyDeviceTree\r\n  },\r\n  data: function () {\r\n    return {}\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getFields: 'field/getFields'\r\n    })\r\n  },\r\n  methods: {\r\n    /* async clickManual () {\r\n      try {\r\n        await this.axios.put('device/manual')\r\n        this.$notify({\r\n          title: '성공',\r\n          message: '수동 장비 동기화를 하였습니다',\r\n          type: 'success'\r\n        })\r\n      } catch (error) {\r\n        this.$notify({\r\n          title: '실패',\r\n          message: '수동 장비 동기화 실패 하였습니다',\r\n          type: 'error'\r\n        })\r\n      }\r\n      this.$store.dispatch('observation/fetchDataObservations')\r\n    }, */\r\n    async clickDelete () {\r\n      try {\r\n        let result = this.$refs.deviceTree.getCheckNode()\r\n        result.forEach(element => {\r\n          delete element.children\r\n        })\r\n\r\n        if (result.length === 0) {\r\n          this.$notify({\r\n            title: '경고',\r\n            message: '장비를 선택 하세요.',\r\n            type: 'warning'\r\n          })\r\n          return\r\n        }\r\n        const { data } = await this.axios.delete('device', { data: result })\r\n\r\n        if (data.result) {\r\n          this.$notify({\r\n            title: '성공',\r\n            message: '장비를 삭제 하였습니다.',\r\n            type: 'success'\r\n          })\r\n          this.$refs.deviceTree.getDevices(true)\r\n          this.$store.dispatch('device/fetchDataDevice')\r\n          this.$store.dispatch('observation/fetchDataObservations')\r\n        } else {\r\n          this.$notify({\r\n            title: '실패',\r\n            message: '장비가 구역에 등록 되어 있습니다. 제거를 먼저 하세요.',\r\n            type: 'error'\r\n          })\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["modify.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"modify.vue","sourceRoot":"src/views/app/page/device","sourcesContent":["<template>\r\n  <div class=\"col-xxs-12 mx-auto my-auto\" style=\"padding:15px\">\r\n    <h4 class=\"c-grey-900\">장비 관리</h4>\r\n\r\n    <b-row class=\"mb-3\">\r\n      <b-col xxs=\"12\">\r\n        <!-- <b-button class=\"float-right\" @click=\"clickDelete\">삭제</b-button> -->\r\n        <b-button @click=\"clickDelete\" class=\"mr-2\">삭제</b-button>\r\n        <!-- <b-button @click=\"clickManual\">수동장비 동기화</b-button> -->\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <div>\r\n      <b-row>\r\n        <template>\r\n          <b-col xxs=\"12\">\r\n            <modifyDeviceTree ref=\"deviceTree\" />\r\n          </b-col>\r\n        </template>\r\n      </b-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport modifyDeviceTree from '@/components/modifyDeviceTree'\r\nimport { mapGetters } from 'vuex'\r\nexport default {\r\n  components: {\r\n    modifyDeviceTree\r\n  },\r\n  data: function () {\r\n    return {}\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getFields: 'field/getFields'\r\n    })\r\n  },\r\n  methods: {\r\n    /* async clickManual () {\r\n      try {\r\n        await this.axios.put('device/manual')\r\n        this.$notify({\r\n          title: '성공',\r\n          message: '수동 장비 동기화를 하였습니다',\r\n          type: 'success'\r\n        })\r\n      } catch (error) {\r\n        this.$notify({\r\n          title: '실패',\r\n          message: '수동 장비 동기화 실패 하였습니다',\r\n          type: 'error'\r\n        })\r\n      }\r\n      this.$store.dispatch('observation/fetchDataObservations')\r\n    }, */\r\n    async clickDelete () {\r\n      try {\r\n        let result = this.$refs.deviceTree.getCheckNode()\r\n        result.forEach(element => {\r\n          delete element.children\r\n        })\r\n\r\n        if (result.length === 0) {\r\n          this.$notify({\r\n            title: '경고',\r\n            message: '장비를 선택 하세요.',\r\n            type: 'warning'\r\n          })\r\n          return\r\n        }\r\n        const { data } = await this.axios.delete('device', { data: result })\r\n\r\n        if (data.result) {\r\n          this.$notify({\r\n            title: '성공',\r\n            message: '장비를 삭제 하였습니다.',\r\n            type: 'success'\r\n          })\r\n          this.$refs.deviceTree.getDevices(true)\r\n          this.$store.dispatch('device/fetchDataDevice')\r\n          this.$store.dispatch('observation/fetchDataObservations')\r\n        } else {\r\n          this.$notify({\r\n            title: '실패',\r\n            message: '장비가 구역에 등록 되어 있습니다. 제거를 먼저 하세요.',\r\n            type: 'error'\r\n          })\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}